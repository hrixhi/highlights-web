{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\Meeting.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Text, TouchableOpacity, View } from \"./Themed\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { fetchAPI } from \"../graphql/FetchAPI\";\nimport { editMeeting, getMeetingLink, getMeetingStatus, markAttendance, getAttendancesForChannel, getPastDates, getRecordings, deleteRecording } from \"../graphql/QueriesAndMutations\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport SubscriberCard from \"./SubscriberCard\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport Alert from \"../components/Alert\";\nimport AttendanceList from \"./AttendanceList\";\nimport moment from \"moment\";\nimport { PreferredLanguageText } from \"../helpers/LanguageContext\";\n\nvar Meeting = function Meeting(props) {\n  var _useState = useState(new Animated.Value(0)),\n      _useState2 = _slicedToArray(_useState, 1),\n      modalAnimation = _useState2[0];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isOwner = _useState6[0],\n      setIsOwner = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      meetingOn = _useState8[0],\n      setMeetingOn = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      pastAttendances = _useState10[0],\n      setPastAttendances = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      pastMeetings = _useState12[0],\n      setPastMeetings = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showAttendances = _useState14[0],\n      setShowAttendances = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      attendances = _useState16[0],\n      setAttendances = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      meetingLink = _useState18[0],\n      setMeetingLink = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      channelAttendances = _useState20[0],\n      setChannelAttendances = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      viewChannelAttendance = _useState22[0],\n      setViewChannelAttendance = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      showPastMeetings = _useState24[0],\n      setShowPastMeetings = _useState24[1];\n\n  var _useState25 = useState(Math.random()),\n      _useState26 = _slicedToArray(_useState25, 2),\n      reloadKey = _useState26[0],\n      setReloadKey = _useState26[1];\n\n  var classroomNotInSession = PreferredLanguageText(\"classroomNotInSession\");\n  var loadChannelAttendances = useCallback(function () {\n    var server = fetchAPI(\"\");\n    server.query({\n      query: getAttendancesForChannel,\n      variables: {\n        channelId: props.channelId\n      }\n    }).then(function _callee(res) {\n      var u, user, _attendances, userAttendances;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(res.data && res.data.attendance.getAttendancesForChannel)) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 3:\n              u = _context.sent;\n\n              if (u) {\n                user = JSON.parse(u);\n\n                if (user._id.toString().trim() === props.channelCreatedBy.toString().trim()) {\n                  setChannelAttendances(res.data.attendance.getAttendancesForChannel);\n                } else {\n                  _attendances = res.data.attendance.getAttendancesForChannel.find(function (u) {\n                    return u.userId.toString().trim() === user._id.toString().trim();\n                  });\n                  userAttendances = [_objectSpread({}, _attendances)];\n                  setChannelAttendances(userAttendances);\n                }\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  }, [props.channelId]);\n  useEffect(function () {\n    var server = fetchAPI('');\n    server.query({\n      query: getRecordings,\n      variables: {\n        channelId: props.channelId\n      }\n    }).then(function (res) {\n      if (res.data && res.data.channel.getRecordings) {\n        setPastMeetings(res.data.channel.getRecordings);\n      }\n    });\n  }, [props.channelId, meetingOn, reloadKey]);\n  useEffect(function () {\n    loadChannelAttendances();\n    setPastAttendances([]);\n    loadPastSchedule();\n    setPastMeetings([]);\n    setShowAttendances(false);\n    setIsOwner(false);\n    setViewChannelAttendance(false);\n  }, [props.channelId]);\n  var loadPastSchedule = useCallback(function () {\n    var server = fetchAPI(\"\");\n    server.query({\n      query: getPastDates,\n      variables: {\n        channelId: props.channelId\n      }\n    }).then(function (res) {\n      if (res.data && res.data.attendance.getPastDates) {\n        setPastAttendances(res.data.attendance.getPastDates);\n      }\n    });\n  }, [props.channelId]);\n  var loadMeetingStatus = useCallback(function () {\n    var server = fetchAPI(\"\");\n    server.query({\n      query: getMeetingStatus,\n      variables: {\n        channelId: props.channelId\n      }\n    }).then(function _callee2(res) {\n      var u, user;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(res.data && res.data.channel && res.data.channel.getMeetingStatus)) {\n                _context2.next = 8;\n                break;\n              }\n\n              setMeetingOn(true);\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 4:\n              u = _context2.sent;\n\n              if (u) {\n                user = JSON.parse(u);\n                server.query({\n                  query: getMeetingLink,\n                  variables: {\n                    userId: user._id,\n                    channelId: props.channelId\n                  }\n                }).then(function (res) {\n                  if (res && res.data.channel.getMeetingLink && res.data.channel.getMeetingLink !== \"error\") {\n                    setMeetingLink(res.data.channel.getMeetingLink);\n                  }\n                });\n              }\n\n              _context2.next = 9;\n              break;\n\n            case 8:\n              setMeetingOn(false);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, [props.channelId]);\n  useEffect(function () {\n    (function _callee3() {\n      var u, user;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 2:\n              u = _context3.sent;\n\n              if (u) {\n                user = JSON.parse(u);\n                setName(user.displayName);\n\n                if (user._id.toString().trim() === props.channelCreatedBy) {\n                  setIsOwner(true);\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    loadMeetingStatus();\n    Animated.timing(modalAnimation, {\n      toValue: 1,\n      duration: 150,\n      useNativeDriver: true\n    }).start();\n  }, [props.channelCreatedBy, props.channelId]);\n  var windowHeight = Dimensions.get(\"window\").width < 1024 ? Dimensions.get(\"window\").height - 30 : Dimensions.get(\"window\").height;\n  var updateMeetingStatus = useCallback(function () {\n    var server = fetchAPI(\"\");\n    server.mutate({\n      mutation: editMeeting,\n      variables: {\n        channelId: props.channelId,\n        meetingOn: !meetingOn\n      }\n    }).then(function (res) {\n      if (res.data && res.data.channel && res.data.channel.editMeeting) {\n        loadMeetingStatus();\n        props.refreshMeetingStatus();\n      }\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  }, [meetingOn, props.channelId]);\n\n  if (name === \"\") {\n    return null;\n  }\n\n  var toolbarButtons = [\"microphone\", \"camera\", \"closedcaptions\", \"desktop\", \"fullscreen\", \"fodeviceselection\", \"hangup\", \"profile\", \"chat\", \"recording\", \"etherpad\", \"sharedvideo\", \"raisehand\", \"videoquality\", \"filmstrip\", \"tileview\", \"download\", \"security\"];\n\n  if (isOwner) {\n    toolbarButtons.push(\"mute-everyone\", \"mute-video-everyone\", \"stats\", \"settings\", \"livestreaming\");\n  }\n\n  var renderPastMeetings = function renderPastMeetings() {\n    return pastMeetings.length === 0 ? React.createElement(View, {\n      style: {\n        backgroundColor: 'white',\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: {\n        width: '100%',\n        color: '#a2a2aa',\n        fontSize: 22,\n        paddingTop: 100,\n        paddingHorizontal: 5,\n        fontFamily: 'inter',\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }\n    }, PreferredLanguageText('noPastMeetings'))) : pastMeetings.map(function (date, index) {\n      return React.createElement(View, {\n        style: styles.col,\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 24\n        }\n      }, React.createElement(View, {\n        style: styles.swiper,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        key: 'textPage',\n        style: styles.card,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          if (Platform.OS == 'web') {\n            window.open(date.url, '_blank');\n          } else {\n            Linking.openURL(date.url);\n          }\n        },\n        style: {\n          flexDirection: 'row',\n          backgroundColor: '#f4f4f6',\n          width: '90%'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }\n      }, React.createElement(Image, {\n        height: 45,\n        width: 75,\n        style: {\n          height: 45,\n          width: 75,\n          borderRadius: 5\n        },\n        source: {\n          uri: date.thumbnail\n        },\n        resizeMode: 'contain',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 33\n        }\n      }), React.createElement(View, {\n        style: {\n          backgroundColor: '#f4f4f6',\n          width: '100%',\n          flexDirection: 'row',\n          display: 'flex',\n          marginLeft: 20\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        ellipsizeMode: 'tail',\n        numberOfLines: 1,\n        style: styles.title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 37\n        }\n      }, moment(new Date(date.startTime)).format('MMMM Do YYYY, h:mm a')))), isOwner ? React.createElement(TouchableOpacity, {\n        style: {\n          backgroundColor: '#f4f4f6',\n          width: '10%'\n        },\n        onPress: function onPress() {\n          Alert(\"Delete past lecture ?\", \"\", [{\n            text: \"Cancel\",\n            style: \"cancel\",\n            onPress: function onPress() {\n              return;\n            }\n          }, {\n            text: \"Delete\",\n            onPress: function onPress() {\n              var server;\n              return _regeneratorRuntime.async(function onPress$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      server = fetchAPI(\"\");\n                      server.mutate({\n                        mutation: deleteRecording,\n                        variables: {\n                          recordID: date.recordID\n                        }\n                      }).then(function (res) {\n                        if (res.data && res.data.channel.deleteRecording) {\n                          console.log(res.data);\n                          Alert(\"Recording Deleted!\");\n                          setReloadKey(Math.random());\n                        }\n                      });\n\n                    case 2:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }\n          }]);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: {\n          width: '100%',\n          color: '#a2a2aa',\n          fontSize: 15,\n          paddingHorizontal: 5,\n          fontFamily: 'inter',\n          flex: 1\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 41\n        }\n      }, React.createElement(Ionicons, {\n        name: \"trash-outline\",\n        size: 17,\n        color: \"#d91d56\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 45\n        }\n      }))) : null)));\n    });\n  };\n\n  var mainClassroomView = React.createElement(ScrollView, {\n    style: {\n      width: \"100%\",\n      height: windowHeight,\n      backgroundColor: \"#fff\",\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: {\n      width: \"100%\",\n      backgroundColor: \"white\",\n      padding: 20,\n      opacity: modalAnimation,\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      alignSelf: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: \"100%\",\n      textAlign: \"center\",\n      paddingTop: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      flexDirection: \"row\",\n      paddingBottom: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    ellipsizeMode: \"tail\",\n    style: {\n      fontSize: 11,\n      paddingBottom: 20,\n      textTransform: \"uppercase\",\n      flex: 1,\n      lineHeight: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  }, PreferredLanguageText(\"classroom\"))), React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      width: \"100%\",\n      backgroundColor: \"white\",\n      flexDirection: Dimensions.get(\"window\").width < 768 ? \"column\" : \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 21\n    }\n  }, isOwner ? React.createElement(View, {\n    style: {\n      width: Dimensions.get(\"window\").width < 768 ? \"100%\" : \"33.33%\",\n      marginBottom: 25,\n      backgroundColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"white\",\n      height: 40,\n      marginTop: 20,\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 37\n    }\n  }, React.createElement(Switch, {\n    value: meetingOn,\n    onValueChange: function onValueChange() {\n      return updateMeetingStatus();\n    },\n    style: {\n      height: 20,\n      marginRight: 20\n    },\n    trackColor: {\n      false: \"#f4f4f6\",\n      true: \"#3B64F8\"\n    },\n    activeThumbColor: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 41\n    }\n  }), React.createElement(View, {\n    style: {\n      width: \"100%\",\n      backgroundColor: \"white\",\n      paddingTop: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: \"#a2a2aa\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 45\n    }\n  }, PreferredLanguageText(\"initiateMeeting\")))), React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: \"#a2a2aa\",\n      paddingTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 37\n    }\n  }, \"Restart switch if you cannot join.\"))) : null, React.createElement(View, {\n    style: {\n      width: Dimensions.get(\"window\").width < 768 ? \"100%\" : \"33.33%\",\n      backgroundColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function _callee4() {\n      var u, user, server;\n      return _regeneratorRuntime.async(function _callee4$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!meetingOn) {\n                _context5.next = 8;\n                break;\n              }\n\n              window.open(meetingLink, \"_blank\");\n              _context5.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 4:\n              u = _context5.sent;\n\n              if (u) {\n                user = JSON.parse(u);\n                server = fetchAPI(\"\");\n                server.mutate({\n                  mutation: markAttendance,\n                  variables: {\n                    userId: user._id,\n                    channelId: props.channelId\n                  }\n                }).then(function (res) {});\n              }\n\n              _context5.next = 9;\n              break;\n\n            case 8:\n              Alert(classroomNotInSession);\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    style: {\n      backgroundColor: \"white\",\n      overflow: \"hidden\",\n      height: 35,\n      marginTop: 15,\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      lineHeight: 35,\n      color: meetingOn ? \"#fff\" : \"#202025\",\n      fontSize: 12,\n      backgroundColor: meetingOn ? \"#3B64F8\" : \"#f4f4f6\",\n      paddingHorizontal: 25,\n      fontFamily: \"inter\",\n      height: 35,\n      width: 200,\n      borderRadius: 15,\n      textTransform: \"uppercase\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 33\n    }\n  }, PreferredLanguageText(\"enterClassroom\"))), React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: \"#a2a2aa\",\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 29\n    }\n  }, \"Enabled only when classroom in session.\")), React.createElement(View, {\n    style: {\n      width: Dimensions.get(\"window\").width < 768 ? \"100%\" : \"33.33%\",\n      backgroundColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function _callee5() {\n      return _regeneratorRuntime.async(function _callee5$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              setViewChannelAttendance(true);\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    style: {\n      backgroundColor: \"white\",\n      overflow: \"hidden\",\n      height: 35,\n      marginTop: 15,\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      lineHeight: 35,\n      color: \"#202025\",\n      fontSize: 12,\n      backgroundColor: \"#f4f4f6\",\n      paddingHorizontal: 25,\n      fontFamily: \"inter\",\n      height: 35,\n      width: 200,\n      borderRadius: 15,\n      textTransform: \"uppercase\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 33\n    }\n  }, PreferredLanguageText(\"viewAttendance\"))), React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: \"#a2a2aa\",\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 29\n    }\n  }, \"Attendances will only be captured for scheduled lectures.\"))), React.createElement(View, {\n    style: {\n      borderTopColor: '#f4f4f6',\n      borderTopWidth: 1,\n      marginTop: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      height: 15,\n      paddingBottom: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 29\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setShowPastMeetings(!showPastMeetings);\n    },\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      paddingBottom: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      lineHeight: 23,\n      marginRight: 10,\n      color: '#a2a2aa',\n      fontSize: 11,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 33\n    }\n  }, \"RECORDINGS\"), React.createElement(Text, {\n    style: {\n      lineHeight: 21\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 33\n    }\n  }, React.createElement(Ionicons, {\n    size: 14,\n    name: showPastMeetings ? 'caret-down-outline' : 'caret-forward-outline',\n    color: \"#a2a2aa\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 37\n    }\n  }))), showAttendances ? React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 37\n    }\n  }, attendances.length === 0 ? React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      color: '#a2a2aa',\n      fontSize: 22,\n      paddingVertical: 50,\n      paddingHorizontal: 5,\n      fontFamily: 'inter',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 53\n    }\n  }, PreferredLanguageText('noAttendances'))) : attendances.map(function (att, index) {\n    return React.createElement(View, {\n      style: styles.col,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 60\n      }\n    }, React.createElement(SubscriberCard, {\n      hideChevron: true,\n      fadeAnimation: props.fadeAnimation,\n      subscriber: {\n        displayName: att.displayName,\n        fullName: PreferredLanguageText('joinedAt') + ' ' + moment(new Date(att.joinedAt)).format('MMMM Do YYYY, h:mm a')\n      },\n      onPress: function onPress() {},\n      status: !props.cueId ? false : true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 57\n      }\n    }));\n  })) : showPastMeetings ? renderPastMeetings() : null))));\n  var attendanceListView = React.createElement(AttendanceList, {\n    key: JSON.stringify(channelAttendances),\n    channelAttendances: channelAttendances,\n    isOwner: isOwner,\n    pastMeetings: pastAttendances,\n    channelName: props.filterChoice,\n    channelId: props.channelId,\n    closeModal: function closeModal() {\n      Animated.timing(modalAnimation, {\n        toValue: 0,\n        duration: 150,\n        useNativeDriver: true\n      }).start(function () {\n        return props.closeModal();\n      });\n    },\n    hideChannelAttendance: function hideChannelAttendance() {\n      setViewChannelAttendance(false);\n    },\n    reload: function reload() {\n      return loadChannelAttendances();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 9\n    }\n  });\n  return !viewChannelAttendance ? mainClassroomView : attendanceListView;\n};\n\nexport default Meeting;\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: \"white\",\n    height: \"100%\",\n    width: Dimensions.get(\"window\").width < 1024 ? \"100%\" : \"60%\",\n    paddingHorizontal: Dimensions.get(\"window\").width < 1024 ? 20 : 0,\n    alignSelf: \"center\",\n    borderTopRightRadius: 0,\n    borderTopLeftRadius: 0\n  },\n  text: {\n    fontSize: 12,\n    color: \"#a2a2aa\",\n    textAlign: \"left\",\n    paddingHorizontal: 10,\n    paddingTop: 5\n  },\n  col: {\n    width: \"100%\",\n    height: 70,\n    marginBottom: 15,\n    backgroundColor: \"white\"\n  },\n  swiper: {\n    height: '100%',\n    width: 350,\n    maxWidth: '100%',\n    borderRadius: 15,\n    overflow: 'hidden',\n    backgroundColor: 'white'\n  },\n  card: {\n    height: '100%',\n    width: 350,\n    maxWidth: '100%',\n    borderRadius: 15,\n    padding: 13,\n    backgroundColor: '#f4f4f6',\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  meetingText: {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n    backgroundColor: '#f4f4f6'\n  },\n  title: {\n    fontFamily: 'inter',\n    fontSize: 13,\n    width: '100%',\n    paddingTop: 5,\n    color: '#202025'\n  },\n  description: {\n    fontSize: 13,\n    color: '#a2a2aa'\n  }\n});","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/Meeting.tsx"],"names":["React","useState","useEffect","useCallback","Text","TouchableOpacity","View","AsyncStorage","fetchAPI","editMeeting","getMeetingLink","getMeetingStatus","markAttendance","getAttendancesForChannel","getPastDates","getRecordings","deleteRecording","Ionicons","SubscriberCard","ScrollView","Alert","AttendanceList","moment","PreferredLanguageText","Meeting","props","Animated","Value","modalAnimation","name","setName","isOwner","setIsOwner","meetingOn","setMeetingOn","pastAttendances","setPastAttendances","pastMeetings","setPastMeetings","showAttendances","setShowAttendances","attendances","setAttendances","meetingLink","setMeetingLink","channelAttendances","setChannelAttendances","viewChannelAttendance","setViewChannelAttendance","showPastMeetings","setShowPastMeetings","Math","random","reloadKey","setReloadKey","classroomNotInSession","loadChannelAttendances","server","query","variables","channelId","then","res","data","attendance","getItem","u","user","JSON","parse","_id","toString","trim","channelCreatedBy","find","userId","userAttendances","channel","loadPastSchedule","loadMeetingStatus","catch","err","console","log","displayName","timing","toValue","duration","useNativeDriver","start","windowHeight","Dimensions","get","width","height","updateMeetingStatus","mutate","mutation","refreshMeetingStatus","e","toolbarButtons","push","renderPastMeetings","length","backgroundColor","flex","color","fontSize","paddingTop","paddingHorizontal","fontFamily","map","date","index","styles","col","swiper","card","Platform","OS","window","open","url","Linking","openURL","flexDirection","borderRadius","uri","thumbnail","display","marginLeft","title","Date","startTime","format","text","style","onPress","recordID","mainClassroomView","borderTopLeftRadius","borderTopRightRadius","padding","opacity","alignSelf","textAlign","paddingBottom","textTransform","lineHeight","marginBottom","marginTop","marginRight","false","true","overflow","borderTopColor","borderTopWidth","paddingVertical","att","fadeAnimation","fullName","joinedAt","cueId","attendanceListView","stringify","filterChoice","closeModal","StyleSheet","create","screen","maxWidth","justifyContent","meetingText","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Animated, Dimensions, Switch, StyleSheet, Linking, Image, Platform } from \"react-native\";\r\nimport { Text, TouchableOpacity, View } from \"./Themed\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n// import { Jutsu } from 'react-jutsu'\r\nimport { fetchAPI } from \"../graphql/FetchAPI\";\r\nimport {\r\n    editMeeting,\r\n    getMeetingLink,\r\n    getMeetingStatus,\r\n    markAttendance,\r\n    getAttendancesForChannel,\r\n    getPastDates,\r\n    getRecordings,\r\n    deleteRecording,\r\n} from \"../graphql/QueriesAndMutations\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport SubscriberCard from \"./SubscriberCard\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport Alert from \"../components/Alert\";\r\nimport AttendanceList from \"./AttendanceList\";\r\nimport moment from \"moment\";\r\nimport { PreferredLanguageText } from \"../helpers/LanguageContext\";\r\n\r\nconst Meeting: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n    const [modalAnimation] = useState(new Animated.Value(0));\r\n    const [name, setName] = useState(\"\");\r\n    const [isOwner, setIsOwner] = useState(false);\r\n    const [meetingOn, setMeetingOn] = useState(false);\r\n    const [pastAttendances, setPastAttendances] = useState<any[]>([]);\r\n    const [pastMeetings, setPastMeetings] = useState<any[]>([]);\r\n    const [showAttendances, setShowAttendances] = useState(false);\r\n    const [attendances, setAttendances] = useState<any[]>([]);\r\n    const [meetingLink, setMeetingLink] = useState(\"\");\r\n    const [channelAttendances, setChannelAttendances] = useState<any[]>([]);\r\n    const [viewChannelAttendance, setViewChannelAttendance] = useState(false);\r\n    const [showPastMeetings, setShowPastMeetings] = useState(false);\r\n    const [reloadKey, setReloadKey] = useState(Math.random())\r\n    const classroomNotInSession = PreferredLanguageText(\"classroomNotInSession\");\r\n\r\n    const loadChannelAttendances = useCallback(() => {\r\n        const server = fetchAPI(\"\");\r\n        server\r\n            .query({\r\n                query: getAttendancesForChannel,\r\n                variables: {\r\n                    channelId: props.channelId\r\n                }\r\n            })\r\n            .then(async res => {\r\n                if (res.data && res.data.attendance.getAttendancesForChannel) {\r\n                    const u = await AsyncStorage.getItem(\"user\");\r\n                    if (u) {\r\n                        const user = JSON.parse(u);\r\n                        if (user._id.toString().trim() === props.channelCreatedBy.toString().trim()) {\r\n                            // all attendances\r\n                            setChannelAttendances(res.data.attendance.getAttendancesForChannel);\r\n                        } else {\r\n                            // only user's attendances\r\n                            const attendances = res.data.attendance.getAttendancesForChannel.find((u: any) => {\r\n                                return u.userId.toString().trim() === user._id.toString().trim();\r\n                            });\r\n                            const userAttendances = [{ ...attendances }];\r\n                            setChannelAttendances(userAttendances);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n    }, [props.channelId]);\r\n\r\n    useEffect(() => {\r\n        const server = fetchAPI('')\r\n        server.query({\r\n            query: getRecordings,\r\n            variables: {\r\n                channelId: props.channelId\r\n            }\r\n        }).then(res => {\r\n            if (res.data && res.data.channel.getRecordings) {\r\n                setPastMeetings(res.data.channel.getRecordings)\r\n            }\r\n        })\r\n    }, [props.channelId, meetingOn, reloadKey])\r\n\r\n    useEffect(() => {\r\n        loadChannelAttendances();\r\n        setPastAttendances([]);\r\n        loadPastSchedule();\r\n        setPastMeetings([]);\r\n        setShowAttendances(false);\r\n        setIsOwner(false);\r\n        setViewChannelAttendance(false);\r\n    }, [props.channelId]);\r\n\r\n    const loadPastSchedule = useCallback(() => {\r\n        const server = fetchAPI(\"\");\r\n        server\r\n            .query({\r\n                query: getPastDates,\r\n                variables: {\r\n                    channelId: props.channelId\r\n                }\r\n            })\r\n            .then(res => {\r\n                if (res.data && res.data.attendance.getPastDates) {\r\n                    setPastAttendances(res.data.attendance.getPastDates);\r\n                }\r\n            });\r\n    }, [props.channelId]);\r\n\r\n    const loadMeetingStatus = useCallback(() => {\r\n        const server = fetchAPI(\"\");\r\n        server\r\n            .query({\r\n                query: getMeetingStatus,\r\n                variables: {\r\n                    channelId: props.channelId\r\n                }\r\n            })\r\n            .then(async res => {\r\n                if (res.data && res.data.channel && res.data.channel.getMeetingStatus) {\r\n                    setMeetingOn(true);\r\n                    const u = await AsyncStorage.getItem(\"user\");\r\n                    if (u) {\r\n                        const user = JSON.parse(u);\r\n\r\n                        server\r\n                            .query({\r\n                                query: getMeetingLink,\r\n                                variables: {\r\n                                    userId: user._id,\r\n                                    channelId: props.channelId\r\n                                }\r\n                            })\r\n                            .then(res => {\r\n                                if (\r\n                                    res &&\r\n                                    res.data.channel.getMeetingLink &&\r\n                                    res.data.channel.getMeetingLink !== \"error\"\r\n                                ) {\r\n                                    setMeetingLink(res.data.channel.getMeetingLink);\r\n                                }\r\n                            });\r\n                    }\r\n                } else {\r\n                    setMeetingOn(false);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [props.channelId]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const u = await AsyncStorage.getItem(\"user\");\r\n            if (u) {\r\n                const user = JSON.parse(u);\r\n                setName(user.displayName);\r\n                if (user._id.toString().trim() === props.channelCreatedBy) {\r\n                    setIsOwner(true);\r\n                }\r\n            }\r\n        })();\r\n        loadMeetingStatus();\r\n        Animated.timing(modalAnimation, {\r\n            toValue: 1,\r\n            duration: 150,\r\n            useNativeDriver: true\r\n        }).start();\r\n    }, [props.channelCreatedBy, props.channelId]);\r\n    const windowHeight =\r\n        Dimensions.get(\"window\").width < 1024 ? Dimensions.get(\"window\").height - 30 : Dimensions.get(\"window\").height;\r\n\r\n    const updateMeetingStatus = useCallback(() => {\r\n        const server = fetchAPI(\"\");\r\n        server\r\n            .mutate({\r\n                mutation: editMeeting,\r\n                variables: {\r\n                    channelId: props.channelId,\r\n                    meetingOn: !meetingOn\r\n                }\r\n            })\r\n            .then(res => {\r\n                if (res.data && res.data.channel && res.data.channel.editMeeting) {\r\n                    loadMeetingStatus();\r\n                    props.refreshMeetingStatus();\r\n                }\r\n            })\r\n            .catch(e => console.log(e));\r\n    }, [meetingOn, props.channelId]);\r\n\r\n    if (name === \"\") {\r\n        return null;\r\n    }\r\n\r\n    const toolbarButtons = [\r\n        \"microphone\",\r\n        \"camera\",\r\n        \"closedcaptions\",\r\n        \"desktop\",\r\n        \"fullscreen\",\r\n        \"fodeviceselection\",\r\n        \"hangup\",\r\n        \"profile\",\r\n        \"chat\",\r\n        \"recording\",\r\n        \"etherpad\",\r\n        \"sharedvideo\",\r\n        \"raisehand\",\r\n        \"videoquality\",\r\n        \"filmstrip\",\r\n        \"tileview\",\r\n        \"download\",\r\n        \"security\"\r\n    ];\r\n    if (isOwner) {\r\n        toolbarButtons.push(\"mute-everyone\", \"mute-video-everyone\", \"stats\", \"settings\", \"livestreaming\");\r\n    }\r\n\r\n    const renderPastMeetings = () => {\r\n        return (pastMeetings.length === 0 ?\r\n            <View style={{ backgroundColor: 'white', flex: 1 }}>\r\n                <Text style={{ width: '100%', color: '#a2a2aa', fontSize: 22, paddingTop: 100, paddingHorizontal: 5, fontFamily: 'inter', flex: 1 }}>\r\n                    {PreferredLanguageText('noPastMeetings')}\r\n                </Text>\r\n            </View>\r\n            :\r\n            pastMeetings.map((date: any, index: any) => {\r\n                return <View style={styles.col} key={index}>\r\n                    <View style={styles.swiper}>\r\n                        <View\r\n                            key={'textPage'}\r\n                            style={styles.card}>\r\n                            <TouchableOpacity\r\n                                onPress={() => {\r\n                                    if (Platform.OS == 'web') {\r\n                                        window.open(date.url, '_blank');\r\n                                    } else {\r\n                                        Linking.openURL(date.url)\r\n                                    }\r\n                                }}\r\n                                style={{ flexDirection: 'row', backgroundColor: '#f4f4f6', width: '90%' }}>\r\n                                <Image\r\n                                    height={45}\r\n                                    width={75}\r\n                                    style={{ height: 45, width: 75, borderRadius: 5 }}\r\n                                    source={{ uri: date.thumbnail }}\r\n                                    resizeMode={'contain'}\r\n                                />\r\n                                <View style={{ backgroundColor: '#f4f4f6', width: '100%', flexDirection: 'row', display: 'flex', marginLeft: 20 }}>\r\n                                    <Text ellipsizeMode={'tail'}\r\n                                        numberOfLines={1}\r\n                                        style={styles.title}>\r\n                                        {moment(new Date(date.startTime)).format('MMMM Do YYYY, h:mm a')}\r\n                                    </Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                            {\r\n                                isOwner ?\r\n                                    <TouchableOpacity style={{ backgroundColor: '#f4f4f6', width: '10%', }}\r\n                                        onPress={() => {\r\n                                            Alert(\"Delete past lecture ?\", \"\", [\r\n                                                {\r\n                                                    text: \"Cancel\",\r\n                                                    style: \"cancel\",\r\n                                                    onPress: () => {\r\n                                                        return;\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    text: \"Delete\",\r\n                                                    onPress: async () => {\r\n                                                        const server = fetchAPI(\"\");\r\n                                                        server\r\n                                                            .mutate({\r\n                                                                mutation: deleteRecording,\r\n                                                                variables: {\r\n                                                                    recordID: date.recordID\r\n                                                                }\r\n                                                            })\r\n                                                            .then(res => {\r\n                                                                if (res.data && res.data.channel.deleteRecording) {\r\n                                                                    console.log(res.data)\r\n                                                                    Alert(\"Recording Deleted!\");\r\n                                                                    setReloadKey(Math.random())\r\n                                                                }\r\n                                                            });\r\n                                                    }\r\n                                                }\r\n                                            ]);\r\n                                        }}\r\n                                    >\r\n                                        <Text style={{ width: '100%', color: '#a2a2aa', fontSize: 15, paddingHorizontal: 5, fontFamily: 'inter', flex: 1 }}>\r\n                                            <Ionicons name='trash-outline' size={17} color=\"#d91d56\" />\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                    : null\r\n                            }\r\n                        </View>\r\n                    </View>\r\n                </View >\r\n            }))\r\n    }\r\n\r\n    const mainClassroomView = (\r\n        <ScrollView\r\n            style={{\r\n                width: \"100%\",\r\n                height: windowHeight,\r\n                backgroundColor: \"#fff\",\r\n                borderTopLeftRadius: 0,\r\n                borderTopRightRadius: 0\r\n            }}>\r\n            <Animated.View\r\n                style={{\r\n                    width: \"100%\",\r\n                    backgroundColor: \"white\",\r\n                    padding: 20,\r\n                    opacity: modalAnimation,\r\n                    borderTopLeftRadius: 0,\r\n                    borderTopRightRadius: 0,\r\n                    alignSelf: \"center\"\r\n                }}>\r\n                <Text style={{ width: \"100%\", textAlign: \"center\", paddingTop: 5 }}>\r\n                    {/* <Ionicons name='chevron-down' size={20} color={'#e0e0e0'} /> */}\r\n                </Text>\r\n                <View style={{ backgroundColor: \"white\", flexDirection: \"row\", paddingBottom: 50 }}>\r\n                    <Text\r\n                        ellipsizeMode=\"tail\"\r\n                        style={{\r\n                            fontSize: 11,\r\n                            paddingBottom: 20,\r\n                            textTransform: \"uppercase\",\r\n                            // paddingLeft: 10,\r\n                            flex: 1,\r\n                            lineHeight: 25\r\n                        }}>\r\n                        {PreferredLanguageText(\"classroom\")}\r\n                    </Text>\r\n                </View>\r\n                <View style={{ backgroundColor: \"white\", flex: 1 }}>\r\n                    <View\r\n                        style={{\r\n                            width: \"100%\",\r\n                            backgroundColor: \"white\",\r\n                            flexDirection: Dimensions.get(\"window\").width < 768 ? \"column\" : \"row\"\r\n                        }}>\r\n                        {isOwner ? (\r\n                            <View\r\n                                style={{\r\n                                    width: Dimensions.get(\"window\").width < 768 ? \"100%\" : \"33.33%\",\r\n                                    marginBottom: 25,\r\n                                    backgroundColor: \"white\"\r\n                                }}>\r\n                                <View>\r\n                                    <View\r\n                                        style={{\r\n                                            backgroundColor: \"white\",\r\n                                            height: 40,\r\n                                            marginTop: 20,\r\n                                            flexDirection: \"row\"\r\n                                        }}>\r\n                                        <Switch\r\n                                            value={meetingOn}\r\n                                            onValueChange={() => updateMeetingStatus()}\r\n                                            style={{ height: 20, marginRight: 20 }}\r\n                                            trackColor={{\r\n                                                false: \"#f4f4f6\",\r\n                                                true: \"#3B64F8\"\r\n                                            }}\r\n                                            activeThumbColor=\"white\"\r\n                                        />\r\n                                        <View style={{ width: \"100%\", backgroundColor: \"white\", paddingTop: 3 }}>\r\n                                            <Text style={{ fontSize: 15, color: \"#a2a2aa\" }}>\r\n                                                {PreferredLanguageText(\"initiateMeeting\")}\r\n                                            </Text>\r\n                                        </View>\r\n                                    </View>\r\n                                    <Text style={{ fontSize: 12, color: \"#a2a2aa\", paddingTop: 10 }}>\r\n                                        {/* Turn on to begin session. {\"\\n\"} */}\r\n                                        Restart switch if you cannot join.\r\n                                    </Text>\r\n                                </View>\r\n                            </View>\r\n                        ) : null}\r\n                        <View\r\n                            style={{\r\n                                width: Dimensions.get(\"window\").width < 768 ? \"100%\" : \"33.33%\",\r\n                                backgroundColor: \"white\"\r\n                            }}>\r\n                            <TouchableOpacity\r\n                                onPress={async () => {\r\n                                    if (meetingOn) {\r\n                                        window.open(meetingLink, \"_blank\");\r\n\r\n                                        // Mark attendance her\r\n                                        const u = await AsyncStorage.getItem(\"user\");\r\n                                        if (u) {\r\n                                            const user = JSON.parse(u);\r\n\r\n                                            const server = fetchAPI(\"\");\r\n                                            server\r\n                                                .mutate({\r\n                                                    mutation: markAttendance,\r\n                                                    variables: {\r\n                                                        userId: user._id,\r\n                                                        channelId: props.channelId\r\n                                                    }\r\n                                                })\r\n                                                .then(res => {\r\n                                                    // do nothing...\r\n                                                    // attendance marked\r\n                                                });\r\n                                        }\r\n                                    } else {\r\n                                        Alert(classroomNotInSession);\r\n                                    }\r\n                                }}\r\n                                style={{\r\n                                    backgroundColor: \"white\",\r\n                                    overflow: \"hidden\",\r\n                                    height: 35,\r\n                                    marginTop: 15,\r\n                                    marginBottom: 20\r\n                                }}>\r\n                                <Text\r\n                                    style={{\r\n                                        textAlign: \"center\",\r\n                                        lineHeight: 35,\r\n                                        color: meetingOn ? \"#fff\" : \"#202025\",\r\n                                        fontSize: 12,\r\n                                        backgroundColor: meetingOn ? \"#3B64F8\" : \"#f4f4f6\",\r\n                                        paddingHorizontal: 25,\r\n                                        fontFamily: \"inter\",\r\n                                        height: 35,\r\n                                        width: 200,\r\n                                        borderRadius: 15,\r\n                                        textTransform: \"uppercase\"\r\n                                    }}>\r\n                                    {PreferredLanguageText(\"enterClassroom\")}\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                            <Text style={{ fontSize: 12, color: \"#a2a2aa\", marginBottom: 10 }}>\r\n                                Enabled only when classroom in session.\r\n                            </Text>\r\n                        </View>\r\n                        <View\r\n                            style={{\r\n                                width: Dimensions.get(\"window\").width < 768 ? \"100%\" : \"33.33%\",\r\n                                backgroundColor: \"white\"\r\n                            }}>\r\n                            <TouchableOpacity\r\n                                onPress={async () => {\r\n                                    setViewChannelAttendance(true);\r\n                                }}\r\n                                style={{\r\n                                    backgroundColor: \"white\",\r\n                                    overflow: \"hidden\",\r\n                                    height: 35,\r\n                                    marginTop: 15,\r\n                                    marginBottom: 20\r\n                                }}>\r\n                                <Text\r\n                                    style={{\r\n                                        textAlign: \"center\",\r\n                                        lineHeight: 35,\r\n                                        color: \"#202025\",\r\n                                        fontSize: 12,\r\n                                        backgroundColor: \"#f4f4f6\",\r\n                                        paddingHorizontal: 25,\r\n                                        fontFamily: \"inter\",\r\n                                        height: 35,\r\n                                        width: 200,\r\n                                        borderRadius: 15,\r\n                                        textTransform: \"uppercase\"\r\n                                    }}>\r\n                                    {PreferredLanguageText(\"viewAttendance\")}\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                            <Text style={{ fontSize: 12, color: \"#a2a2aa\", marginBottom: 20 }}>\r\n                                Attendances will only be captured for scheduled lectures.\r\n                            </Text>\r\n                        </View>\r\n                    </View>\r\n                    {\r\n\r\n                        <View style={{ borderTopColor: '#f4f4f6', borderTopWidth: 1, marginTop: 25 }}>\r\n                            <Text style={{ width: '100%', textAlign: 'center', height: 15, paddingBottom: 25 }}>\r\n                                {/* <Ionicons name='chevron-down' size={20} color={'#e0e0e0'} /> */}\r\n                            </Text>\r\n                            <TouchableOpacity\r\n                                onPress={() => setShowPastMeetings(!showPastMeetings)}\r\n                                style={{\r\n                                    flex: 1,\r\n                                    flexDirection: 'row',\r\n                                    // paddingTop: 10,\r\n                                    paddingBottom: 40\r\n                                }}>\r\n                                <Text style={{\r\n                                    lineHeight: 23,\r\n                                    marginRight: 10,\r\n                                    color: '#a2a2aa',\r\n                                    fontSize: 11,\r\n                                    textTransform: 'uppercase'\r\n                                }}>\r\n                                    RECORDINGS\r\n                                </Text>\r\n                                <Text style={{ lineHeight: 21 }}>\r\n                                    <Ionicons size={14} name={showPastMeetings ? 'caret-down-outline' : 'caret-forward-outline'} color='#a2a2aa' />\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                            {\r\n\r\n                                showAttendances ?\r\n                                    <View>\r\n                                        {\r\n                                            attendances.length === 0 ?\r\n                                                <View style={{ backgroundColor: 'white', flex: 1 }}>\r\n                                                    <Text style={{ width: '100%', color: '#a2a2aa', fontSize: 22, paddingVertical: 50, paddingHorizontal: 5, fontFamily: 'inter', flex: 1 }}>\r\n                                                        {PreferredLanguageText('noAttendances')}\r\n                                                    </Text>\r\n                                                </View>\r\n                                                :\r\n                                                attendances.map((att: any, index: any) => {\r\n                                                    return <View style={styles.col} key={index}>\r\n                                                        <SubscriberCard\r\n                                                            hideChevron={true}\r\n                                                            fadeAnimation={props.fadeAnimation}\r\n                                                            subscriber={{\r\n                                                                displayName: att.displayName,\r\n                                                                fullName: PreferredLanguageText('joinedAt') + ' ' + moment(new Date(att.joinedAt)).format('MMMM Do YYYY, h:mm a')\r\n                                                            }}\r\n                                                            onPress={() => { }}\r\n                                                            status={!props.cueId ? false : true}\r\n                                                        />\r\n                                                    </View>\r\n                                                })\r\n                                        }\r\n                                    </View>\r\n                                    : (showPastMeetings ? renderPastMeetings() : null)\r\n                            }\r\n                        </View>\r\n                    }\r\n                </View>\r\n            </Animated.View>\r\n        </ScrollView>\r\n    );\r\n\r\n    const attendanceListView = (\r\n        <AttendanceList\r\n            key={JSON.stringify(channelAttendances)}\r\n            channelAttendances={channelAttendances}\r\n            isOwner={isOwner}\r\n            pastMeetings={pastAttendances}\r\n            channelName={props.filterChoice}\r\n            channelId={props.channelId}\r\n            closeModal={() => {\r\n                Animated.timing(modalAnimation, {\r\n                    toValue: 0,\r\n                    duration: 150,\r\n                    useNativeDriver: true\r\n                }).start(() => props.closeModal());\r\n            }}\r\n            hideChannelAttendance={() => {\r\n                setViewChannelAttendance(false);\r\n            }}\r\n            reload={() => loadChannelAttendances()}\r\n        />\r\n    );\r\n\r\n    return !viewChannelAttendance ? mainClassroomView : attendanceListView;\r\n};\r\n\r\nexport default Meeting;\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        backgroundColor: \"white\",\r\n        height: \"100%\",\r\n        width: Dimensions.get(\"window\").width < 1024 ? \"100%\" : \"60%\",\r\n        paddingHorizontal: Dimensions.get(\"window\").width < 1024 ? 20 : 0,\r\n        alignSelf: \"center\",\r\n        borderTopRightRadius: 0,\r\n        borderTopLeftRadius: 0\r\n    },\r\n    text: {\r\n        fontSize: 12,\r\n        color: \"#a2a2aa\",\r\n        textAlign: \"left\",\r\n        paddingHorizontal: 10,\r\n        paddingTop: 5\r\n    },\r\n    col: {\r\n        width: \"100%\",\r\n        height: 70,\r\n        marginBottom: 15,\r\n        backgroundColor: \"white\"\r\n    },\r\n    swiper: {\r\n        height: '100%',\r\n        width: 350,\r\n        maxWidth: '100%',\r\n        borderRadius: 15,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white',\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        width: 350,\r\n        maxWidth: '100%',\r\n        borderRadius: 15,\r\n        padding: 13,\r\n        backgroundColor: '#f4f4f6',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between'\r\n    },\r\n    meetingText: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 1,\r\n        backgroundColor: '#f4f4f6',\r\n    },\r\n    title: {\r\n        fontFamily: 'inter',\r\n        fontSize: 13,\r\n        width: '100%',\r\n        paddingTop: 5,\r\n        color: '#202025'\r\n    },\r\n    description: {\r\n        fontSize: 13,\r\n        color: '#a2a2aa',\r\n    }\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}