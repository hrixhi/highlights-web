{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\Create.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useState, useRef } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Text, View, TouchableOpacity } from \"../components/Themed\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { Picker } from '@react-native-picker/picker';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { timedFrequencyOptions } from \"../helpers/FrequencyOptions\";\nimport { fetchAPI } from \"../graphql/FetchAPI\";\nimport { createCue, createQuiz, getChannelCategories, getChannels, getSharedWith } from \"../graphql/QueriesAndMutations\";\nimport Datetime from 'react-datetime';\nimport * as ImagePicker from 'expo-image-picker';\nimport { actions, RichEditor, RichToolbar } from \"react-native-pell-rich-editor\";\nimport FileUpload from \"./UploadFiles\";\nimport Alert from \"../components/Alert\";\nimport Select from 'react-select';\nimport QuizCreate from \"./QuizCreate\";\nimport DurationPicker from 'react-duration-picker';\nimport TeXToSVG from \"tex-to-svg\";\nimport EquationEditor from \"equation-editor-react\";\nimport { PreferredLanguageText } from \"../helpers/LanguageContext\";\nimport moment from 'moment';\nimport ReactPlayer from 'react-player';\nimport Webview from \"./Webview\";\n\nvar Create = function Create(props) {\n  var _ref5;\n\n  var current = new Date();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      cue = _useState2[0],\n      setCue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      shuffle = _useState4[0],\n      setShuffle = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      starred = _useState6[0],\n      setStarred = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      notify = _useState8[0],\n      setNotify = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      color = _useState10[0],\n      setColor = _useState10[1];\n\n  var _useState11 = useState('0'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      frequency = _useState12[0],\n      setFrequency = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      customCategory = _useState14[0],\n      setCustomCategory = _useState14[1];\n\n  var _useState15 = useState(props.customCategories),\n      _useState16 = _slicedToArray(_useState15, 1),\n      localCustomCategories = _useState16[0];\n\n  var _useState17 = useState(props.customCategories),\n      _useState18 = _slicedToArray(_useState17, 2),\n      customCategories = _useState18[0],\n      setCustomCategories = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      addCustomCategory = _useState20[0],\n      setAddCustomCategory = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      channels = _useState22[0],\n      setChannels = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      channelId = _useState24[0],\n      setChannelId = _useState24[1];\n\n  var _useState25 = useState(new Date(current.getTime() + 1000 * 60 * 60)),\n      _useState26 = _slicedToArray(_useState25, 2),\n      endPlayAt = _useState26[0],\n      setEndPlayAt = _useState26[1];\n\n  var _useState27 = useState(true),\n      _useState28 = _slicedToArray(_useState27, 2),\n      playChannelCueIndef = _useState28[0],\n      setPlayChannelCueIndef = _useState28[1];\n\n  var colorChoices = ['#d91d56', '#ED7D22', '#F8D41F', '#B8D41F', '#53BE6D'].reverse();\n\n  var _useState29 = useState(new Animated.Value(0)),\n      _useState30 = _slicedToArray(_useState29, 1),\n      modalAnimation = _useState30[0];\n\n  var _useState31 = useState(Math.random()),\n      _useState32 = _slicedToArray(_useState31, 2),\n      reloadEditorKey = _useState32[0],\n      setReloadEditorKey = _useState32[1];\n\n  var RichText = useRef();\n\n  var _useState33 = useState(100),\n      _useState34 = _slicedToArray(_useState33, 2),\n      height = _useState34[0],\n      setHeight = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      init = _useState36[0],\n      setInit = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      submission = _useState38[0],\n      setSubmission = _useState38[1];\n\n  var _useState39 = useState(new Date(current.getTime() + 1000 * 60 * 60 * 24)),\n      _useState40 = _slicedToArray(_useState39, 2),\n      deadline = _useState40[0],\n      setDeadline = _useState40[1];\n\n  var _useState41 = useState(new Date(current.getTime())),\n      _useState42 = _slicedToArray(_useState41, 2),\n      initiateAt = _useState42[0],\n      setInitiateAt = _useState42[1];\n\n  var _useState43 = useState(0),\n      _useState44 = _slicedToArray(_useState43, 2),\n      gradeWeight = _useState44[0],\n      setGradeWeight = _useState44[1];\n\n  var _useState45 = useState(false),\n      _useState46 = _slicedToArray(_useState45, 2),\n      graded = _useState46[0],\n      setGraded = _useState46[1];\n\n  var _useState47 = useState(false),\n      _useState48 = _slicedToArray(_useState47, 2),\n      imported = _useState48[0],\n      setImported = _useState48[1];\n\n  var _useState49 = useState(''),\n      _useState50 = _slicedToArray(_useState49, 2),\n      url = _useState50[0],\n      setUrl = _useState50[1];\n\n  var _useState51 = useState(''),\n      _useState52 = _slicedToArray(_useState51, 2),\n      type = _useState52[0],\n      setType = _useState52[1];\n\n  var _useState53 = useState(''),\n      _useState54 = _slicedToArray(_useState53, 2),\n      title = _useState54[0],\n      setTitle = _useState54[1];\n\n  var _useState55 = useState(false),\n      _useState56 = _slicedToArray(_useState55, 2),\n      showImportOptions = _useState56[0],\n      setShowImportOptions = _useState56[1];\n\n  var _useState57 = useState([]),\n      _useState58 = _slicedToArray(_useState57, 2),\n      selected = _useState58[0],\n      setSelected = _useState58[1];\n\n  var _useState59 = useState([]),\n      _useState60 = _slicedToArray(_useState59, 2),\n      subscribers = _useState60[0],\n      setSubscribers = _useState60[1];\n\n  var _useState61 = useState(false),\n      _useState62 = _slicedToArray(_useState61, 2),\n      expandMenu = _useState62[0],\n      setExpandMenu = _useState62[1];\n\n  var _useState63 = useState(false),\n      _useState64 = _slicedToArray(_useState63, 2),\n      isQuiz = _useState64[0],\n      setIsQuiz = _useState64[1];\n\n  var _useState65 = useState([]),\n      _useState66 = _slicedToArray(_useState65, 2),\n      problems = _useState66[0],\n      _setProblems = _useState66[1];\n\n  var _useState67 = useState(false),\n      _useState68 = _slicedToArray(_useState67, 2),\n      timer = _useState68[0],\n      setTimer = _useState68[1];\n\n  var _useState69 = useState({\n    hours: 1,\n    minutes: 0,\n    seconds: 0\n  }),\n      _useState70 = _slicedToArray(_useState69, 2),\n      duration = _useState70[0],\n      setDuration = _useState70[1];\n\n  var _useState71 = useState('y = x + 1'),\n      _useState72 = _slicedToArray(_useState71, 2),\n      equation = _useState72[0],\n      setEquation = _useState72[1];\n\n  var _useState73 = useState(false),\n      _useState74 = _slicedToArray(_useState73, 2),\n      showEquationEditor = _useState74[0],\n      setShowEquationEditor = _useState74[1];\n\n  var _useState75 = useState(false),\n      _useState76 = _slicedToArray(_useState75, 2),\n      isSubmitting = _useState76[0],\n      setIsSubmitting = _useState76[1];\n\n  var _useState77 = useState(false),\n      _useState78 = _slicedToArray(_useState77, 2),\n      shuffleQuiz = _useState78[0],\n      setShuffleQuiz = _useState78[1];\n\n  var _useState79 = useState(false),\n      _useState80 = _slicedToArray(_useState79, 2),\n      creatingQuiz = _useState80[0],\n      setCreatingQuiz = _useState80[1];\n\n  var window = Dimensions.get(\"window\");\n  var screen = Dimensions.get(\"screen\");\n\n  var _useState81 = useState({\n    window: window,\n    screen: screen\n  }),\n      _useState82 = _slicedToArray(_useState81, 2),\n      dimensions = _useState82[0],\n      setDimensions = _useState82[1];\n\n  var enterOneProblemAlert = PreferredLanguageText('enterOneProblem');\n  var invalidDurationAlert = PreferredLanguageText('invalidDuration');\n  var fillMissingProblemsAlert = PreferredLanguageText('fillMissingProblems');\n  var enterNumericPointsAlert = PreferredLanguageText('enterNumericPoints');\n  var fillMissingOptionsAlert = PreferredLanguageText('fillMissingOptions');\n  var eachOptionOneCorrectAlert = PreferredLanguageText('eachOptionOneCorrect');\n  var noStudentSelectedAlert = PreferredLanguageText('noStudentSelected');\n  var selectWhoToShareAlert = PreferredLanguageText('selectWhoToShare');\n  var clearQuestionAlert = PreferredLanguageText('clearQuestion');\n  var cannotUndoAlert = PreferredLanguageText('cannotUndo');\n  var somethingWentWrongAlert = PreferredLanguageText('somethingWentWrong');\n  var checkConnectionAlert = PreferredLanguageText('checkConnection');\n  var enterContentAlert = PreferredLanguageText('enterContent');\n  var enterTitleAlert = PreferredLanguageText('enterTitle');\n  var onDimensionsChange = useCallback(function (_ref) {\n    var window = _ref.window,\n        screen = _ref.screen;\n    setDimensions({\n      window: window,\n      screen: screen\n    });\n  }, []);\n  useEffect(function () {\n    Dimensions.addEventListener(\"change\", onDimensionsChange);\n    return function () {\n      Dimensions.removeEventListener(\"change\", onDimensionsChange);\n    };\n  }, []);\n  var insertEquation = useCallback(function () {\n    var SVGEquation = TeXToSVG(equation, {\n      width: 100\n    });\n    RichText.current.insertHTML('<div><br/>' + SVGEquation + '<br/></div>');\n    setShowEquationEditor(false);\n    setEquation('');\n  }, [equation, RichText, RichText.current, cue]);\n  useEffect(function () {\n    if (cue[0] === '{' && cue[cue.length - 1] === '}') {\n      var obj = JSON.parse(cue);\n      setImported(true);\n      setUrl(obj.url);\n      setType(obj.type);\n    } else {\n      setImported(false);\n      setUrl('');\n      setType('');\n      setTitle('');\n    }\n  }, [cue]);\n  console.log(\"Shuffle Quiz\", shuffleQuiz);\n  var createNewQuiz = useCallback(function () {\n    var error = false;\n\n    if (problems.length === 0) {\n      Alert(enterOneProblemAlert);\n      return;\n    }\n\n    if (timer) {\n      if (duration.hours === 0 && duration.minutes === 0 && duration.seconds === 0) {\n        Alert(invalidDurationAlert);\n        return;\n      }\n    }\n\n    problems.map(function (problem) {\n      if (problem.question === '' || problem.question === 'formula:') {\n        Alert(fillMissingProblemsAlert);\n        error = true;\n      }\n\n      if (problem.points === '' || Number.isNaN(Number(problem.points))) {\n        Alert(enterNumericPointsAlert);\n        error = true;\n      }\n\n      var optionFound = false;\n\n      if (!problem.questionType && problem.options.length < 2) {\n        Alert(\"Problem must have at least 2 options\");\n        error = true;\n      }\n\n      if (!problem.questionType) {\n        var keys = {};\n        problem.options.map(function (option) {\n          if (option.option === '' || option.option === 'formula:') {\n            Alert(fillMissingOptionsAlert);\n            error = true;\n          }\n\n          if (option.option in keys) {\n            Alert(\"Option repeated in a question\");\n            error = true;\n          }\n\n          if (option.isCorrect) {\n            optionFound = true;\n          }\n\n          keys[option.option] = 1;\n        });\n\n        if (!optionFound) {\n          Alert(eachOptionOneCorrectAlert);\n          error = true;\n        }\n      }\n    });\n\n    if (error) {\n      return;\n    }\n\n    var server = fetchAPI('');\n    var durationMinutes = duration.hours * 60 + duration.minutes + duration.seconds / 60;\n    server.mutate({\n      mutation: createQuiz,\n      variables: {\n        quiz: {\n          problems: problems,\n          duration: timer ? durationMinutes.toString() : null,\n          shuffleQuiz: shuffleQuiz\n        }\n      }\n    }).then(function (res) {\n      if (res.data && res.data.quiz.createQuiz !== 'error') {\n        storeDraft('quizDraft', '');\n        handleCreate(res.data.quiz.createQuiz);\n      }\n    });\n  }, [problems, cue, modalAnimation, customCategory, props.saveDataInCloud, isQuiz, gradeWeight, deadline, initiateAt, submission, imported, selected, subscribers, shuffle, frequency, starred, color, notify, title, type, url, timer, duration, props.closeModal, channelId, endPlayAt, playChannelCueIndef, shuffleQuiz]);\n  var loadChannelCategoriesAndSubscribers = useCallback(function _callee() {\n    var server;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(channelId === '')) {\n              _context.next = 3;\n              break;\n            }\n\n            setCustomCategories(localCustomCategories);\n            return _context.abrupt(\"return\");\n\n          case 3:\n            server = fetchAPI('');\n            server.query({\n              query: getChannelCategories,\n              variables: {\n                channelId: channelId\n              }\n            }).then(function (res) {\n              if (res.data.channel && res.data.channel.getChannelCategories) {\n                setCustomCategories(res.data.channel.getChannelCategories);\n              }\n            }).catch(function (err) {});\n            server.query({\n              query: getSharedWith,\n              variables: {\n                channelId: channelId,\n                cueId: null\n              }\n            }).then(function (res) {\n              if (res.data && res.data.cue.getSharedWith) {\n                setSubscribers(res.data.cue.getSharedWith);\n                setSelected(res.data.cue.getSharedWith);\n              }\n            }).catch(function (err) {\n              return console.log(err);\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [channelId, localCustomCategories]);\n  useEffect(function () {\n    loadChannelCategoriesAndSubscribers();\n  }, [channelId]);\n  var handleHeightChange = useCallback(function (h) {\n    setHeight(h);\n  }, []);\n  var cameraCallback = useCallback(function _callee2() {\n    var cameraSettings, updatedCameraSettings, result;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.getCameraPermissionsAsync());\n\n          case 2:\n            cameraSettings = _context2.sent;\n\n            if (cameraSettings.granted) {\n              _context2.next = 11;\n              break;\n            }\n\n            _context2.next = 6;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n          case 6:\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.getCameraPermissionsAsync());\n\n          case 8:\n            updatedCameraSettings = _context2.sent;\n\n            if (updatedCameraSettings.granted) {\n              _context2.next = 11;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 11:\n            _context2.next = 13;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              quality: 1,\n              base64: true\n            }));\n\n          case 13:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              RichText.current.insertImage(result.uri, 'border-radius: 8px; max-width: 400px; width: 100%;');\n            }\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [RichText, RichText.current]);\n  var galleryCallback = useCallback(function _callee3() {\n    var gallerySettings, updatedGallerySettings, result;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.getMediaLibraryPermissionsAsync());\n\n          case 2:\n            gallerySettings = _context3.sent;\n\n            if (gallerySettings.granted) {\n              _context3.next = 11;\n              break;\n            }\n\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n          case 6:\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.getMediaLibraryPermissionsAsync());\n\n          case 8:\n            updatedGallerySettings = _context3.sent;\n\n            if (updatedGallerySettings.granted) {\n              _context3.next = 11;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 11:\n            _context3.next = 13;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              quality: 1,\n              base64: true\n            }));\n\n          case 13:\n            result = _context3.sent;\n\n            if (!result.cancelled) {\n              RichText.current.insertImage(result.uri, 'border-radius: 8px; max-width: 400px; width: 100%;');\n            }\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [RichText, RichText.current]);\n  var loadChannels = useCallback(function _callee4() {\n    var uString, user, server;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            uString = _context4.sent;\n\n            if (uString) {\n              user = JSON.parse(uString);\n              server = fetchAPI('');\n              server.query({\n                query: getChannels,\n                variables: {\n                  userId: user._id\n                }\n              }).then(function (res) {\n                if (res.data.channel.findByUserId) {\n                  setChannels(res.data.channel.findByUserId);\n                }\n              }).catch(function (err) {});\n            }\n\n            setInit(true);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  useEffect(function () {\n    loadChannels();\n  }, []);\n  useEffect(function () {\n    if (!init) {\n      return;\n    }\n\n    var saveCue = '';\n\n    if (imported) {\n      var obj = {\n        type: type,\n        url: url,\n        title: title\n      };\n      saveCue = JSON.stringify(obj);\n    } else if (isQuiz) {\n      var quiz = {\n        title: title,\n        problems: problems,\n        timer: timer,\n        duration: duration\n      };\n      var saveQuiz = JSON.stringify(quiz);\n      storeDraft('quizDraft', saveQuiz);\n    } else {\n      saveCue = cue;\n    }\n\n    if (saveCue && saveCue !== \"\") {\n      storeDraft('cueDraft', saveCue);\n    } else {\n      storeDraft('cueDraft', '');\n    }\n  }, [cue, init, type, imported, url, title, isQuiz, problems, timer, duration]);\n  var storeDraft = useCallback(function _callee5(type, value) {\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(type, value));\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  var handleCreate = useCallback(function _callee7(quizId) {\n    var saveCue, obj, _obj, uString, user, server, userIds, variables;\n\n    return _regeneratorRuntime.async(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            setIsSubmitting(true);\n\n            if (!isSubmitting) {\n              _context7.next = 3;\n              break;\n            }\n\n            return _context7.abrupt(\"return\");\n\n          case 3:\n            if (!(!quizId && (cue === null || cue.toString().trim() === ''))) {\n              _context7.next = 7;\n              break;\n            }\n\n            Alert(enterContentAlert);\n            setIsSubmitting(false);\n            return _context7.abrupt(\"return\");\n\n          case 7:\n            if (!((imported || isQuiz) && title === '')) {\n              _context7.next = 11;\n              break;\n            }\n\n            Alert(enterTitleAlert);\n            setIsSubmitting(false);\n            return _context7.abrupt(\"return\");\n\n          case 11:\n            if (!(submission && deadline < new Date())) {\n              _context7.next = 15;\n              break;\n            }\n\n            Alert(\"Submission deadline must be in future\");\n            setIsSubmitting(false);\n            return _context7.abrupt(\"return\");\n\n          case 15:\n            saveCue = '';\n\n            if (quizId) {\n              obj = {\n                quizId: quizId,\n                title: title\n              };\n\n              if (timer) {\n                obj.initiatedAt = null;\n              }\n\n              saveCue = JSON.stringify(obj);\n            } else if (imported) {\n              _obj = {\n                type: type,\n                url: url,\n                title: title\n              };\n              saveCue = JSON.stringify(_obj);\n            } else {\n              saveCue = cue;\n            }\n\n            if (!(channelId === '')) {\n              _context7.next = 22;\n              break;\n            }\n\n            _context7.next = 20;\n            return _regeneratorRuntime.awrap(function _callee6() {\n              var subCues, value, _id, duplicateId, stringifiedCues;\n\n              return _regeneratorRuntime.async(function _callee6$(_context6) {\n                while (1) {\n                  switch (_context6.prev = _context6.next) {\n                    case 0:\n                      subCues = {};\n                      _context6.prev = 1;\n                      _context6.next = 4;\n                      return _regeneratorRuntime.awrap(AsyncStorage.getItem('cues'));\n\n                    case 4:\n                      value = _context6.sent;\n\n                      if (value) {\n                        subCues = JSON.parse(value);\n                      }\n\n                      _context6.next = 10;\n                      break;\n\n                    case 8:\n                      _context6.prev = 8;\n                      _context6.t0 = _context6[\"catch\"](1);\n\n                    case 10:\n                      _id = subCues['local'].length;\n\n                    case 11:\n                      if (!true) {\n                        _context6.next = 20;\n                        break;\n                      }\n\n                      duplicateId = subCues['local'].findIndex(function (item) {\n                        return item._id === _id;\n                      });\n\n                      if (!(duplicateId === -1)) {\n                        _context6.next = 17;\n                        break;\n                      }\n\n                      return _context6.abrupt(\"break\", 20);\n\n                    case 17:\n                      _id++;\n\n                    case 18:\n                      _context6.next = 11;\n                      break;\n\n                    case 20:\n                      subCues['local'].push({\n                        _id: _id,\n                        cue: saveCue,\n                        date: new Date(),\n                        color: color,\n                        shuffle: shuffle,\n                        frequency: frequency,\n                        starred: starred,\n                        customCategory: customCategory,\n                        endPlayAt: notify && (shuffle || !playChannelCueIndef) ? endPlayAt.toISOString() : ''\n                      });\n                      stringifiedCues = JSON.stringify(subCues);\n                      _context6.next = 24;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem('cues', stringifiedCues));\n\n                    case 24:\n                      storeDraft('cueDraft', '');\n                      setIsSubmitting(false);\n                      props.closeModal();\n\n                    case 27:\n                    case \"end\":\n                      return _context6.stop();\n                  }\n                }\n              }, null, null, [[1, 8]], Promise);\n            }());\n\n          case 20:\n            _context7.next = 39;\n            break;\n\n          case 22:\n            _context7.next = 24;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 24:\n            uString = _context7.sent;\n\n            if (uString) {\n              _context7.next = 27;\n              break;\n            }\n\n            return _context7.abrupt(\"return\");\n\n          case 27:\n            if (!(selected.length === 0)) {\n              _context7.next = 30;\n              break;\n            }\n\n            Alert(noStudentSelectedAlert, selectWhoToShareAlert);\n            return _context7.abrupt(\"return\");\n\n          case 30:\n            if (!((submission || isQuiz) && deadline < initiateAt)) {\n              _context7.next = 33;\n              break;\n            }\n\n            Alert(\"Available from time must be set before deadline\", \"\");\n            return _context7.abrupt(\"return\");\n\n          case 33:\n            user = JSON.parse(uString);\n            server = fetchAPI('');\n            userIds = [];\n\n            if (selected.length !== 0) {\n              selected.map(function (item) {\n                userIds.push(item.value);\n              });\n            }\n\n            variables = {\n              cue: saveCue,\n              starred: starred,\n              color: color.toString(),\n              channelId: channelId,\n              frequency: frequency,\n              customCategory: customCategory,\n              shuffle: shuffle,\n              createdBy: user._id,\n              gradeWeight: gradeWeight.toString(),\n              submission: submission || isQuiz,\n              deadline: submission || isQuiz ? deadline.toISOString() : '',\n              initiateAt: submission || isQuiz ? initiateAt.toISOString() : '',\n              endPlayAt: notify && (shuffle || !playChannelCueIndef) ? endPlayAt.toISOString() : '',\n              shareWithUserIds: selected.length === subscribers.length ? null : userIds\n            };\n            server.mutate({\n              mutation: createCue,\n              variables: variables\n            }).then(function (res) {\n              if (res.data.cue.create) {\n                Animated.timing(modalAnimation, {\n                  toValue: 0,\n                  duration: 150,\n                  useNativeDriver: true\n                }).start(function () {\n                  storeDraft('cueDraft', '');\n                  setIsSubmitting(false);\n                  props.closeModal();\n                });\n              }\n            }).catch(function (err) {\n              setIsSubmitting(false);\n              Alert(somethingWentWrongAlert, checkConnectionAlert);\n            });\n\n          case 39:\n            setIsSubmitting(false);\n\n          case 40:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [cue, modalAnimation, customCategory, props.saveDataInCloud, isQuiz, timer, duration, gradeWeight, deadline, initiateAt, submission, imported, selected, subscribers, shuffle, frequency, starred, color, notify, title, type, url, props.closeModal, channelId, endPlayAt, playChannelCueIndef]);\n  useEffect(function () {\n    var getData = function getData() {\n      var h, quizDraft, _JSON$parse, _duration, _timer, _problems, _title;\n\n      return _regeneratorRuntime.async(function getData$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              _context8.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('cueDraft'));\n\n            case 3:\n              h = _context8.sent;\n\n              if (h !== null) {\n                setCue(h);\n              }\n\n              _context8.next = 7;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('quizDraft'));\n\n            case 7:\n              quizDraft = _context8.sent;\n\n              if (quizDraft !== null) {\n                _JSON$parse = JSON.parse(quizDraft), _duration = _JSON$parse.duration, _timer = _JSON$parse.timer, _problems = _JSON$parse.problems, _title = _JSON$parse.title;\n                setDuration(_duration);\n                setTimer(_timer);\n\n                _setProblems(_problems);\n\n                setTitle(_title);\n              }\n\n              _context8.next = 14;\n              break;\n\n            case 11:\n              _context8.prev = 11;\n              _context8.t0 = _context8[\"catch\"](0);\n              console.log(_context8.t0);\n\n            case 14:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    };\n\n    getData();\n  }, []);\n  var clearAll = useCallback(function () {\n    Alert(clearQuestionAlert, cannotUndoAlert, [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }, {\n      text: \"Clear\",\n      onPress: function onPress() {\n        setCue('');\n        setImported(false);\n        setUrl('');\n        setType('');\n        setTitle('');\n\n        _setProblems([]);\n\n        setIsQuiz(false);\n        setTimer(false);\n        setShowEquationEditor(false);\n        setEquation('');\n        setReloadEditorKey(Math.random());\n      }\n    }]);\n  }, []);\n  useEffect(function () {\n    Animated.timing(modalAnimation, {\n      toValue: 1,\n      duration: 150,\n      useNativeDriver: true\n    }).start();\n  }, []);\n  var onChange = useCallback(function (value, _ref2) {\n    var action = _ref2.action,\n        removedValue = _ref2.removedValue;\n\n    switch (action) {\n      case 'remove-value':\n      case 'pop-value':\n        if (removedValue.isFixed) {\n          return;\n        }\n\n        break;\n\n      case 'clear':\n        value = subscribers.filter(function (v) {\n          return v.isFixed;\n        });\n        break;\n    }\n\n    setSelected(value);\n  }, [subscribers]);\n  var onChangeDuration = useCallback(function (duration) {\n    var hours = duration.hours,\n        minutes = duration.minutes,\n        seconds = duration.seconds;\n    setDuration({\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    });\n  }, []);\n  var yesterday = moment().subtract(1, 'day');\n\n  var disablePastDt = function disablePastDt(current) {\n    return current.isAfter(yesterday);\n  };\n\n  var quizAlert = PreferredLanguageText('quizzesCanOnly');\n  var width = dimensions.window.width;\n  return React.createElement(View, {\n    style: {\n      width: '100%',\n      height: dimensions.window.width < 1024 ? dimensions.window.height - 30 : dimensions.window.height,\n      backgroundColor: 'white',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      paddingHorizontal: 20,\n      overflow: 'hidden'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: {\n      width: '100%',\n      backgroundColor: 'white',\n      opacity: modalAnimation,\n      height: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      height: 15,\n      paddingBottom: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 11,\n      paddingBottom: 20,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 25\n    }\n  }, PreferredLanguageText('new'))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setStarred(!starred);\n    },\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'right',\n      lineHeight: 30,\n      marginTop: -31,\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 25\n    }\n  }, React.createElement(Ionicons, {\n    name: \"bookmark\",\n    size: 34,\n    color: starred ? '#d91d56' : '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 29\n    }\n  })))), React.createElement(View, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: dimensions.window.width < 768 ? 'column-reverse' : 'row',\n      paddingBottom: 4,\n      marginTop: showImportOptions || imported || isQuiz ? 0 : 20,\n      backgroundColor: 'white'\n    },\n    onTouchStart: function onTouchStart() {\n      return Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: dimensions.window.width < 768 ? 'column' : 'row',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 21\n    }\n  }, showImportOptions ? null : React.createElement(RichToolbar, {\n    key: reloadEditorKey.toString(),\n    style: {\n      flexWrap: 'wrap',\n      backgroundColor: 'white',\n      height: 28,\n      overflow: 'visible'\n    },\n    iconSize: 12,\n    editor: RichText,\n    disabled: false,\n    iconTint: \"#a2a2aa\",\n    selectedIconTint: \"#a2a2aa\",\n    disabledIconTint: \"#a2a2aa\",\n    actions: imported || isQuiz ? [\"\"] : [actions.setBold, actions.setItalic, actions.setUnderline, actions.insertBulletsList, actions.insertOrderedList, actions.checkboxList, actions.insertLink, actions.insertImage, actions.undo, actions.redo, \"clear\"],\n    iconMap: (_ref5 = {}, _defineProperty(_ref5, \"insertCamera\", function insertCamera(_ref3) {\n      var tintColor = _ref3.tintColor;\n      return React.createElement(Ionicons, {\n        name: \"camera-outline\",\n        size: 15,\n        color: tintColor,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 78\n        }\n      });\n    }), _defineProperty(_ref5, \"clear\", function clear(_ref4) {\n      var tintColor = _ref4.tintColor;\n      return React.createElement(Ionicons, {\n        name: \"trash-outline\",\n        size: 13,\n        color: tintColor,\n        onPress: function onPress() {\n          return clearAll();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 71\n        }\n      });\n    }), _ref5),\n    onPressAddImage: galleryCallback,\n    insertCamera: cameraCallback,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 33\n    }\n  }), imported || !showImportOptions ? null : React.createElement(FileUpload, {\n    back: function back() {\n      return setShowImportOptions(false);\n    },\n    onUpload: function onUpload(u, t) {\n      var obj = {\n        url: u,\n        type: t,\n        title: title\n      };\n      setCue(JSON.stringify(obj));\n      setShowImportOptions(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 21\n    }\n  }, !isQuiz ? React.createElement(Text, {\n    style: {\n      color: '#a2a2aa',\n      fontSize: 11,\n      lineHeight: 30,\n      textAlign: 'right',\n      paddingRight: 20,\n      textTransform: 'uppercase'\n    },\n    onPress: function onPress() {\n      return setShowEquationEditor(!showEquationEditor);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 729,\n      columnNumber: 33\n    }\n  }, showEquationEditor ? PreferredLanguageText('hide') : PreferredLanguageText('formula')) : null, isQuiz ? null : React.createElement(Text, {\n    style: {\n      color: '#a2a2aa',\n      fontSize: 11,\n      lineHeight: 30,\n      textAlign: 'right',\n      paddingRight: 20,\n      textTransform: 'uppercase'\n    },\n    onPress: function onPress() {\n      return setShowImportOptions(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 33\n    }\n  }, PreferredLanguageText('import')), React.createElement(Text, {\n    style: {\n      color: '#a2a2aa',\n      fontSize: 11,\n      lineHeight: 30,\n      textAlign: 'right',\n      paddingRight: 10,\n      textTransform: 'uppercase'\n    },\n    onPress: function onPress() {\n      if (channelId !== '') {\n        setIsQuiz(true);\n        setSubmission(true);\n      } else {\n        Alert(quizAlert);\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 25\n    }\n  }, PreferredLanguageText('quiz')))), showEquationEditor ? React.createElement(View, {\n    style: {\n      width: '100%',\n      flexDirection: width < 768 ? 'column' : 'row',\n      paddingBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      borderColor: '#f4f4f6',\n      borderWidth: 1,\n      borderRadius: 15,\n      padding: 10,\n      minWidth: 200,\n      maxWidth: '50%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 29\n    }\n  }, React.createElement(EquationEditor, {\n    value: equation,\n    onChange: setEquation,\n    autoCommands: \"pi theta sqrt sum prod alpha beta gamma rho int\",\n    autoOperatorNames: \"sin cos tan arccos arcsin arctan\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 33\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: {\n      justifyContent: 'center',\n      paddingHorizontal: 20,\n      maxWidth: '10%'\n    },\n    onPress: function onPress() {\n      return insertEquation();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 29\n    }\n  }, React.createElement(Ionicons, {\n    name: \"add-circle-outline\",\n    color: \"#a2a2aa\",\n    size: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 33\n    }\n  })), React.createElement(View, {\n    style: {\n      minWidth: '40%',\n      flex: 1,\n      paddingVertical: 5,\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      flex: 1,\n      fontSize: 12,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 33\n    }\n  }, \"^ \\u2192 Superscript, _ \\u2192 Subscript, int \\u2192 Integral, sum \\u2192 Summation, prod \\u2192 Product, sqrt \\u2192 Square root, bar \\u2192 Bar over letter, alpha, beta, ... omega \\u2192 Small Greek letter, Alpha, Beta, ... Omega \\u2192 Capital Greek letter\"))) : null, React.createElement(ScrollView, {\n    style: {\n      paddingBottom: 100\n    },\n    showsVerticalScrollIndicator: false,\n    scrollEnabled: true,\n    scrollEventThrottle: 1,\n    keyboardDismissMode: 'on-drag',\n    overScrollMode: 'always',\n    nestedScrollEnabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 17\n    }\n  }, imported || isQuiz ? React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: width < 768 ? 'column' : 'row',\n      overflow: 'visible'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: {\n      width: width < 768 ? '100%' : '33.33%',\n      borderRightWidth: 0,\n      borderColor: '#f4f4f6',\n      paddingRight: 15,\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 33\n    }\n  }, React.createElement(TextInput, {\n    value: title,\n    style: styles.input,\n    placeholder: PreferredLanguageText('title'),\n    onChangeText: function onChangeText(val) {\n      return setTitle(val);\n    },\n    placeholderTextColor: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 37\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      marginLeft: 15,\n      paddingTop: 15\n    },\n    onPress: function onPress() {\n      return clearAll();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 37\n    }\n  }, React.createElement(Ionicons, {\n    name: \"trash-outline\",\n    color: \"#a2a2aa\",\n    size: 20,\n    style: {\n      alignSelf: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 41\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 9,\n      color: \"#a2a2aa\",\n      textAlign: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 41\n    }\n  }, \"Remove\"))), isQuiz ? React.createElement(View, {\n    style: {\n      width: width < 768 ? '100%' : '31.67%',\n      borderRightWidth: 0,\n      borderColor: '#f4f4f6',\n      paddingTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      paddingBottom: 15,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 49\n    }\n  }, React.createElement(Ionicons, {\n    name: \"timer-outline\",\n    size: 20,\n    color: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 53\n    }\n  }))), React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      width: '100%',\n      height: 40,\n      marginRight: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 861,\n      columnNumber: 45\n    }\n  }, React.createElement(Switch, {\n    value: timer,\n    onValueChange: function onValueChange() {\n      if (timer) {\n        setDuration({\n          hours: 1,\n          minutes: 0,\n          seconds: 0\n        });\n      }\n\n      setTimer(!timer);\n    },\n    style: {\n      height: 20\n    },\n    trackColor: {\n      false: '#f4f4f6',\n      true: '#3B64F8'\n    },\n    activeThumbColor: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 49\n    }\n  }))) : null, isQuiz && timer ? React.createElement(View, {\n    style: {\n      width: width < 768 ? '100%' : '35%',\n      borderRightWidth: 0,\n      borderColor: '#f4f4f6'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 41\n    }\n  }, React.createElement(DurationPicker, {\n    onChange: onChangeDuration,\n    initialDuration: {\n      hours: 1,\n      minutes: 0,\n      seconds: 0\n    },\n    maxHours: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 45\n    }\n  })) : null) : null, React.createElement(View, {\n    style: {\n      width: '100%',\n      minHeight: isQuiz ? 0 : 500,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 21\n    }\n  }, isQuiz ? React.createElement(QuizCreate, {\n    problems: problems,\n    setProblems: function setProblems(p) {\n      return _setProblems(p);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 908,\n      columnNumber: 33\n    }\n  }) : imported ? type === 'mp4' || type === 'mp3' || type === 'mov' || type === 'mpeg' || type === 'mp2' || type === 'wav' ? React.createElement(ReactPlayer, {\n    url: url,\n    controls: true,\n    onContextMenu: function onContextMenu(e) {\n      return e.preventDefault();\n    },\n    config: {\n      file: {\n        attributes: {\n          controlsList: 'nodownload'\n        }\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 915,\n      columnNumber: 45\n    }\n  }) : React.createElement(View, {\n    key: url,\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 45\n    }\n  }, React.createElement(Webview, {\n    key: url,\n    url: url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 49\n    }\n  })) : null, React.createElement(RichEditor, {\n    key: reloadEditorKey.toString(),\n    containerStyle: {\n      height: height,\n      backgroundColor: '#f4f4f6',\n      padding: 3,\n      paddingTop: 5,\n      paddingBottom: 10,\n      borderRadius: 15,\n      display: isQuiz || imported ? \"none\" : \"flex\"\n    },\n    ref: RichText,\n    style: {\n      width: '100%',\n      backgroundColor: '#f4f4f6',\n      borderRadius: 15,\n      minHeight: 475,\n      display: isQuiz || imported ? \"none\" : \"flex\"\n    },\n    editorStyle: {\n      backgroundColor: '#f4f4f6',\n      placeholderColor: '#a2a2aa',\n      color: '#202025',\n      contentCSSText: 'font-size: 14px;'\n    },\n    initialContentHTML: cue,\n    onScroll: function onScroll() {\n      return Keyboard.dismiss();\n    },\n    placeholder: PreferredLanguageText('title'),\n    onChange: function onChange(text) {\n      var modifedText = text.split('&amp;').join('&');\n      setCue(modifedText);\n    },\n    onHeightChange: handleHeightChange,\n    onBlur: function onBlur() {\n      return Keyboard.dismiss();\n    },\n    allowFileAccess: true,\n    allowFileAccessFromFileURLs: true,\n    allowUniversalAccessFromFileURLs: true,\n    allowsFullscreenVideo: true,\n    allowsInlineMediaPlayback: true,\n    allowsLinkPreview: true,\n    allowsBackForwardNavigationGestures: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      marginHorizontal: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 21\n    }\n  }, channels.length !== 0 ? React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: width < 768 ? 'column' : 'row',\n      overflow: 'visible'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: {\n      width: width < 768 ? '100%' : '33.33%',\n      borderRightWidth: 0,\n      borderColor: '#f4f4f6'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 978,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      paddingTop: 40,\n      paddingBottom: 15,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 980,\n      columnNumber: 41\n    }\n  }, \"Share with\")), React.createElement(View, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 987,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '85%',\n      backgroundColor: 'white',\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 988,\n      columnNumber: 41\n    }\n  }, React.createElement(ScrollView, {\n    style: styles.colorBar,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 45\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: channelId === '' ? styles.allOutline : styles.allBlack,\n    onPress: function onPress() {\n      setChannelId('');\n      setCustomCategories(localCustomCategories);\n      setCustomCategory('');\n      setAddCustomCategory(false);\n      setSubmission(false);\n      setGradeWeight(0);\n      setGraded(false);\n      setSelected([]);\n      setSubscribers([]);\n\n      _setProblems([]);\n\n      setIsQuiz(false);\n      setTimer(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: {\n      lineHeight: 20,\n      fontSize: 12,\n      color: channelId === '' ? '#fff' : '#202025'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1006,\n      columnNumber: 53\n    }\n  }, PreferredLanguageText('myCues'))), channels.map(function (channel) {\n    return React.createElement(TouchableOpacity, {\n      key: Math.random(),\n      style: channelId === channel._id ? styles.allOutline : styles.allBlack,\n      onPress: function onPress() {\n        setChannelId(channel._id);\n        setAddCustomCategory(false);\n        setCustomCategory('');\n        setSubmission(isQuiz ? true : false);\n        setGradeWeight(0);\n        setGraded(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 64\n      }\n    }, React.createElement(Text, {\n      style: {\n        lineHeight: 20,\n        fontSize: 12,\n        color: channelId === channel._id ? '#fff' : '#202025'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 61\n      }\n    }, channel.name));\n  })))), channelId !== '' ? React.createElement(View, {\n    style: {\n      maxHeight: 175,\n      flexDirection: 'column',\n      marginTop: 25,\n      overflow: 'scroll'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 45\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '90%',\n      padding: 5,\n      height: expandMenu ? 175 : 'auto'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 49\n    }\n  }, React.createElement(Select, {\n    placeholder: \"Share with\",\n    styles: {\n      menu: function menu(provided, state) {\n        return _objectSpread(_objectSpread({}, provided), {}, {\n          zIndex: 9999,\n          overflow: 'scroll',\n          height: 125,\n          display: 'flex',\n          margin: 5,\n          width: '97%',\n          boxShadow: 'none'\n        });\n      },\n      option: function option(provided, state) {\n        return _objectSpread(_objectSpread({}, provided), {}, {\n          fontFamily: 'overpass',\n          color: '#a2a2aa',\n          fontSize: 10,\n          height: 25,\n          width: '97%'\n        });\n      },\n      input: function input(styles) {\n        return {\n          width: '100%',\n          border: 'none',\n          borderWidth: 0,\n          fontSize: 12\n        };\n      },\n      placeholder: function placeholder(styles) {\n        return _objectSpread(_objectSpread({}, styles), {}, {\n          fontFamily: 'overpass',\n          color: '#a2a2aa',\n          fontSize: 12\n        });\n      },\n      multiValueLabel: function multiValueLabel(styles, _ref6) {\n        var data = _ref6.data;\n        return _objectSpread(_objectSpread({}, styles), {}, {\n          color: '#202025',\n          fontFamily: 'overpass'\n        });\n      },\n      multiValue: function multiValue(styles, _ref7) {\n        var data = _ref7.data;\n        return _objectSpread(_objectSpread({}, styles), {}, {\n          backgroundColor: '#f4f4f6',\n          fontFamily: 'overpass'\n        });\n      }\n    },\n    value: selected,\n    isMulti: true,\n    onMenuOpen: function onMenuOpen() {\n      return setExpandMenu(true);\n    },\n    onMenuClose: function onMenuClose() {\n      return setExpandMenu(false);\n    },\n    name: \"Share with\",\n    className: \"basic-multi-select\",\n    classNamePrefix: \"select\",\n    onChange: onChange,\n    options: subscribers,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 53\n    }\n  }))) : null), channelId !== '' ? React.createElement(View, {\n    style: {\n      width: width < 768 ? '100%' : '33.33%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      paddingTop: 40,\n      paddingBottom: 15,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1099,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 49\n    }\n  }, PreferredLanguageText('submissionRequired'))), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1104,\n      columnNumber: 45\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      height: 40,\n      marginRight: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1105,\n      columnNumber: 49\n    }\n  }, React.createElement(Switch, {\n    disabled: isQuiz,\n    value: submission,\n    onValueChange: function onValueChange() {\n      setSubmission(!submission);\n    },\n    style: {\n      height: 20\n    },\n    trackColor: {\n      false: '#f4f4f6',\n      true: '#a2a2aa'\n    },\n    activeThumbColor: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1110,\n      columnNumber: 53\n    }\n  })), submission ? React.createElement(View, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1126,\n      columnNumber: 57\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1132,\n      columnNumber: 60\n    }\n  }, \"Available\"), React.createElement(Datetime, {\n    value: initiateAt,\n    onChange: function onChange(event) {\n      var date = new Date(event);\n      if (date < new Date()) return;\n      setInitiateAt(date);\n    },\n    isValidDate: disablePastDt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1135,\n      columnNumber: 61\n    }\n  })) : null), React.createElement(View, {\n    style: {\n      width: width < 768 ? '100%' : '33.33%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1153,\n      columnNumber: 45\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1154,\n      columnNumber: 49\n    }\n  }, submission ? React.createElement(View, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      backgroundColor: 'white',\n      marginLeft: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1157,\n      columnNumber: 61\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1164,\n      columnNumber: 66\n    }\n  }, PreferredLanguageText('deadline')), React.createElement(Datetime, {\n    value: deadline,\n    onChange: function onChange(event) {\n      var date = new Date(event);\n      if (date < new Date()) return;\n      setDeadline(date);\n    },\n    isValidDate: disablePastDt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1167,\n      columnNumber: 61\n    }\n  })) : null))) : null, submission ? React.createElement(View, {\n    style: {\n      width: width < 768 ? '100%' : '33.33%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1192,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      paddingTop: 40,\n      paddingBottom: 15,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1193,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 49\n    }\n  }, \"Grade Weight\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 45\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      height: 40,\n      marginRight: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1199,\n      columnNumber: 49\n    }\n  }, React.createElement(Switch, {\n    value: graded,\n    onValueChange: function onValueChange() {\n      return setGraded(!graded);\n    },\n    style: {\n      height: 20\n    },\n    trackColor: {\n      false: '#f4f4f6',\n      true: '#a2a2aa'\n    },\n    activeThumbColor: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 53\n    }\n  })), graded ? React.createElement(View, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 57\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1223,\n      columnNumber: 61\n    }\n  }, PreferredLanguageText('percentageOverall')), React.createElement(TextInput, {\n    value: gradeWeight,\n    style: styles.picker,\n    placeholder: '0-100',\n    onChangeText: function onChangeText(val) {\n      return setGradeWeight(val);\n    },\n    placeholderTextColor: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1226,\n      columnNumber: 61\n    }\n  })) : null)) : null) : null, React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: width < 768 ? 'column' : 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1241,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      width: width < 768 ? '100%' : '33.33%',\n      borderRightWidth: 0,\n      borderColor: '#f4f4f6'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1242,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1243,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      paddingTop: 40,\n      paddingBottom: 15,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1244,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1245,\n      columnNumber: 41\n    }\n  }, PreferredLanguageText('category'))), React.createElement(View, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1249,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '85%',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1250,\n      columnNumber: 41\n    }\n  }, addCustomCategory ? React.createElement(View, {\n    style: styles.colorBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1253,\n      columnNumber: 53\n    }\n  }, React.createElement(TextInput, {\n    value: customCategory,\n    style: styles.allGrayOutline,\n    placeholder: 'Enter Category',\n    onChangeText: function onChangeText(val) {\n      setCustomCategory(val);\n    },\n    placeholderTextColor: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1254,\n      columnNumber: 57\n    }\n  })) : React.createElement(ScrollView, {\n    style: styles.colorBar,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1264,\n      columnNumber: 53\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: customCategory === '' ? styles.allGrayOutline : styles.all,\n    onPress: function onPress() {\n      setCustomCategory('');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1265,\n      columnNumber: 57\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#a2a2aa',\n      lineHeight: 20,\n      fontSize: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1270,\n      columnNumber: 61\n    }\n  }, PreferredLanguageText('none'))), customCategories.map(function (category) {\n    return React.createElement(TouchableOpacity, {\n      key: Math.random(),\n      style: customCategory === category ? styles.allGrayOutline : styles.all,\n      onPress: function onPress() {\n        setCustomCategory(category);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1276,\n        columnNumber: 72\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#a2a2aa',\n        lineHeight: 20,\n        fontSize: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1282,\n        columnNumber: 69\n      }\n    }, category));\n  }))), React.createElement(View, {\n    style: {\n      width: '15%',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1291,\n      columnNumber: 41\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      if (addCustomCategory) {\n        setCustomCategory('');\n        setAddCustomCategory(false);\n      } else {\n        setCustomCategory('');\n        setAddCustomCategory(true);\n      }\n    },\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1292,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      lineHeight: 20,\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1303,\n      columnNumber: 49\n    }\n  }, React.createElement(Ionicons, {\n    name: addCustomCategory ? 'close' : 'add',\n    size: 20,\n    color: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1304,\n      columnNumber: 53\n    }\n  }))))))), React.createElement(View, {\n    style: {\n      width: width < 768 ? '100%' : '33.33%',\n      borderRightWidth: 0,\n      borderColor: '#f4f4f6'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1311,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      paddingTop: 40,\n      paddingBottom: 15,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1312,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1313,\n      columnNumber: 37\n    }\n  }, PreferredLanguageText('priority'))), React.createElement(View, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1317,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1318,\n      columnNumber: 37\n    }\n  }, React.createElement(ScrollView, {\n    style: _objectSpread(_objectSpread({}, styles.colorBar), {}, {\n      height: 20\n    }),\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1319,\n      columnNumber: 41\n    }\n  }, colorChoices.map(function (c, i) {\n    return React.createElement(View, {\n      style: color === i ? styles.colorContainerOutline : styles.colorContainer,\n      key: Math.random(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1322,\n        columnNumber: 60\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        width: 12,\n        height: 12,\n        borderRadius: 6,\n        backgroundColor: colorChoices[i]\n      },\n      onPress: function onPress() {\n        setColor(i);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1323,\n        columnNumber: 57\n      }\n    }));\n  })))))), React.createElement(View, {\n    style: {\n      width: '100%',\n      paddingTop: 15,\n      flexDirection: width < 768 ? 'column' : 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1342,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      width: width < 768 ? '100%' : '33.33%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1343,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      paddingTop: 40,\n      paddingBottom: 15,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1344,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1345,\n      columnNumber: 37\n    }\n  }, \"Reminder\")), React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      width: '100%',\n      height: 40,\n      marginRight: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1349,\n      columnNumber: 33\n    }\n  }, React.createElement(Switch, {\n    value: notify,\n    onValueChange: function onValueChange() {\n      if (notify) {\n        setFrequency(\"0\");\n      } else {\n        setFrequency(\"1-D\");\n      }\n\n      setPlayChannelCueIndef(true);\n      setNotify(!notify);\n    },\n    style: {\n      height: 20\n    },\n    trackColor: {\n      false: '#f4f4f6',\n      true: '#3B64F8'\n    },\n    activeThumbColor: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1355,\n      columnNumber: 37\n    }\n  }))), notify ? React.createElement(View, {\n    style: {\n      width: width < 768 ? '100%' : '33.33%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1379,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      paddingTop: 40,\n      paddingBottom: 15,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1380,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1381,\n      columnNumber: 45\n    }\n  }, \"Recurring\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1385,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      height: 40,\n      marginRight: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1386,\n      columnNumber: 45\n    }\n  }, React.createElement(Switch, {\n    value: !shuffle,\n    onValueChange: function onValueChange() {\n      return setShuffle(!shuffle);\n    },\n    style: {\n      height: 20\n    },\n    trackColor: {\n      false: '#f4f4f6',\n      true: '#a2a2aa'\n    },\n    activeThumbColor: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1391,\n      columnNumber: 49\n    }\n  })), !shuffle ? React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1404,\n      columnNumber: 53\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1409,\n      columnNumber: 57\n    }\n  }, PreferredLanguageText('remindEvery')), React.createElement(Picker, {\n    style: styles.picker,\n    itemStyle: {\n      fontSize: 15\n    },\n    selectedValue: frequency,\n    onValueChange: function onValueChange(itemValue) {\n      return setFrequency(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1412,\n      columnNumber: 57\n    }\n  }, timedFrequencyOptions.map(function (item, index) {\n    return React.createElement(Picker.Item, {\n      color: frequency === item.value ? '#3B64F8' : \"#202025\",\n      label: item.value === '0' && channelId !== '' ? 'Once' : item.label,\n      value: item.value,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1423,\n        columnNumber: 76\n      }\n    });\n  }))) : React.createElement(View, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1433,\n      columnNumber: 53\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1439,\n      columnNumber: 57\n    }\n  }, PreferredLanguageText('RemindOn')), React.createElement(Datetime, {\n    value: endPlayAt,\n    onChange: function onChange(event) {\n      var date = new Date(event);\n      if (date < new Date()) return;\n      setEndPlayAt(date);\n    },\n    isValidDate: disablePastDt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1442,\n      columnNumber: 57\n    }\n  })))) : null, notify && !shuffle ? React.createElement(View, {\n    style: {\n      width: width < 768 ? '100%' : '33.33%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1459,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      paddingTop: 40,\n      paddingBottom: 15,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1460,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1461,\n      columnNumber: 45\n    }\n  }, \"Indefinite\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1465,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      height: 40,\n      marginRight: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1466,\n      columnNumber: 45\n    }\n  }, React.createElement(Switch, {\n    value: playChannelCueIndef,\n    onValueChange: function onValueChange() {\n      return setPlayChannelCueIndef(!playChannelCueIndef);\n    },\n    style: {\n      height: 20\n    },\n    trackColor: {\n      false: '#f4f4f6',\n      true: '#a2a2aa'\n    },\n    activeThumbColor: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1471,\n      columnNumber: 49\n    }\n  })), playChannelCueIndef ? null : React.createElement(View, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1484,\n      columnNumber: 53\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1490,\n      columnNumber: 57\n    }\n  }, PreferredLanguageText('remindTill')), React.createElement(Datetime, {\n    value: endPlayAt,\n    onChange: function onChange(event) {\n      var date = new Date(event);\n      if (date < new Date()) return;\n      setEndPlayAt(date);\n    },\n    isValidDate: disablePastDt,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1493,\n      columnNumber: 57\n    }\n  })))) : null), isQuiz ? React.createElement(View, {\n    style: {\n      width: width < 768 ? '100%' : '33.33%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1509,\n      columnNumber: 36\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      paddingTop: 40,\n      paddingBottom: 15,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1510,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1511,\n      columnNumber: 45\n    }\n  }, \"Shuffle Questions\")), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1515,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      height: 40,\n      marginRight: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1516,\n      columnNumber: 45\n    }\n  }, React.createElement(Switch, {\n    value: shuffleQuiz,\n    onValueChange: function onValueChange() {\n      return setShuffleQuiz(!shuffleQuiz);\n    },\n    style: {\n      height: 20\n    },\n    trackColor: {\n      false: '#f4f4f6',\n      true: '#a2a2aa'\n    },\n    activeThumbColor: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1521,\n      columnNumber: 49\n    }\n  })))) : null), React.createElement(View, {\n    style: styles.footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1535,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white',\n      justifyContent: 'center',\n      display: 'flex',\n      flexDirection: 'row',\n      height: 50,\n      paddingTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1536,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function _callee8() {\n      return _regeneratorRuntime.async(function _callee8$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (!isQuiz) {\n                _context9.next = 4;\n                break;\n              }\n\n              createNewQuiz();\n              _context9.next = 6;\n              break;\n\n            case 4:\n              _context9.next = 6;\n              return _regeneratorRuntime.awrap(handleCreate());\n\n            case 6:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    style: {\n      borderRadius: 15,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1546,\n      columnNumber: 29\n    }\n  }, channelId === '' ? React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      lineHeight: 35,\n      color: 'white',\n      fontSize: 12,\n      backgroundColor: '#3B64F8',\n      borderRadius: 15,\n      paddingHorizontal: 25,\n      fontFamily: 'inter',\n      overflow: 'hidden',\n      height: 35,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1560,\n      columnNumber: 41\n    }\n  }, isSubmitting ? PreferredLanguageText('sharing') : PreferredLanguageText('save')) : React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      lineHeight: 35,\n      color: 'white',\n      fontSize: 12,\n      backgroundColor: '#3B64F8',\n      borderRadius: 15,\n      paddingHorizontal: 25,\n      fontFamily: 'inter',\n      overflow: 'hidden',\n      height: 35,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1575,\n      columnNumber: 41\n    }\n  }, isSubmitting ? PreferredLanguageText('sharing') : PreferredLanguageText('share'))))))));\n};\n\nexport default Create;\nvar styles = StyleSheet.create({\n  timePicker: {\n    width: 125,\n    fontSize: 15,\n    height: 45,\n    color: '#202025',\n    borderRadius: 10,\n    marginLeft: 10\n  },\n  backgroundVideo: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0\n  },\n  cuesInput: {\n    width: '100%',\n    backgroundColor: '#f4f4f6',\n    borderRadius: 15,\n    fontSize: 21,\n    padding: 20,\n    paddingTop: 20,\n    paddingBottom: 20,\n    marginBottom: '4%'\n  },\n  footer: {\n    width: '100%',\n    backgroundColor: 'white',\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 80,\n    lineHeight: 18\n  },\n  colorContainer: {\n    lineHeight: 20,\n    justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    marginLeft: 7,\n    paddingHorizontal: 4,\n    backgroundColor: 'white'\n  },\n  colorContainerOutline: {\n    lineHeight: 22,\n    justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    marginLeft: 7,\n    paddingHorizontal: 4,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#a2a2aa'\n  },\n  input: {\n    width: '100%',\n    borderBottomColor: '#f4f4f6',\n    borderBottomWidth: 1,\n    fontSize: 15,\n    padding: 15,\n    paddingTop: 12,\n    paddingBottom: 12,\n    marginTop: 5,\n    marginBottom: 20\n  },\n  date: {\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'row',\n    paddingBottom: 4,\n    backgroundColor: 'white'\n  },\n  colorBar: {\n    width: '100%',\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    lineHeight: 20\n  },\n  picker: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    overflow: 'hidden',\n    fontSize: 12,\n    textAlign: 'center',\n    borderWidth: 1,\n    width: 100,\n    height: 20,\n    alignSelf: 'center',\n    marginTop: -20,\n    borderRadius: 3\n  },\n  text: {\n    fontSize: 12,\n    color: '#a2a2aa',\n    textAlign: 'left',\n    paddingHorizontal: 10\n  },\n  all: {\n    fontSize: 12,\n    color: '#a2a2aa',\n    height: 22,\n    paddingHorizontal: 10,\n    backgroundColor: 'white'\n  },\n  allBlack: {\n    fontSize: 12,\n    color: '#202025',\n    height: 22,\n    paddingHorizontal: 10,\n    backgroundColor: 'white',\n    marginBottom: 20\n  },\n  allOutline: {\n    fontSize: 12,\n    color: '#FFF',\n    height: 22,\n    paddingHorizontal: 10,\n    borderRadius: 10,\n    backgroundColor: '#202025',\n    marginBottom: 20\n  },\n  allGrayOutline: {\n    fontSize: 12,\n    color: '#a2a2aa',\n    height: 22,\n    paddingHorizontal: 10,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#a2a2aa'\n  },\n  color1: {\n    backgroundColor: '#D11C60'\n  },\n  color2: {\n    backgroundColor: '#EF5B24'\n  },\n  color3: {\n    backgroundColor: '#E0D41F'\n  },\n  color4: {\n    backgroundColor: '#B8D41F'\n  },\n  color5: {\n    backgroundColor: '#7FB1D3'\n  },\n  outline: {\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#a2a2aa'\n  }\n});","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/Create.tsx"],"names":["React","useCallback","useEffect","useState","useRef","Text","View","TouchableOpacity","Ionicons","Picker","AsyncStorage","timedFrequencyOptions","fetchAPI","createCue","createQuiz","getChannelCategories","getChannels","getSharedWith","Datetime","ImagePicker","actions","RichEditor","RichToolbar","FileUpload","Alert","Select","QuizCreate","DurationPicker","TeXToSVG","EquationEditor","PreferredLanguageText","moment","ReactPlayer","Webview","Create","props","current","Date","cue","setCue","shuffle","setShuffle","starred","setStarred","notify","setNotify","color","setColor","frequency","setFrequency","customCategory","setCustomCategory","customCategories","localCustomCategories","setCustomCategories","addCustomCategory","setAddCustomCategory","channels","setChannels","channelId","setChannelId","getTime","endPlayAt","setEndPlayAt","playChannelCueIndef","setPlayChannelCueIndef","colorChoices","reverse","Animated","Value","modalAnimation","Math","random","reloadEditorKey","setReloadEditorKey","RichText","height","setHeight","init","setInit","submission","setSubmission","deadline","setDeadline","initiateAt","setInitiateAt","gradeWeight","setGradeWeight","graded","setGraded","imported","setImported","url","setUrl","type","setType","title","setTitle","showImportOptions","setShowImportOptions","selected","setSelected","subscribers","setSubscribers","expandMenu","setExpandMenu","isQuiz","setIsQuiz","problems","setProblems","timer","setTimer","hours","minutes","seconds","duration","setDuration","equation","setEquation","showEquationEditor","setShowEquationEditor","isSubmitting","setIsSubmitting","shuffleQuiz","setShuffleQuiz","creatingQuiz","setCreatingQuiz","window","Dimensions","get","screen","dimensions","setDimensions","enterOneProblemAlert","invalidDurationAlert","fillMissingProblemsAlert","enterNumericPointsAlert","fillMissingOptionsAlert","eachOptionOneCorrectAlert","noStudentSelectedAlert","selectWhoToShareAlert","clearQuestionAlert","cannotUndoAlert","somethingWentWrongAlert","checkConnectionAlert","enterContentAlert","enterTitleAlert","onDimensionsChange","addEventListener","removeEventListener","insertEquation","SVGEquation","width","insertHTML","length","obj","JSON","parse","console","log","createNewQuiz","error","map","problem","question","points","Number","isNaN","optionFound","questionType","options","keys","option","isCorrect","server","durationMinutes","mutate","mutation","variables","quiz","toString","then","res","data","storeDraft","handleCreate","saveDataInCloud","closeModal","loadChannelCategoriesAndSubscribers","query","channel","catch","err","cueId","handleHeightChange","h","cameraCallback","getCameraPermissionsAsync","cameraSettings","granted","requestCameraPermissionsAsync","updatedCameraSettings","launchCameraAsync","mediaTypes","MediaTypeOptions","Images","quality","base64","result","cancelled","insertImage","uri","galleryCallback","getMediaLibraryPermissionsAsync","gallerySettings","requestMediaLibraryPermissionsAsync","updatedGallerySettings","launchImageLibraryAsync","loadChannels","getItem","uString","user","userId","_id","findByUserId","saveCue","stringify","saveQuiz","value","setItem","quizId","trim","initiatedAt","subCues","duplicateId","findIndex","item","push","date","toISOString","stringifiedCues","userIds","createdBy","shareWithUserIds","create","timing","toValue","useNativeDriver","start","getData","quizDraft","clearAll","text","style","onPress","onChange","action","removedValue","isFixed","filter","v","onChangeDuration","yesterday","subtract","disablePastDt","isAfter","quizAlert","backgroundColor","borderTopLeftRadius","borderTopRightRadius","paddingHorizontal","overflow","opacity","textAlign","paddingBottom","flexDirection","flex","fontSize","textTransform","lineHeight","marginTop","display","Keyboard","dismiss","flexWrap","setBold","setItalic","setUnderline","insertBulletsList","insertOrderedList","checkboxList","insertLink","undo","redo","tintColor","u","t","paddingRight","borderColor","borderWidth","borderRadius","padding","minWidth","maxWidth","justifyContent","paddingVertical","borderRightWidth","styles","input","val","marginLeft","paddingTop","alignSelf","marginRight","false","true","minHeight","p","e","preventDefault","file","attributes","controlsList","placeholderColor","contentCSSText","modifedText","split","join","marginHorizontal","colorBar","allOutline","allBlack","name","maxHeight","menu","provided","state","zIndex","margin","boxShadow","fontFamily","border","placeholder","multiValueLabel","multiValue","event","picker","allGrayOutline","all","category","c","i","colorContainerOutline","colorContainer","itemValue","index","label","footer","StyleSheet","timePicker","backgroundVideo","position","top","left","bottom","right","cuesInput","marginBottom","borderBottomColor","borderBottomWidth","color1","color2","color3","color4","color5","outline"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,EAAkDC,MAAlD,QAAgE,OAAhE;;;;;;;;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,gBAArB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,qBAAT;AACA,SAASC,QAAT;AACA,SAASC,SAAT,EAAoBC,UAApB,EAAgCC,oBAAhC,EAAsDC,WAAtD,EAAmEC,aAAnE;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,SACIC,OADJ,EAEIC,UAFJ,EAGIC,WAHJ,QAIO,+BAJP;AAKA,OAAOC,UAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AAEA,SAASC,qBAAT;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,OAAP;;AAGA,IAAMC,MAAyD,GAAG,SAA5DA,MAA4D,CAACC,KAAD,EAAgB;AAAA;;AAE9E,MAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;;AAF8E,kBAGxDlC,QAAQ,CAAC,EAAD,CAHgD;AAAA;AAAA,MAGvEmC,GAHuE;AAAA,MAGlEC,MAHkE;;AAAA,mBAIhDpC,QAAQ,CAAC,KAAD,CAJwC;AAAA;AAAA,MAIvEqC,OAJuE;AAAA,MAI9DC,UAJ8D;;AAAA,mBAKhDtC,QAAQ,CAAC,KAAD,CALwC;AAAA;AAAA,MAKvEuC,OALuE;AAAA,MAK9DC,UAL8D;;AAAA,mBAMlDxC,QAAQ,CAAC,KAAD,CAN0C;AAAA;AAAA,MAMvEyC,MANuE;AAAA,MAM/DC,SAN+D;;AAAA,mBAOpD1C,QAAQ,CAAC,CAAD,CAP4C;AAAA;AAAA,MAOvE2C,KAPuE;AAAA,MAOhEC,QAPgE;;AAAA,oBAQ5C5C,QAAQ,CAAC,GAAD,CARoC;AAAA;AAAA,MAQvE6C,SARuE;AAAA,MAQ5DC,YAR4D;;AAAA,oBASlC9C,QAAQ,CAAC,EAAD,CAT0B;AAAA;AAAA,MASvE+C,cATuE;AAAA,MASvDC,iBATuD;;AAAA,oBAU9ChD,QAAQ,CAACgC,KAAK,CAACiB,gBAAP,CAVsC;AAAA;AAAA,MAUvEC,qBAVuE;;AAAA,oBAW9BlD,QAAQ,CAACgC,KAAK,CAACiB,gBAAP,CAXsB;AAAA;AAAA,MAWvEA,gBAXuE;AAAA,MAWrDE,mBAXqD;;AAAA,oBAY5BnD,QAAQ,CAAC,KAAD,CAZoB;AAAA;AAAA,MAYvEoD,iBAZuE;AAAA,MAYpDC,oBAZoD;;AAAA,oBAa9CrD,QAAQ,CAAQ,EAAR,CAbsC;AAAA;AAAA,MAavEsD,QAbuE;AAAA,MAa7DC,WAb6D;;AAAA,oBAc5CvD,QAAQ,CAAM,EAAN,CAdoC;AAAA;AAAA,MAcvEwD,SAduE;AAAA,MAc5DC,YAd4D;;AAAA,oBAe5CzD,QAAQ,CAAC,IAAIkC,IAAJ,CAASD,OAAO,CAACyB,OAAR,KAAoB,OAAO,EAAP,GAAY,EAAzC,CAAD,CAfoC;AAAA;AAAA,MAevEC,SAfuE;AAAA,MAe5DC,YAf4D;;AAAA,oBAgBxB5D,QAAQ,CAAC,IAAD,CAhBgB;AAAA;AAAA,MAgBvE6D,mBAhBuE;AAAA,MAgBlDC,sBAhBkD;;AAiB9E,MAAMC,YAAmB,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwDC,OAAxD,EAA5B;;AAjB8E,oBAkBrDhE,QAAQ,CAAC,IAAIiE,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAlB6C;AAAA;AAAA,MAkBvEC,cAlBuE;;AAAA,oBAmBhCnE,QAAQ,CAACoE,IAAI,CAACC,MAAL,EAAD,CAnBwB;AAAA;AAAA,MAmBvEC,eAnBuE;AAAA,MAmBtDC,kBAnBsD;;AAoB9E,MAAIC,QAAa,GAAGvE,MAAM,EAA1B;;AApB8E,oBAqBlDD,QAAQ,CAAC,GAAD,CArB0C;AAAA;AAAA,MAqBvEyE,MArBuE;AAAA,MAqB/DC,SArB+D;;AAAA,oBAsBtD1E,QAAQ,CAAC,KAAD,CAtB8C;AAAA;AAAA,MAsBvE2E,IAtBuE;AAAA,MAsBjEC,OAtBiE;;AAAA,oBAuB1C5E,QAAQ,CAAC,KAAD,CAvBkC;AAAA;AAAA,MAuBvE6E,UAvBuE;AAAA,MAuB3DC,aAvB2D;;AAAA,oBAwB9C9E,QAAQ,CAAC,IAAIkC,IAAJ,CAASD,OAAO,CAACyB,OAAR,KAAoB,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAA9C,CAAD,CAxBsC;AAAA;AAAA,MAwBvEqB,QAxBuE;AAAA,MAwB7DC,WAxB6D;;AAAA,oBAyB1ChF,QAAQ,CAAC,IAAIkC,IAAJ,CAASD,OAAO,CAACyB,OAAR,EAAT,CAAD,CAzBkC;AAAA;AAAA,MAyBvEuB,UAzBuE;AAAA,MAyB3DC,aAzB2D;;AAAA,oBA0BxClF,QAAQ,CAAM,CAAN,CA1BgC;AAAA;AAAA,MA0BvEmF,WA1BuE;AAAA,MA0B1DC,cA1B0D;;AAAA,oBA2BlDpF,QAAQ,CAAC,KAAD,CA3B0C;AAAA;AAAA,MA2BvEqF,MA3BuE;AAAA,MA2B/DC,SA3B+D;;AAAA,oBA4B9CtF,QAAQ,CAAC,KAAD,CA5BsC;AAAA;AAAA,MA4BvEuF,QA5BuE;AAAA,MA4B7DC,WA5B6D;;AAAA,oBA6BxDxF,QAAQ,CAAC,EAAD,CA7BgD;AAAA;AAAA,MA6BvEyF,GA7BuE;AAAA,MA6BlEC,MA7BkE;;AAAA,oBA8BtD1F,QAAQ,CAAC,EAAD,CA9B8C;AAAA;AAAA,MA8BvE2F,IA9BuE;AAAA,MA8BjEC,OA9BiE;;AAAA,oBA+BpD5F,QAAQ,CAAC,EAAD,CA/B4C;AAAA;AAAA,MA+BvE6F,KA/BuE;AAAA,MA+BhEC,QA/BgE;;AAAA,oBAgC5B9F,QAAQ,CAAC,KAAD,CAhCoB;AAAA;AAAA,MAgCvE+F,iBAhCuE;AAAA,MAgCpDC,oBAhCoD;;AAAA,oBAiC9ChG,QAAQ,CAAQ,EAAR,CAjCsC;AAAA;AAAA,MAiCvEiG,QAjCuE;AAAA,MAiC7DC,WAjC6D;;AAAA,oBAkCxClG,QAAQ,CAAQ,EAAR,CAlCgC;AAAA;AAAA,MAkCvEmG,WAlCuE;AAAA,MAkC1DC,cAlC0D;;AAAA,oBAmC1CpG,QAAQ,CAAC,KAAD,CAnCkC;AAAA;AAAA,MAmCvEqG,UAnCuE;AAAA,MAmC3DC,aAnC2D;;AAAA,oBAqClDtG,QAAQ,CAAC,KAAD,CArC0C;AAAA;AAAA,MAqCvEuG,MArCuE;AAAA,MAqC/DC,SArC+D;;AAAA,oBAsC9CxG,QAAQ,CAAQ,EAAR,CAtCsC;AAAA;AAAA,MAsCvEyG,QAtCuE;AAAA,MAsC7DC,YAtC6D;;AAAA,oBAuCpD1G,QAAQ,CAAC,KAAD,CAvC4C;AAAA;AAAA,MAuCvE2G,KAvCuE;AAAA,MAuChEC,QAvCgE;;AAAA,oBAwC9C5G,QAAQ,CAAC;AACrC6G,IAAAA,KAAK,EAAE,CAD8B;AAC3BC,IAAAA,OAAO,EAAE,CADkB;AACfC,IAAAA,OAAO,EAAE;AADM,GAAD,CAxCsC;AAAA;AAAA,MAwCvEC,QAxCuE;AAAA,MAwC7DC,WAxC6D;;AAAA,oBA2C9CjH,QAAQ,CAAC,WAAD,CA3CsC;AAAA;AAAA,MA2CvEkH,QA3CuE;AAAA,MA2C7DC,WA3C6D;;AAAA,oBA4C1BnH,QAAQ,CAAC,KAAD,CA5CkB;AAAA;AAAA,MA4CvEoH,kBA5CuE;AAAA,MA4CnDC,qBA5CmD;;AAAA,oBA6CtCrH,QAAQ,CAAC,KAAD,CA7C8B;AAAA;AAAA,MA6CvEsH,YA7CuE;AAAA,MA6CzDC,eA7CyD;;AAAA,oBA8CxCvH,QAAQ,CAAC,KAAD,CA9CgC;AAAA;AAAA,MA8CvEwH,WA9CuE;AAAA,MA8C1DC,cA9C0D;;AAAA,oBA+CvCzH,QAAQ,CAAC,KAAD,CA/C+B;AAAA;AAAA,MA+CvE0H,YA/CuE;AAAA,MA+C1DC,eA/C0D;;AAiD9E,MAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;AACA,MAAMC,MAAM,GAAGF,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;;AAlD8E,oBAoD1C9H,QAAQ,CAAC;AAAE4H,IAAAA,MAAM,EAANA,MAAF;AAAUG,IAAAA,MAAM,EAANA;AAAV,GAAD,CApDkC;AAAA;AAAA,MAoDvEC,UApDuE;AAAA,MAoD3DC,aApD2D;;AAwD9E,MAAMC,oBAAoB,GAAGvG,qBAAqB,CAAC,iBAAD,CAAlD;AACA,MAAMwG,oBAAoB,GAAGxG,qBAAqB,CAAC,iBAAD,CAAlD;AACA,MAAMyG,wBAAwB,GAAGzG,qBAAqB,CAAC,qBAAD,CAAtD;AACA,MAAM0G,uBAAuB,GAAG1G,qBAAqB,CAAC,oBAAD,CAArD;AAEA,MAAM2G,uBAAuB,GAAG3G,qBAAqB,CAAC,oBAAD,CAArD;AACA,MAAM4G,yBAAyB,GAAG5G,qBAAqB,CAAC,sBAAD,CAAvD;AACA,MAAM6G,sBAAsB,GAAG7G,qBAAqB,CAAC,mBAAD,CAApD;AACA,MAAM8G,qBAAqB,GAAG9G,qBAAqB,CAAC,kBAAD,CAAnD;AACA,MAAM+G,kBAAkB,GAAG/G,qBAAqB,CAAC,eAAD,CAAhD;AACA,MAAMgH,eAAe,GAAGhH,qBAAqB,CAAC,YAAD,CAA7C;AACA,MAAMiH,uBAAuB,GAAGjH,qBAAqB,CAAC,oBAAD,CAArD;AACA,MAAMkH,oBAAoB,GAAGlH,qBAAqB,CAAC,iBAAD,CAAlD;AACA,MAAMmH,iBAAiB,GAAGnH,qBAAqB,CAAC,cAAD,CAA/C;AACA,MAAMoH,eAAe,GAAGpH,qBAAqB,CAAC,YAAD,CAA7C;AAEA,MAAMqH,kBAAkB,GAAGlJ,WAAW,CAAC,gBAA6B;AAAA,QAA1B8H,MAA0B,QAA1BA,MAA0B;AAAA,QAAlBG,MAAkB,QAAlBA,MAAkB;AAChEE,IAAAA,aAAa,CAAC;AAAEL,MAAAA,MAAM,EAANA,MAAF;AAAUG,MAAAA,MAAM,EAANA;AAAV,KAAD,CAAb;AACH,GAFqC,EAEnC,EAFmC,CAAtC;AAIAhI,EAAAA,SAAS,CAAC,YAAM;AACZ8H,IAAAA,UAAU,CAACoB,gBAAX,CAA4B,QAA5B,EAAsCD,kBAAtC;AACA,WAAO,YAAM;AACTnB,MAAAA,UAAU,CAACqB,mBAAX,CAA+B,QAA/B,EAAyCF,kBAAzC;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAOA,MAAMG,cAAc,GAAGrJ,WAAW,CAAC,YAAM;AACrC,QAAMsJ,WAAW,GAAG3H,QAAQ,CAACyF,QAAD,EAAW;AAAEmC,MAAAA,KAAK,EAAE;AAAT,KAAX,CAA5B;AACA7E,IAAAA,QAAQ,CAACvC,OAAT,CAAiBqH,UAAjB,CAA4B,eAAeF,WAAf,GAA6B,aAAzD;AACA/B,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAF,IAAAA,WAAW,CAAC,EAAD,CAAX;AAEH,GANiC,EAM/B,CAACD,QAAD,EAAW1C,QAAX,EAAqBA,QAAQ,CAACvC,OAA9B,EAAuCE,GAAvC,CAN+B,CAAlC;AAQApC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIoC,GAAG,CAAC,CAAD,CAAH,KAAW,GAAX,IAAkBA,GAAG,CAACA,GAAG,CAACoH,MAAJ,GAAa,CAAd,CAAH,KAAwB,GAA9C,EAAmD;AAC/C,UAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWvH,GAAX,CAAZ;AACAqD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,MAAM,CAAC8D,GAAG,CAAC/D,GAAL,CAAN;AACAG,MAAAA,OAAO,CAAC4D,GAAG,CAAC7D,IAAL,CAAP;AACH,KALD,MAKO;AACHH,MAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,MAAAA,MAAM,CAAC,EAAD,CAAN;AACAE,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAZQ,EAYN,CAAC3D,GAAD,CAZM,CAAT;AAcAwH,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BpC,WAA5B;AAEA,MAAMqC,aAAa,GAAG/J,WAAW,CAAC,YAAM;AACpC,QAAIgK,KAAK,GAAG,KAAZ;;AACA,QAAIrD,QAAQ,CAAC8C,MAAT,KAAoB,CAAxB,EAA2B;AACvBlI,MAAAA,KAAK,CAAC6G,oBAAD,CAAL;AACA;AACH;;AACD,QAAIvB,KAAJ,EAAW;AACP,UAAIK,QAAQ,CAACH,KAAT,KAAmB,CAAnB,IAAwBG,QAAQ,CAACF,OAAT,KAAqB,CAA7C,IAAkDE,QAAQ,CAACD,OAAT,KAAqB,CAA3E,EAA8E;AAC1E1F,QAAAA,KAAK,CAAC8G,oBAAD,CAAL;AACA;AACH;AACJ;;AACD1B,IAAAA,QAAQ,CAACsD,GAAT,CAAa,UAACC,OAAD,EAAa;AACtB,UAAIA,OAAO,CAACC,QAAR,KAAqB,EAArB,IAA2BD,OAAO,CAACC,QAAR,KAAqB,UAApD,EAAgE;AAC5D5I,QAAAA,KAAK,CAAC+G,wBAAD,CAAL;AACA0B,QAAAA,KAAK,GAAG,IAAR;AACH;;AACD,UAAIE,OAAO,CAACE,MAAR,KAAmB,EAAnB,IAAyBC,MAAM,CAACC,KAAP,CAAaD,MAAM,CAACH,OAAO,CAACE,MAAT,CAAnB,CAA7B,EAAmE;AAC/D7I,QAAAA,KAAK,CAACgH,uBAAD,CAAL;AACAyB,QAAAA,KAAK,GAAG,IAAR;AACH;;AACD,UAAIO,WAAW,GAAG,KAAlB;;AAOA,UAAI,CAACL,OAAO,CAACM,YAAT,IAAyBN,OAAO,CAACO,OAAR,CAAgBhB,MAAhB,GAAyB,CAAtD,EAAyD;AACrDlI,QAAAA,KAAK,CAAC,sCAAD,CAAL;AACAyI,QAAAA,KAAK,GAAG,IAAR;AACH;;AAGD,UAAI,CAACE,OAAO,CAACM,YAAb,EAA2B;AACvB,YAAME,IAAS,GAAG,EAAlB;AAEAR,QAAAA,OAAO,CAACO,OAAR,CAAgBR,GAAhB,CAAoB,UAACU,MAAD,EAAiB;AACjC,cAAIA,MAAM,CAACA,MAAP,KAAkB,EAAlB,IAAwBA,MAAM,CAACA,MAAP,KAAkB,UAA9C,EAA0D;AACtDpJ,YAAAA,KAAK,CAACiH,uBAAD,CAAL;AACAwB,YAAAA,KAAK,GAAG,IAAR;AACH;;AAED,cAAIW,MAAM,CAACA,MAAP,IAAiBD,IAArB,EAA2B;AACvBnJ,YAAAA,KAAK,CAAC,+BAAD,CAAL;AACAyI,YAAAA,KAAK,GAAG,IAAR;AACH;;AAED,cAAIW,MAAM,CAACC,SAAX,EAAsB;AAClBL,YAAAA,WAAW,GAAG,IAAd;AACH;;AAEDG,UAAAA,IAAI,CAACC,MAAM,CAACA,MAAR,CAAJ,GAAsB,CAAtB;AACH,SAhBD;;AAkBA,YAAI,CAACJ,WAAL,EAAkB;AACdhJ,UAAAA,KAAK,CAACkH,yBAAD,CAAL;AACAuB,UAAAA,KAAK,GAAG,IAAR;AACH;AACJ;AAEJ,KAjDD;;AAkDA,QAAIA,KAAJ,EAAW;AACP;AACH;;AAED,QAAMa,MAAM,GAAGlK,QAAQ,CAAC,EAAD,CAAvB;AACA,QAAMmK,eAAe,GAAI5D,QAAQ,CAACH,KAAT,GAAiB,EAAlB,GAAyBG,QAAQ,CAACF,OAAlC,GAA8CE,QAAQ,CAACD,OAAT,GAAmB,EAAzF;AACA4D,IAAAA,MAAM,CAACE,MAAP,CAAc;AACVC,MAAAA,QAAQ,EAAEnK,UADA;AAEVoK,MAAAA,SAAS,EAAE;AACPC,QAAAA,IAAI,EAAE;AACFvE,UAAAA,QAAQ,EAARA,QADE;AAEFO,UAAAA,QAAQ,EAAEL,KAAK,GAAGiE,eAAe,CAACK,QAAhB,EAAH,GAAgC,IAF7C;AAGFzD,UAAAA,WAAW,EAAXA;AAHE;AADC;AAFD,KAAd,EASG0D,IATH,CASQ,UAAAC,GAAG,EAAI;AACX,UAAIA,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASJ,IAAT,CAAcrK,UAAd,KAA6B,OAA7C,EAAsD;AAClD0K,QAAAA,UAAU,CAAC,WAAD,EAAc,EAAd,CAAV;AACAC,QAAAA,YAAY,CAACH,GAAG,CAACC,IAAJ,CAASJ,IAAT,CAAcrK,UAAf,CAAZ;AACH;AACJ,KAdD;AAeH,GAnFgC,EAmF9B,CAAC8F,QAAD,EAAWtE,GAAX,EAAgBgC,cAAhB,EAAgCpB,cAAhC,EAAgDf,KAAK,CAACuJ,eAAtD,EAAuEhF,MAAvE,EACCpB,WADD,EACcJ,QADd,EACwBE,UADxB,EACoCJ,UADpC,EACgDU,QADhD,EAC0DU,QAD1D,EACoEE,WADpE,EAEC9D,OAFD,EAEUQ,SAFV,EAEqBN,OAFrB,EAE8BI,KAF9B,EAEqCF,MAFrC,EAE6CoD,KAF7C,EAEoDF,IAFpD,EAE0DF,GAF1D,EAE+DkB,KAF/D,EAEsEK,QAFtE,EAGChF,KAAK,CAACwJ,UAHP,EAGmBhI,SAHnB,EAG8BG,SAH9B,EAGyCE,mBAHzC,EAG8D2D,WAH9D,CAnF8B,CAAjC;AAwFA,MAAMiE,mCAAmC,GAAG3L,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEhD0D,SAAS,KAAK,EAFkC;AAAA;AAAA;AAAA;;AAGhDL,YAAAA,mBAAmB,CAACD,qBAAD,CAAnB;AAHgD;;AAAA;AAM9CyH,YAAAA,MAN8C,GAMrClK,QAAQ,CAAC,EAAD,CAN6B;AAQpDkK,YAAAA,MAAM,CAACe,KAAP,CAAa;AACTA,cAAAA,KAAK,EAAE9K,oBADE;AAETmK,cAAAA,SAAS,EAAE;AACPvH,gBAAAA,SAAS,EAATA;AADO;AAFF,aAAb,EAKG0H,IALH,CAKQ,UAAAC,GAAG,EAAI;AACX,kBAAIA,GAAG,CAACC,IAAJ,CAASO,OAAT,IAAoBR,GAAG,CAACC,IAAJ,CAASO,OAAT,CAAiB/K,oBAAzC,EAA+D;AAC3DuC,gBAAAA,mBAAmB,CAACgI,GAAG,CAACC,IAAJ,CAASO,OAAT,CAAiB/K,oBAAlB,CAAnB;AACH;AACJ,aATD,EASGgL,KATH,CASS,UAAAC,GAAG,EAAI,CACf,CAVD;AAYAlB,YAAAA,MAAM,CAACe,KAAP,CAAa;AACTA,cAAAA,KAAK,EAAE5K,aADE;AAETiK,cAAAA,SAAS,EAAE;AACPvH,gBAAAA,SAAS,EAATA,SADO;AAEPsI,gBAAAA,KAAK,EAAE;AAFA;AAFF,aAAb,EAOKZ,IAPL,CAOU,UAACC,GAAD,EAAc;AAChB,kBAAIA,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASjJ,GAAT,CAAarB,aAA7B,EAA4C;AACxCsF,gBAAAA,cAAc,CAAC+E,GAAG,CAACC,IAAJ,CAASjJ,GAAT,CAAarB,aAAd,CAAd;AAEAoF,gBAAAA,WAAW,CAACiF,GAAG,CAACC,IAAJ,CAASjJ,GAAT,CAAarB,aAAd,CAAX;AACH;AACJ,aAbL,EAcK8K,KAdL,CAcW,UAACC,GAAD;AAAA,qBAAclC,OAAO,CAACC,GAAR,CAAYiC,GAAZ,CAAd;AAAA,aAdX;;AApBoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAoCpD,CAACrI,SAAD,EAAYN,qBAAZ,CApCoD,CAAvD;AAsCAnD,EAAAA,SAAS,CAAC,YAAM;AACZ0L,IAAAA,mCAAmC;AACtC,GAFQ,EAEN,CAACjI,SAAD,CAFM,CAAT;AAIA,MAAMuI,kBAAkB,GAAGjM,WAAW,CAAC,UAACkM,CAAD,EAAY;AAC/CtH,IAAAA,SAAS,CAACsH,CAAD,CAAT;AACH,GAFqC,EAEnC,EAFmC,CAAtC;AAIA,MAAMC,cAAc,GAAGnM,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACFkB,WAAW,CAACkL,yBAAZ,EADE;;AAAA;AACzBC,YAAAA,cADyB;;AAAA,gBAE1BA,cAAc,CAACC,OAFW;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAGrBpL,WAAW,CAACqL,6BAAZ,EAHqB;;AAAA;AAAA;AAAA,6CAISrL,WAAW,CAACkL,yBAAZ,EAJT;;AAAA;AAIrBI,YAAAA,qBAJqB;;AAAA,gBAKtBA,qBAAqB,CAACF,OALA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,6CASZpL,WAAW,CAACuL,iBAAZ,CAA8B;AAC7CC,cAAAA,UAAU,EAAExL,WAAW,CAACyL,gBAAZ,CAA6BC,MADI;AAE7CC,cAAAA,OAAO,EAAE,CAFoC;AAG7CC,cAAAA,MAAM,EAAE;AAHqC,aAA9B,CATY;;AAAA;AAS3BC,YAAAA,MAT2B;;AAc/B,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuB;AACnBtI,cAAAA,QAAQ,CAACvC,OAAT,CAAiB8K,WAAjB,CAA6BF,MAAM,CAACG,GAApC,EAAyC,oDAAzC;AACH;;AAhB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAiB/B,CAACxI,QAAD,EAAWA,QAAQ,CAACvC,OAApB,CAjB+B,CAAlC;AAmBA,MAAMgL,eAAe,GAAGnN,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEFkB,WAAW,CAACkM,+BAAZ,EAFE;;AAAA;AAE1BC,YAAAA,eAF0B;;AAAA,gBAG3BA,eAAe,CAACf,OAHW;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAItBpL,WAAW,CAACoM,mCAAZ,EAJsB;;AAAA;AAAA;AAAA,6CAKSpM,WAAW,CAACkM,+BAAZ,EALT;;AAAA;AAKtBG,YAAAA,sBALsB;;AAAA,gBAMvBA,sBAAsB,CAACjB,OANA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,6CAWbpL,WAAW,CAACsM,uBAAZ,CAAoC;AACnDd,cAAAA,UAAU,EAAExL,WAAW,CAACyL,gBAAZ,CAA6BC,MADU;AAEnDC,cAAAA,OAAO,EAAE,CAF0C;AAGnDC,cAAAA,MAAM,EAAE;AAH2C,aAApC,CAXa;;AAAA;AAW5BC,YAAAA,MAX4B;;AAiBhC,gBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuB;AACnBtI,cAAAA,QAAQ,CAACvC,OAAT,CAAiB8K,WAAjB,CAA6BF,MAAM,CAACG,GAApC,EAAyC,oDAAzC;AACH;;AAnB+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAoBhC,CAACxI,QAAD,EAAWA,QAAQ,CAACvC,OAApB,CApBgC,CAAnC;AAsBA,MAAMsL,YAAY,GAAGzN,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACFS,YAAY,CAACiN,OAAb,CAAqB,MAArB,CADE;;AAAA;AACvBC,YAAAA,OADuB;;AAE7B,gBAAIA,OAAJ,EAAa;AACHC,cAAAA,IADG,GACIjE,IAAI,CAACC,KAAL,CAAW+D,OAAX,CADJ;AAEH9C,cAAAA,MAFG,GAEMlK,QAAQ,CAAC,EAAD,CAFd;AAGTkK,cAAAA,MAAM,CAACe,KAAP,CAAa;AACTA,gBAAAA,KAAK,EAAE7K,WADE;AAETkK,gBAAAA,SAAS,EAAE;AACP4C,kBAAAA,MAAM,EAAED,IAAI,CAACE;AADN;AAFF,eAAb,EAMK1C,IANL,CAMU,UAAAC,GAAG,EAAI;AACT,oBAAIA,GAAG,CAACC,IAAJ,CAASO,OAAT,CAAiBkC,YAArB,EAAmC;AAC/BtK,kBAAAA,WAAW,CAAC4H,GAAG,CAACC,IAAJ,CAASO,OAAT,CAAiBkC,YAAlB,CAAX;AACH;AACJ,eAVL,EAWKjC,KAXL,CAWW,UAAAC,GAAG,EAAI,CACb,CAZL;AAaH;;AACDjH,YAAAA,OAAO,CAAC,IAAD,CAAP;;AAnB6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAoB7B,EApB6B,CAAhC;AAsBA7E,EAAAA,SAAS,CAAC,YAAM;AACZwN,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIAxN,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAI,CAAC4E,IAAL,EAAW;AACP;AACH;;AACD,QAAImJ,OAAO,GAAG,EAAd;;AAEA,QAAIvI,QAAJ,EAAc;AACV,UAAMiE,GAAG,GAAG;AACR7D,QAAAA,IAAI,EAAJA,IADQ;AAERF,QAAAA,GAAG,EAAHA,GAFQ;AAGRI,QAAAA,KAAK,EAALA;AAHQ,OAAZ;AAKAiI,MAAAA,OAAO,GAAGrE,IAAI,CAACsE,SAAL,CAAevE,GAAf,CAAV;AACH,KAPD,MAOO,IAAIjD,MAAJ,EAAa;AAChB,UAAMyE,IAAI,GAAG;AACTnF,QAAAA,KAAK,EAALA,KADS;AAETY,QAAAA,QAAQ,EAARA,QAFS;AAGTE,QAAAA,KAAK,EAALA,KAHS;AAITK,QAAAA,QAAQ,EAARA;AAJS,OAAb;AAOA,UAAMgH,QAAQ,GAAGvE,IAAI,CAACsE,SAAL,CAAe/C,IAAf,CAAjB;AAEAK,MAAAA,UAAU,CAAC,WAAD,EAAc2C,QAAd,CAAV;AACH,KAXM,MAWA;AACHF,MAAAA,OAAO,GAAG3L,GAAV;AACH;;AACD,QAAI2L,OAAO,IAAIA,OAAO,KAAK,EAA3B,EAA+B;AAC3BzC,MAAAA,UAAU,CAAC,UAAD,EAAayC,OAAb,CAAV;AACH,KAFD,MAEO;AACHzC,MAAAA,UAAU,CAAC,UAAD,EAAa,EAAb,CAAV;AACH;AACJ,GAhCQ,EAgCN,CAAClJ,GAAD,EAAMwC,IAAN,EAAYgB,IAAZ,EAAkBJ,QAAlB,EAA4BE,GAA5B,EAAiCI,KAAjC,EAAwCU,MAAxC,EAAgDE,QAAhD,EAA0DE,KAA1D,EAAiEK,QAAjE,CAhCM,CAAT;AAkCA,MAAMqE,UAAU,GAAGvL,WAAW,CAAC,kBAAO6F,IAAP,EAAasI,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACrB1N,YAAY,CAAC2N,OAAb,CAAqBvI,IAArB,EAA2BsI,KAA3B,CADqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAE3B,EAF2B,CAA9B;AAIA,MAAM3C,YAAY,GAAGxL,WAAW,CAAC,kBAAOqO,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAE7B5G,YAAAA,eAAe,CAAC,IAAD,CAAf;;AAF6B,iBAIzBD,YAJyB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kBAMzB,CAAC6G,MAAD,KAAYhM,GAAG,KAAK,IAAR,IAAgBA,GAAG,CAAC8I,QAAJ,GAAemD,IAAf,OAA0B,EAAtD,CANyB;AAAA;AAAA;AAAA;;AAOzB/M,YAAAA,KAAK,CAACyH,iBAAD,CAAL;AACAvB,YAAAA,eAAe,CAAC,KAAD,CAAf;AARyB;;AAAA;AAAA,kBAYzB,CAAChC,QAAQ,IAAIgB,MAAb,KAAwBV,KAAK,KAAK,EAZT;AAAA;AAAA;AAAA;;AAazBxE,YAAAA,KAAK,CAAC0H,eAAD,CAAL;AACAxB,YAAAA,eAAe,CAAC,KAAD,CAAf;AAdyB;;AAAA;AAAA,kBAkBzB1C,UAAU,IAAIE,QAAQ,GAAG,IAAI7C,IAAJ,EAlBA;AAAA;AAAA;AAAA;;AAmBzBb,YAAAA,KAAK,CAAC,uCAAD,CAAL;AACAkG,YAAAA,eAAe,CAAC,KAAD,CAAf;AApByB;;AAAA;AAyBzBuG,YAAAA,OAzByB,GAyBf,EAzBe;;AA0B7B,gBAAIK,MAAJ,EAAY;AACF3E,cAAAA,GADE,GACS;AACb2E,gBAAAA,MAAM,EAANA,MADa;AAEbtI,gBAAAA,KAAK,EAALA;AAFa,eADT;;AAKR,kBAAIc,KAAJ,EAAW;AACP6C,gBAAAA,GAAG,CAAC6E,WAAJ,GAAkB,IAAlB;AACH;;AACDP,cAAAA,OAAO,GAAGrE,IAAI,CAACsE,SAAL,CAAevE,GAAf,CAAV;AACH,aATD,MASO,IAAIjE,QAAJ,EAAc;AACXiE,cAAAA,IADW,GACL;AACR7D,gBAAAA,IAAI,EAAJA,IADQ;AAERF,gBAAAA,GAAG,EAAHA,GAFQ;AAGRI,gBAAAA,KAAK,EAALA;AAHQ,eADK;AAMjBiI,cAAAA,OAAO,GAAGrE,IAAI,CAACsE,SAAL,CAAevE,IAAf,CAAV;AACH,aAPM,MAOA;AACHsE,cAAAA,OAAO,GAAG3L,GAAV;AACH;;AA5C4B,kBA+CzBqB,SAAS,KAAK,EA/CW;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAgDrB8K,sBAAAA,OAhDqB,GAgDN,EAhDM;AAAA;AAAA;AAAA,uDAkDD/N,YAAY,CAACiN,OAAb,CAAqB,MAArB,CAlDC;;AAAA;AAkDfS,sBAAAA,KAlDe;;AAmDrB,0BAAIA,KAAJ,EAAW;AACPK,wBAAAA,OAAO,GAAG7E,IAAI,CAACC,KAAL,CAAWuE,KAAX,CAAV;AACH;;AArDoB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAwDrBL,sBAAAA,GAxDqB,GAwDfU,OAAO,CAAC,OAAD,CAAP,CAAiB/E,MAxDF;;AAAA;AAAA,2BAyDlB,IAzDkB;AAAA;AAAA;AAAA;;AA0DfgF,sBAAAA,WA1De,GA0DDD,OAAO,CAAC,OAAD,CAAP,CAAiBE,SAAjB,CAA2B,UAACC,IAAD,EAAe;AAC1D,+BAAOA,IAAI,CAACb,GAAL,KAAaA,GAApB;AACH,uBAFmB,CA1DC;;AAAA,4BA6DjBW,WAAW,KAAK,CAAC,CA7DA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAgEjBX,sBAAAA,GAAG;;AAhEc;AAAA;AAAA;;AAAA;AAmEzBU,sBAAAA,OAAO,CAAC,OAAD,CAAP,CAAiBI,IAAjB,CAAsB;AAClBd,wBAAAA,GAAG,EAAHA,GADkB;AAElBzL,wBAAAA,GAAG,EAAE2L,OAFa;AAGlBa,wBAAAA,IAAI,EAAE,IAAIzM,IAAJ,EAHY;AAIlBS,wBAAAA,KAAK,EAALA,KAJkB;AAKlBN,wBAAAA,OAAO,EAAPA,OALkB;AAMlBQ,wBAAAA,SAAS,EAATA,SANkB;AAOlBN,wBAAAA,OAAO,EAAPA,OAPkB;AAQlBQ,wBAAAA,cAAc,EAAdA,cARkB;AASlBY,wBAAAA,SAAS,EAAElB,MAAM,KAAKJ,OAAO,IAAI,CAACwB,mBAAjB,CAAN,GAA8CF,SAAS,CAACiL,WAAV,EAA9C,GAAwE;AATjE,uBAAtB;AAWMC,sBAAAA,eA9EmB,GA8EDpF,IAAI,CAACsE,SAAL,CAAeO,OAAf,CA9EC;AAAA;AAAA,uDA+EnB/N,YAAY,CAAC2N,OAAb,CAAqB,MAArB,EAA6BW,eAA7B,CA/EmB;;AAAA;AAgFzBxD,sBAAAA,UAAU,CAAC,UAAD,EAAa,EAAb,CAAV;AACA9D,sBAAAA,eAAe,CAAC,KAAD,CAAf;AACAvF,sBAAAA,KAAK,CAACwJ,UAAN;;AAlFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6CAqFHjL,YAAY,CAACiN,OAAb,CAAqB,MAArB,CArFG;;AAAA;AAqFnBC,YAAAA,OArFmB;;AAAA,gBAsFpBA,OAtFoB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kBA0FrBxH,QAAQ,CAACsD,MAAT,KAAoB,CA1FC;AAAA;AAAA;AAAA;;AA2FrBlI,YAAAA,KAAK,CAACmH,sBAAD,EAAyBC,qBAAzB,CAAL;AA3FqB;;AAAA;AAAA,kBA+FrB,CAAC5D,UAAU,IAAI0B,MAAf,KAA0BxB,QAAQ,GAAGE,UA/FhB;AAAA;AAAA;AAAA;;AAgGrB5D,YAAAA,KAAK,CAAC,iDAAD,EAAoD,EAApD,CAAL;AAhGqB;;AAAA;AAoGnBqM,YAAAA,IApGmB,GAoGZjE,IAAI,CAACC,KAAL,CAAW+D,OAAX,CApGY;AAqGnB9C,YAAAA,MArGmB,GAqGVlK,QAAQ,CAAC,EAAD,CArGE;AAsGnBqO,YAAAA,OAtGmB,GAsGF,EAtGE;;AAuGzB,gBAAI7I,QAAQ,CAACsD,MAAT,KAAoB,CAAxB,EAA2B;AACvBtD,cAAAA,QAAQ,CAAC8D,GAAT,CAAa,UAAC0E,IAAD,EAAU;AACnBK,gBAAAA,OAAO,CAACJ,IAAR,CAAaD,IAAI,CAACR,KAAlB;AACH,eAFD;AAGH;;AAEKlD,YAAAA,SA7GmB,GA6GP;AACd5I,cAAAA,GAAG,EAAE2L,OADS;AAEdvL,cAAAA,OAAO,EAAPA,OAFc;AAGdI,cAAAA,KAAK,EAAEA,KAAK,CAACsI,QAAN,EAHO;AAIdzH,cAAAA,SAAS,EAATA,SAJc;AAKdX,cAAAA,SAAS,EAATA,SALc;AAMdE,cAAAA,cAAc,EAAdA,cANc;AAOdV,cAAAA,OAAO,EAAPA,OAPc;AAQd0M,cAAAA,SAAS,EAAErB,IAAI,CAACE,GARF;AASdzI,cAAAA,WAAW,EAAEA,WAAW,CAAC8F,QAAZ,EATC;AAUdpG,cAAAA,UAAU,EAAEA,UAAU,IAAI0B,MAVZ;AAWdxB,cAAAA,QAAQ,EAAEF,UAAU,IAAI0B,MAAd,GAAuBxB,QAAQ,CAAC6J,WAAT,EAAvB,GAAgD,EAX5C;AAYd3J,cAAAA,UAAU,EAAEJ,UAAU,IAAI0B,MAAd,GAAuBtB,UAAU,CAAC2J,WAAX,EAAvB,GAAkD,EAZhD;AAadjL,cAAAA,SAAS,EAAElB,MAAM,KAAKJ,OAAO,IAAI,CAACwB,mBAAjB,CAAN,GAA8CF,SAAS,CAACiL,WAAV,EAA9C,GAAwE,EAbrE;AAcdI,cAAAA,gBAAgB,EAAE/I,QAAQ,CAACsD,MAAT,KAAoBpD,WAAW,CAACoD,MAAhC,GAAyC,IAAzC,GAAgDuF;AAdpD,aA7GO;AA8HzBnE,YAAAA,MAAM,CAACE,MAAP,CAAc;AACVC,cAAAA,QAAQ,EAAEpK,SADA;AAEVqK,cAAAA,SAAS,EAATA;AAFU,aAAd,EAIKG,IAJL,CAIU,UAAAC,GAAG,EAAI;AACT,kBAAIA,GAAG,CAACC,IAAJ,CAASjJ,GAAT,CAAa8M,MAAjB,EAAyB;AACrBhL,gBAAAA,QAAQ,CAACiL,MAAT,CAAgB/K,cAAhB,EAAgC;AAC5BgL,kBAAAA,OAAO,EAAE,CADmB;AAE5BnI,kBAAAA,QAAQ,EAAE,GAFkB;AAG5BoI,kBAAAA,eAAe,EAAE;AAHW,iBAAhC,EAIGC,KAJH,CAIS,YAAM;AACXhE,kBAAAA,UAAU,CAAC,UAAD,EAAa,EAAb,CAAV;AACA9D,kBAAAA,eAAe,CAAC,KAAD,CAAf;AACAvF,kBAAAA,KAAK,CAACwJ,UAAN;AACH,iBARD;AASH;AACJ,aAhBL,EAiBKI,KAjBL,CAiBW,UAAAC,GAAG,EAAI;AACVtE,cAAAA,eAAe,CAAC,KAAD,CAAf;AACAlG,cAAAA,KAAK,CAACuH,uBAAD,EAA0BC,oBAA1B,CAAL;AACH,aApBL;;AA9HyB;AAoJ7BtB,YAAAA,eAAe,CAAC,KAAD,CAAf;;AApJ6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAsJ7B,CAACpF,GAAD,EAAMgC,cAAN,EAAsBpB,cAAtB,EAAsCf,KAAK,CAACuJ,eAA5C,EAA6DhF,MAA7D,EAAqEI,KAArE,EAA4EK,QAA5E,EACC7B,WADD,EACcJ,QADd,EACwBE,UADxB,EACoCJ,UADpC,EACgDU,QADhD,EAC0DU,QAD1D,EACoEE,WADpE,EAEC9D,OAFD,EAEUQ,SAFV,EAEqBN,OAFrB,EAE8BI,KAF9B,EAEqCF,MAFrC,EAE6CoD,KAF7C,EAEoDF,IAFpD,EAE0DF,GAF1D,EAGCzD,KAAK,CAACwJ,UAHP,EAGmBhI,SAHnB,EAG8BG,SAH9B,EAGyCE,mBAHzC,CAtJ6B,CAAhC;AA2JA9D,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMuP,OAAO,GAAG,SAAVA,OAAU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEQ/O,YAAY,CAACiN,OAAb,CAAqB,UAArB,CAFR;;AAAA;AAEFxB,cAAAA,CAFE;;AAGR,kBAAIA,CAAC,KAAK,IAAV,EAAgB;AACZ5J,gBAAAA,MAAM,CAAC4J,CAAD,CAAN;AACH;;AALO;AAAA,+CAMgBzL,YAAY,CAACiN,OAAb,CAAqB,WAArB,CANhB;;AAAA;AAMF+B,cAAAA,SANE;;AAOR,kBAAIA,SAAS,KAAK,IAAlB,EAAwB;AAAA,8BACyB9F,IAAI,CAACC,KAAL,CAAW6F,SAAX,CADzB,EACZvI,SADY,eACZA,QADY,EACFL,MADE,eACFA,KADE,EACKF,SADL,eACKA,QADL,EACeZ,MADf,eACeA,KADf;AAGpBoB,gBAAAA,WAAW,CAACD,SAAD,CAAX;AACAJ,gBAAAA,QAAQ,CAACD,MAAD,CAAR;;AACAD,gBAAAA,YAAW,CAACD,SAAD,CAAX;;AACAX,gBAAAA,QAAQ,CAACD,MAAD,CAAR;AACH;;AAdO;AAAA;;AAAA;AAAA;AAAA;AAgBR8D,cAAAA,OAAO,CAACC,GAAR;;AAhBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAmBA0F,IAAAA,OAAO;AACV,GArBQ,EAqBN,EArBM,CAAT;AAuBA,MAAME,QAAQ,GAAG1P,WAAW,CAAC,YAAM;AAC/BuB,IAAAA,KAAK,CACDqH,kBADC,EAEDC,eAFC,EAGD,CACI;AACI8G,MAAAA,IAAI,EAAE,QADV;AACoBC,MAAAA,KAAK,EAAE;AAD3B,KADJ,EAII;AACID,MAAAA,IAAI,EAAE,OADV;AACmBE,MAAAA,OAAO,EAAE,mBAAM;AAC1BvN,QAAAA,MAAM,CAAC,EAAD,CAAN;AACAoD,QAAAA,WAAW,CAAC,KAAD,CAAX;AACAE,QAAAA,MAAM,CAAC,EAAD,CAAN;AACAE,QAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,QAAAA,QAAQ,CAAC,EAAD,CAAR;;AACAY,QAAAA,YAAW,CAAC,EAAD,CAAX;;AACAF,QAAAA,SAAS,CAAC,KAAD,CAAT;AACAI,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACAS,QAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAF,QAAAA,WAAW,CAAC,EAAD,CAAX;AACA5C,QAAAA,kBAAkB,CAACH,IAAI,CAACC,MAAL,EAAD,CAAlB;AACH;AAbL,KAJJ,CAHC,CAAL;AAwBH,GAzB2B,EAyBzB,EAzByB,CAA5B;AA2BAtE,EAAAA,SAAS,CAAC,YAAM;AACZkE,IAAAA,QAAQ,CAACiL,MAAT,CAAgB/K,cAAhB,EAAgC;AAC5BgL,MAAAA,OAAO,EAAE,CADmB;AAE5BnI,MAAAA,QAAQ,EAAE,GAFkB;AAG5BoI,MAAAA,eAAe,EAAE;AAHW,KAAhC,EAIGC,KAJH;AAKH,GANQ,EAMN,EANM,CAAT;AAQA,MAAMO,QAAQ,GAAG9P,WAAW,CAAC,UAACmO,KAAD,SAAqC;AAAA,QAA3B4B,MAA2B,SAA3BA,MAA2B;AAAA,QAAnBC,YAAmB,SAAnBA,YAAmB;;AAC9D,YAAQD,MAAR;AACI,WAAK,cAAL;AACA,WAAK,WAAL;AACI,YAAIC,YAAY,CAACC,OAAjB,EAA0B;AACtB;AACH;;AACD;;AACJ,WAAK,OAAL;AACI9B,QAAAA,KAAK,GAAG9H,WAAW,CAAC6J,MAAZ,CAAmB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACF,OAAN;AAAA,SAApB,CAAR;AACA;AATR;;AAWA7J,IAAAA,WAAW,CAAC+H,KAAD,CAAX;AACH,GAb2B,EAazB,CAAC9H,WAAD,CAbyB,CAA5B;AAeA,MAAM+J,gBAAgB,GAAGpQ,WAAW,CAAC,UAACkH,QAAD,EAAmB;AAAA,QAC5CH,KAD4C,GAChBG,QADgB,CAC5CH,KAD4C;AAAA,QACrCC,OADqC,GAChBE,QADgB,CACrCF,OADqC;AAAA,QAC5BC,OAD4B,GAChBC,QADgB,CAC5BD,OAD4B;AAEpDE,IAAAA,WAAW,CAAC;AAAEJ,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,OAAO,EAAPA,OAAT;AAAkBC,MAAAA,OAAO,EAAPA;AAAlB,KAAD,CAAX;AACH,GAHmC,EAGjC,EAHiC,CAApC;AAKA,MAAMoJ,SAAS,GAAGvO,MAAM,GAAGwO,QAAT,CAAkB,CAAlB,EAAqB,KAArB,CAAlB;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACpO,OAAD,EAAkB;AACpC,WAAOA,OAAO,CAACqO,OAAR,CAAgBH,SAAhB,CAAP;AACH,GAFD;;AAIA,MAAMI,SAAS,GAAG5O,qBAAqB,CAAC,gBAAD,CAAvC;AACA,MAAM0H,KAAK,GAAGrB,UAAU,CAACJ,MAAX,CAAkByB,KAAhC;AACA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTA,MAAAA,KAAK,EAAE,MADE;AAET5E,MAAAA,MAAM,EAAEuD,UAAU,CAACJ,MAAX,CAAkByB,KAAlB,GAA0B,IAA1B,GAAiCrB,UAAU,CAACJ,MAAX,CAAkBnD,MAAlB,GAA2B,EAA5D,GAAiEuD,UAAU,CAACJ,MAAX,CAAkBnD,MAFlF;AAGT+L,MAAAA,eAAe,EAAE,OAHR;AAITC,MAAAA,mBAAmB,EAAE,CAJZ;AAKTC,MAAAA,oBAAoB,EAAE,CALb;AAMTC,MAAAA,iBAAiB,EAAE,EANV;AAOTC,MAAAA,QAAQ,EAAE;AAPD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE;AAClBvH,MAAAA,KAAK,EAAE,MADW;AAElBmH,MAAAA,eAAe,EAAE,OAFC;AAGlBK,MAAAA,OAAO,EAAE1M,cAHS;AAIlBM,MAAAA,MAAM,EAAE;AAJU,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE4E,MAAAA,KAAK,EAAE,MAAT;AAAiByH,MAAAA,SAAS,EAAE,QAA5B;AAAsCrM,MAAAA,MAAM,EAAE,EAA9C;AAAkDsM,MAAAA,aAAa,EAAE;AAAjE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAER,MAAAA,eAAe,EAAE,OAAnB;AAA4BS,MAAAA,IAAI,EAAE;AAAlC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,QAAQ,EAAE,EADP;AAEHH,MAAAA,aAAa,EAAE,EAFZ;AAGHI,MAAAA,aAAa,EAAE;AAHZ,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKxP,qBAAqB,CAAC,KAAD,CAR1B,CADJ,CADJ,EAaI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAE;AAAA,aAAMa,UAAU,CAAC,CAACD,OAAF,CAAhB;AAAA,KADb;AAEI,IAAA,KAAK,EAAE;AACHiO,MAAAA,eAAe,EAAE;AADd,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTM,MAAAA,SAAS,EAAE,OADF;AAETM,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,SAAS,EAAE,CAAC,EAHH;AAKThI,MAAAA,KAAK,EAAE;AALE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,UAAf;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAoC,IAAA,KAAK,EAAE9G,OAAO,GAAG,SAAH,GAAe,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CALJ,CAbJ,CATJ,EAsCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACT8G,MAAAA,KAAK,EAAE,MADE;AAETiI,MAAAA,OAAO,EAAE,MAFA;AAGTN,MAAAA,aAAa,EAAEhJ,UAAU,CAACJ,MAAX,CAAkByB,KAAlB,GAA0B,GAA1B,GAAgC,gBAAhC,GAAmD,KAHzD;AAIT0H,MAAAA,aAAa,EAAE,CAJN;AAKTM,MAAAA,SAAS,EAAEtL,iBAAiB,IAAIR,QAArB,IAAiCgB,MAAjC,GAA0C,CAA1C,GAA8C,EALhD;AAMTiK,MAAAA,eAAe,EAAE;AANR,KAAb;AAOG,IAAA,YAAY,EAAE;AAAA,aAAMe,QAAQ,CAACC,OAAT,EAAN;AAAA,KAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAER,MAAAA,aAAa,EAAEhJ,UAAU,CAACJ,MAAX,CAAkByB,KAAlB,GAA0B,GAA1B,GAAgC,QAAhC,GAA2C,KAA5D;AAAmE4H,MAAAA,IAAI,EAAE;AAAzE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQlL,iBAAiB,GAAG,IAAH,GACb,oBAAC,WAAD;AACI,IAAA,GAAG,EAAEzB,eAAe,CAAC2G,QAAhB,EADT;AAEI,IAAA,KAAK,EAAE;AACHwG,MAAAA,QAAQ,EAAE,MADP;AAEHjB,MAAAA,eAAe,EAAE,OAFd;AAGH/L,MAAAA,MAAM,EAAE,EAHL;AAIHmM,MAAAA,QAAQ,EAAE;AAJP,KAFX;AAQI,IAAA,QAAQ,EAAE,EARd;AASI,IAAA,MAAM,EAAEpM,QATZ;AAUI,IAAA,QAAQ,EAAE,KAVd;AAWI,IAAA,QAAQ,EAAE,SAXd;AAYI,IAAA,gBAAgB,EAAE,SAZtB;AAaI,IAAA,gBAAgB,EAAE,SAbtB;AAcI,IAAA,OAAO,EACHe,QAAQ,IAAIgB,MAAZ,GAAqB,CAAC,EAAD,CAArB,GACI,CACItF,OAAO,CAACyQ,OADZ,EAEIzQ,OAAO,CAAC0Q,SAFZ,EAGI1Q,OAAO,CAAC2Q,YAHZ,EAII3Q,OAAO,CAAC4Q,iBAJZ,EAKI5Q,OAAO,CAAC6Q,iBALZ,EAMI7Q,OAAO,CAAC8Q,YANZ,EAOI9Q,OAAO,CAAC+Q,UAPZ,EAQI/Q,OAAO,CAAC8L,WARZ,EAUI9L,OAAO,CAACgR,IAVZ,EAWIhR,OAAO,CAACiR,IAXZ,EAYI,OAZJ,CAhBZ;AA8BI,IAAA,OAAO,sCACF,cADE,EACe;AAAA,UAAGC,SAAH,SAAGA,SAAH;AAAA,aAAmB,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,gBAAf;AAAgC,QAAA,IAAI,EAAE,EAAtC;AAA0C,QAAA,KAAK,EAAEA,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB;AAAA,KADf,0BAEF,OAFE,EAEQ;AAAA,UAAGA,SAAH,SAAGA,SAAH;AAAA,aAAmB,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAC,eAAf;AAA+B,QAAA,IAAI,EAAE,EAArC;AAAyC,QAAA,KAAK,EAAEA,SAAhD;AAA2D,QAAA,OAAO,EAAE;AAAA,iBAAM3C,QAAQ,EAAd;AAAA,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB;AAAA,KAFR,SA9BX;AAkCI,IAAA,eAAe,EAAEvC,eAlCrB;AAmCI,IAAA,YAAY,EAAEhB,cAnClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ,EA0CQ1G,QAAQ,IAAI,CAACQ,iBAAb,GAAiC,IAAjC,GACI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAE;AAAA,aAAMC,oBAAoB,CAAC,KAAD,CAA1B;AAAA,KADV;AAEI,IAAA,QAAQ,EAAE,kBAACoM,CAAD,EAASC,CAAT,EAAoB;AAC1B,UAAM7I,GAAG,GAAG;AAAE/D,QAAAA,GAAG,EAAE2M,CAAP;AAAUzM,QAAAA,IAAI,EAAE0M,CAAhB;AAAmBxM,QAAAA,KAAK,EAALA;AAAnB,OAAZ;AACAzD,MAAAA,MAAM,CAACqH,IAAI,CAACsE,SAAL,CAAevE,GAAf,CAAD,CAAN;AACAxD,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CZ,CARJ,EA6DI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEgL,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAACzK,MAAD,GACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACT5D,MAAAA,KAAK,EAAE,SADE;AAETuO,MAAAA,QAAQ,EAAE,EAFD;AAGTE,MAAAA,UAAU,EAAE,EAHH;AAITN,MAAAA,SAAS,EAAE,OAJF;AAKTwB,MAAAA,YAAY,EAAE,EALL;AAMTnB,MAAAA,aAAa,EAAE;AANN,KAAb;AAQI,IAAA,OAAO,EAAE;AAAA,aAAM9J,qBAAqB,CAAC,CAACD,kBAAF,CAA3B;AAAA,KARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWQA,kBAAkB,GAAGzF,qBAAqB,CAAC,MAAD,CAAxB,GAAmCA,qBAAqB,CAAC,SAAD,CAXlF,CADJ,GAcc,IAhBtB,EAmBQ4E,MAAM,GAAG,IAAH,GACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACT5D,MAAAA,KAAK,EAAE,SADE;AAETuO,MAAAA,QAAQ,EAAE,EAFD;AAGTE,MAAAA,UAAU,EAAE,EAHH;AAITN,MAAAA,SAAS,EAAE,OAJF;AAKTwB,MAAAA,YAAY,EAAE,EALL;AAMTnB,MAAAA,aAAa,EAAE;AANN,KAAb;AAQI,IAAA,OAAO,EAAE;AAAA,aAAMnL,oBAAoB,CAAC,IAAD,CAA1B;AAAA,KARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUKrE,qBAAqB,CAAC,QAAD,CAV1B,CApBZ,EAiCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTgB,MAAAA,KAAK,EAAE,SADE;AAETuO,MAAAA,QAAQ,EAAE,EAFD;AAGTE,MAAAA,UAAU,EAAE,EAHH;AAITN,MAAAA,SAAS,EAAE,OAJF;AAKTwB,MAAAA,YAAY,EAAE,EALL;AAMTnB,MAAAA,aAAa,EAAE;AANN,KAAb;AAQI,IAAA,OAAO,EAAE,mBAAM;AACX,UAAI3N,SAAS,KAAK,EAAlB,EAAsB;AAClBgD,QAAAA,SAAS,CAAC,IAAD,CAAT;AACA1B,QAAAA,aAAa,CAAC,IAAD,CAAb;AACH,OAHD,MAGO;AACHzD,QAAAA,KAAK,CAACkP,SAAD,CAAL;AACH;AACJ,KAfL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBK5O,qBAAqB,CAAC,MAAD,CAjB1B,CAjCJ,CA7DJ,CAtCJ,EA0JQyF,kBAAkB,GACd,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEiC,MAAAA,KAAK,EAAE,MAAT;AAAiB2H,MAAAA,aAAa,EAAE3H,KAAK,GAAG,GAAR,GAAc,QAAd,GAAyB,KAAzD;AAAgE0H,MAAAA,aAAa,EAAE;AAA/E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTwB,MAAAA,WAAW,EAAE,SADJ;AAETC,MAAAA,WAAW,EAAE,CAFJ;AAGTC,MAAAA,YAAY,EAAE,EAHL;AAITC,MAAAA,OAAO,EAAE,EAJA;AAKTC,MAAAA,QAAQ,EAAE,GALD;AAMTC,MAAAA,QAAQ,EAAE;AAND,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE1L,QADX;AAEI,IAAA,QAAQ,EAAEC,WAFd;AAGI,IAAA,YAAY,EAAC,iDAHjB;AAII,IAAA,iBAAiB,EAAC,kCAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ,EAgBI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAE;AACH0L,MAAAA,cAAc,EAAE,QADb;AAEHlC,MAAAA,iBAAiB,EAAE,EAFhB;AAGHiC,MAAAA,QAAQ,EAAE;AAHP,KADX;AAMI,IAAA,OAAO,EAAE;AAAA,aAAMzJ,cAAc,EAApB;AAAA,KANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,oBAAf;AAAoC,IAAA,KAAK,EAAC,SAA1C;AAAoD,IAAA,IAAI,EAAE,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CAhBJ,EA0BI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEwJ,MAAAA,QAAQ,EAAE,KAAZ;AAAmB1B,MAAAA,IAAI,EAAE,CAAzB;AAA4B6B,MAAAA,eAAe,EAAE,CAA7C;AAAgDD,MAAAA,cAAc,EAAE;AAAhE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE5B,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,QAAQ,EAAE,EAArB;AAAyBvO,MAAAA,KAAK,EAAE;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2QADJ,CA1BJ,CADc,GAgCJ,IA1LtB,EA4LI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAE;AAAEoO,MAAAA,aAAa,EAAE;AAAjB,KADX;AAEI,IAAA,4BAA4B,EAAE,KAFlC;AAGI,IAAA,aAAa,EAAE,IAHnB;AAII,IAAA,mBAAmB,EAAE,CAJzB;AAKI,IAAA,mBAAmB,EAAE,SALzB;AAMI,IAAA,cAAc,EAAE,QANpB;AAOI,IAAA,mBAAmB,EAAE,IAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUQxL,QAAQ,IAAIgB,MAAZ,GACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE+K,MAAAA,OAAO,EAAE,MAAX;AAAmBN,MAAAA,aAAa,EAAE3H,KAAK,GAAG,GAAR,GAAc,QAAd,GAAyB,KAA3D;AAAkEuH,MAAAA,QAAQ,EAAE;AAA5E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEvH,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,MAAd,GAAuB,QAAhC;AAA0C0J,MAAAA,gBAAgB,EAAE,CAA5D;AAA+DR,MAAAA,WAAW,EAAE,SAA5E;AAAuFD,MAAAA,YAAY,EAAE,EAArG;AAAyGhB,MAAAA,OAAO,EAAE,MAAlH;AAA0HN,MAAAA,aAAa,EAAE;AAAzI,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEnL,KADX;AAEI,IAAA,KAAK,EAAEmN,MAAM,CAACC,KAFlB;AAGI,IAAA,WAAW,EAAEtR,qBAAqB,CAAC,OAAD,CAHtC;AAII,IAAA,YAAY,EAAE,sBAAAuR,GAAG;AAAA,aAAIpN,QAAQ,CAACoN,GAAD,CAAZ;AAAA,KAJrB;AAKI,IAAA,oBAAoB,EAAE,SAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE,EADT;AAEHC,MAAAA,UAAU,EAAE;AAFT,KADX;AAKI,IAAA,OAAO,EAAE;AAAA,aAAM5D,QAAQ,EAAd;AAAA,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,eAAf;AAA+B,IAAA,KAAK,EAAC,SAArC;AAA+C,IAAA,IAAI,EAAE,EAArD;AAAyD,IAAA,KAAK,EAAE;AAAE6D,MAAAA,SAAS,EAAE;AAAb,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACHnC,MAAAA,QAAQ,EAAE,CADP;AAEHvO,MAAAA,KAAK,EAAE,SAFJ;AAGHmO,MAAAA,SAAS,EAAE;AAHR,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,CARJ,CADJ,EA4BQvK,MAAM,GACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE8C,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,MAAd,GAAuB,QAAhC;AAA0C0J,MAAAA,gBAAgB,EAAE,CAA5D;AAA+DR,MAAAA,WAAW,EAAE,SAA5E;AAAuFa,MAAAA,UAAU,EAAE;AAAnG,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE/J,MAAAA,KAAK,EAAE,MAAT;AAAiB0H,MAAAA,aAAa,EAAE,EAAhC;AAAoCP,MAAAA,eAAe,EAAE;AAArD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,EAAZ;AAAgBvO,MAAAA,KAAK,EAAE;AAAvB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,eAAf;AAA+B,IAAA,IAAI,EAAE,EAArC;AAAyC,IAAA,KAAK,EAAE,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACT6N,MAAAA,eAAe,EAAE,OADR;AAETnH,MAAAA,KAAK,EAAE,MAFE;AAGT5E,MAAAA,MAAM,EAAE,EAHC;AAIT6O,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAE3M,KADX;AAEI,IAAA,aAAa,EAAE,yBAAM;AACjB,UAAIA,KAAJ,EAAW;AACPM,QAAAA,WAAW,CAAC;AACRJ,UAAAA,KAAK,EAAE,CADC;AAERC,UAAAA,OAAO,EAAE,CAFD;AAGRC,UAAAA,OAAO,EAAE;AAHD,SAAD,CAAX;AAKH;;AACDH,MAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACH,KAXL;AAYI,IAAA,KAAK,EAAE;AAAElC,MAAAA,MAAM,EAAE;AAAV,KAZX;AAaI,IAAA,UAAU,EAAE;AACR8O,MAAAA,KAAK,EAAE,SADC;AAERC,MAAAA,IAAI,EAAE;AAFE,KAbhB;AAiBI,IAAA,gBAAgB,EAAC,OAjBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CANJ,CADE,GAiCQ,IA7DtB,EAgEQjN,MAAM,IAAII,KAAV,GACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE0C,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,MAAd,GAAuB,KAAhC;AAAuC0J,MAAAA,gBAAgB,EAAE,CAAzD;AAA4DR,MAAAA,WAAW,EAAE;AAAzE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AACI,IAAA,QAAQ,EAAErC,gBADd;AAEI,IAAA,eAAe,EAAE;AAAErJ,MAAAA,KAAK,EAAE,CAAT;AAAYC,MAAAA,OAAO,EAAE,CAArB;AAAwBC,MAAAA,OAAO,EAAE;AAAjC,KAFrB;AAGI,IAAA,QAAQ,EAAE,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,GAOc,IAvEtB,CADJ,GA0Ec,IApFtB,EAsFI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTsC,MAAAA,KAAK,EAAE,MADE;AAEToK,MAAAA,SAAS,EAAElN,MAAM,GAAG,CAAH,GAAO,GAFf;AAGTiK,MAAAA,eAAe,EAAE;AAHR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMQjK,MAAM,GACF,oBAAC,UAAD;AACI,IAAA,QAAQ,EAAEE,QADd;AAEI,IAAA,WAAW,EAAE,qBAACiN,CAAD;AAAA,aAAYhN,YAAW,CAACgN,CAAD,CAAvB;AAAA,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,GAKCnO,QAAQ,GAEHI,IAAI,KAAK,KAAT,IAAkBA,IAAI,KAAK,KAA3B,IAAoCA,IAAI,KAAK,KAA7C,IAAsDA,IAAI,KAAK,MAA/D,IAAyEA,IAAI,KAAK,KAAlF,IAA2FA,IAAI,KAAK,KAApG,GACI,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEF,GAAlB;AAAuB,IAAA,QAAQ,EAAE,IAAjC;AAAuC,IAAA,aAAa,EAAE,uBAACkO,CAAD;AAAA,aAAYA,CAAC,CAACC,cAAF,EAAZ;AAAA,KAAtD;AAAsF,IAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AAAd;AAAR,KAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAGI,oBAAC,IAAD;AACI,IAAA,GAAG,EAAEtO,GADT;AAEI,IAAA,KAAK,EAAE;AAAEwL,MAAAA,IAAI,EAAE;AAAR,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,OAAD;AACI,IAAA,GAAG,EAAExL,GADT;AAEI,IAAA,GAAG,EAAEA,GAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CALD,GAgBP,IA3BhB,EA6BI,oBAAC,UAAD;AACI,IAAA,GAAG,EAAEnB,eAAe,CAAC2G,QAAhB,EADT;AAEI,IAAA,cAAc,EAAE;AACZxG,MAAAA,MAAM,EAANA,MADY;AAEZ+L,MAAAA,eAAe,EAAE,SAFL;AAGZkC,MAAAA,OAAO,EAAE,CAHG;AAIZU,MAAAA,UAAU,EAAE,CAJA;AAKZrC,MAAAA,aAAa,EAAE,EALH;AAMZ0B,MAAAA,YAAY,EAAE,EANF;AAOZnB,MAAAA,OAAO,EAAG/K,MAAM,IAAIhB,QAAX,GAAuB,MAAvB,GAAgC;AAP7B,KAFpB;AAWI,IAAA,GAAG,EAAEf,QAXT;AAYI,IAAA,KAAK,EAAE;AACH6E,MAAAA,KAAK,EAAE,MADJ;AAEHmH,MAAAA,eAAe,EAAE,SAFd;AAGHiC,MAAAA,YAAY,EAAE,EAHX;AAIHgB,MAAAA,SAAS,EAAE,GAJR;AAKHnC,MAAAA,OAAO,EAAG/K,MAAM,IAAIhB,QAAX,GAAuB,MAAvB,GAAgC;AALtC,KAZX;AAmBI,IAAA,WAAW,EAAE;AACTiL,MAAAA,eAAe,EAAE,SADR;AAETwD,MAAAA,gBAAgB,EAAE,SAFT;AAGTrR,MAAAA,KAAK,EAAE,SAHE;AAITsR,MAAAA,cAAc,EAAE;AAJP,KAnBjB;AA0BI,IAAA,kBAAkB,EAAE9R,GA1BxB;AA2BI,IAAA,QAAQ,EAAE;AAAA,aAAMoP,QAAQ,CAACC,OAAT,EAAN;AAAA,KA3Bd;AA4BI,IAAA,WAAW,EAAE7P,qBAAqB,CAAC,OAAD,CA5BtC;AA6BI,IAAA,QAAQ,EAAE,kBAAC8N,IAAD,EAAU;AAChB,UAAMyE,WAAW,GAAGzE,IAAI,CAAC0E,KAAL,CAAW,OAAX,EAAoBC,IAApB,CAAyB,GAAzB,CAApB;AACAhS,MAAAA,MAAM,CAAC8R,WAAD,CAAN;AACH,KAhCL;AAiCI,IAAA,cAAc,EAAEnI,kBAjCpB;AAkCI,IAAA,MAAM,EAAE;AAAA,aAAMwF,QAAQ,CAACC,OAAT,EAAN;AAAA,KAlCZ;AAmCI,IAAA,eAAe,EAAE,IAnCrB;AAoCI,IAAA,2BAA2B,EAAE,IApCjC;AAqCI,IAAA,gCAAgC,EAAE,IArCtC;AAsCI,IAAA,qBAAqB,EAAE,IAtC3B;AAuCI,IAAA,yBAAyB,EAAE,IAvC/B;AAwCI,IAAA,iBAAiB,EAAE,IAxCvB;AAyCI,IAAA,mCAAmC,EAAE,IAzCzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,CAtFJ,EAgKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEP,MAAAA,IAAI,EAAE,CAAR;AAAWK,MAAAA,OAAO,EAAE,MAApB;AAA4BN,MAAAA,aAAa,EAAE,QAA3C;AAAqDqD,MAAAA,gBAAgB,EAAE;AAAvE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK/Q,QAAQ,CAACiG,MAAT,KAAoB,CAApB,GACG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE+H,MAAAA,OAAO,EAAE,MAAX;AAAmBN,MAAAA,aAAa,EAAE3H,KAAK,GAAG,GAAR,GAAc,QAAd,GAAyB,KAA3D;AAAkEuH,MAAAA,QAAQ,EAAE;AAA5E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEvH,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,MAAd,GAAuB,QAAhC;AAA0C0J,MAAAA,gBAAgB,EAAE,CAA5D;AAA+DR,MAAAA,WAAW,EAAE;AAA5E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAElJ,MAAAA,KAAK,EAAE,MAAT;AAAiB+J,MAAAA,UAAU,EAAE,EAA7B;AAAiCrC,MAAAA,aAAa,EAAE,EAAhD;AAAoDP,MAAAA,eAAe,EAAE;AAArE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,EAAZ;AAAgBvO,MAAAA,KAAK,EAAE;AAAvB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,EASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE0G,MAAAA,KAAK,EAAE,MAAT;AAAiBiI,MAAAA,OAAO,EAAE,MAA1B;AAAkCN,MAAAA,aAAa,EAAE,KAAjD;AAAwDR,MAAAA,eAAe,EAAE;AAAzE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEnH,MAAAA,KAAK,EAAE,KAAT;AAAgBmH,MAAAA,eAAe,EAAE,OAAjC;AAA0Cc,MAAAA,OAAO,EAAE;AAAnD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE0B,MAAM,CAACsB,QAA1B;AAAoC,IAAA,UAAU,EAAE,IAAhD;AAAsD,IAAA,8BAA8B,EAAE,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAE9Q,SAAS,KAAK,EAAd,GAAmBwP,MAAM,CAACuB,UAA1B,GAAuCvB,MAAM,CAACwB,QADzD;AAEI,IAAA,OAAO,EAAE,mBAAM;AACX/Q,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAN,MAAAA,mBAAmB,CAACD,qBAAD,CAAnB;AACAF,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAK,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAyB,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAM,MAAAA,cAAc,CAAC,CAAD,CAAd;AACAE,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAY,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;;AACAM,MAAAA,YAAW,CAAC,EAAD,CAAX;;AACAF,MAAAA,SAAS,CAAC,KAAD,CAAT;AACAI,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH,KAfL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEwK,MAAAA,UAAU,EAAE,EAAd;AAAkBF,MAAAA,QAAQ,EAAE,EAA5B;AAAgCvO,MAAAA,KAAK,EAAEa,SAAS,KAAK,EAAd,GAAmB,MAAnB,GAA4B;AAAnE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEK7B,qBAAqB,CAAC,QAAD,CAF1B,CAhBJ,CADJ,EAuBQ2B,QAAQ,CAACyG,GAAT,CAAa,UAAC4B,OAAD,EAAa;AACtB,WAAO,oBAAC,gBAAD;AACH,MAAA,GAAG,EAAEvH,IAAI,CAACC,MAAL,EADF;AAEH,MAAA,KAAK,EAAEb,SAAS,KAAKmI,OAAO,CAACiC,GAAtB,GAA4BoF,MAAM,CAACuB,UAAnC,GAAgDvB,MAAM,CAACwB,QAF3D;AAGH,MAAA,OAAO,EAAE,mBAAM;AACX/Q,QAAAA,YAAY,CAACkI,OAAO,CAACiC,GAAT,CAAZ;AACAvK,QAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAL,QAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACA8B,QAAAA,aAAa,CAACyB,MAAM,GAAG,IAAH,GAAU,KAAjB,CAAb;AACAnB,QAAAA,cAAc,CAAC,CAAD,CAAd;AACAE,QAAAA,SAAS,CAAC,KAAD,CAAT;AACH,OAVE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWH,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE8L,QAAAA,UAAU,EAAE,EAAd;AAAkBF,QAAAA,QAAQ,EAAE,EAA5B;AAAgCvO,QAAAA,KAAK,EAAEa,SAAS,KAAKmI,OAAO,CAACiC,GAAtB,GAA4B,MAA5B,GAAqC;AAA5E,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKjC,OAAO,CAAC8I,IADb,CAXG,CAAP;AAeH,GAhBD,CAvBR,CADJ,CADJ,CATJ,EAwDQjR,SAAS,KAAK,EAAd,GACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEkR,MAAAA,SAAS,EAAE,GAAb;AAAkB1D,MAAAA,aAAa,EAAE,QAAjC;AAA2CK,MAAAA,SAAS,EAAE,EAAtD;AAA0DT,MAAAA,QAAQ,EAAE;AAApE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEvH,MAAAA,KAAK,EAAE,KAAT;AAAgBqJ,MAAAA,OAAO,EAAE,CAAzB;AAA4BjO,MAAAA,MAAM,EAAE4B,UAAU,GAAG,GAAH,GAAS;AAAvD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,WAAW,EAAC,YADhB;AAEI,IAAA,MAAM,EAAE;AACJsO,MAAAA,IAAI,EAAE,cAACC,QAAD,EAAgBC,KAAhB;AAAA,+CACCD,QADD;AAEFE,UAAAA,MAAM,EAAE,IAFN;AAGFlE,UAAAA,QAAQ,EAAE,QAHR;AAIFnM,UAAAA,MAAM,EAAE,GAJN;AAKF6M,UAAAA,OAAO,EAAE,MALP;AAMFyD,UAAAA,MAAM,EAAE,CANN;AAOF1L,UAAAA,KAAK,EAAE,KAPL;AAQF2L,UAAAA,SAAS,EAAE;AART;AAAA,OADF;AAWJvK,MAAAA,MAAM,EAAE,gBAACmK,QAAD,EAAgBC,KAAhB;AAAA,+CACDD,QADC;AAEJK,UAAAA,UAAU,EAAE,UAFR;AAGJtS,UAAAA,KAAK,EAAE,SAHH;AAIJuO,UAAAA,QAAQ,EAAE,EAJN;AAKJzM,UAAAA,MAAM,EAAE,EALJ;AAMJ4E,UAAAA,KAAK,EAAE;AANH;AAAA,OAXJ;AAmBJ4J,MAAAA,KAAK,EAAE,eAACD,MAAD;AAAA,eAAkB;AAErB3J,UAAAA,KAAK,EAAE,MAFc;AAGrB6L,UAAAA,MAAM,EAAE,MAHa;AAIrB1C,UAAAA,WAAW,EAAE,CAJQ;AAKrBtB,UAAAA,QAAQ,EAAE;AALW,SAAlB;AAAA,OAnBH;AA0BJiE,MAAAA,WAAW,EAAE,qBAACnC,MAAD;AAAA,+CACNA,MADM;AAETiC,UAAAA,UAAU,EAAE,UAFH;AAGTtS,UAAAA,KAAK,EAAE,SAHE;AAITuO,UAAAA,QAAQ,EAAE;AAJD;AAAA,OA1BT;AAgCJkE,MAAAA,eAAe,EAAE,yBAACpC,MAAD;AAAA,YAAgB5H,IAAhB,SAAgBA,IAAhB;AAAA,+CACV4H,MADU;AAEbrQ,UAAAA,KAAK,EAAE,SAFM;AAGbsS,UAAAA,UAAU,EAAE;AAHC;AAAA,OAhCb;AAqCJI,MAAAA,UAAU,EAAE,oBAACrC,MAAD;AAAA,YAAgB5H,IAAhB,SAAgBA,IAAhB;AAAA,+CACL4H,MADK;AAERxC,UAAAA,eAAe,EAAE,SAFT;AAGRyE,UAAAA,UAAU,EAAE;AAHJ;AAAA;AArCR,KAFZ;AA6CI,IAAA,KAAK,EAAEhP,QA7CX;AA8CI,IAAA,OAAO,EAAE,IA9Cb;AA+CI,IAAA,UAAU,EAAE;AAAA,aAAMK,aAAa,CAAC,IAAD,CAAnB;AAAA,KA/ChB;AAgDI,IAAA,WAAW,EAAE;AAAA,aAAMA,aAAa,CAAC,KAAD,CAAnB;AAAA,KAhDjB;AAiDI,IAAA,IAAI,EAAC,YAjDT;AAkDI,IAAA,SAAS,EAAC,oBAlDd;AAmDI,IAAA,eAAe,EAAC,QAnDpB;AAoDI,IAAA,QAAQ,EAAEsJ,QApDd;AAqDI,IAAA,OAAO,EAAEzJ,WArDb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,GA2Dc,IAnHtB,CADJ,EAwHQ3C,SAAS,KAAK,EAAd,GACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE6F,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,MAAd,GAAuB;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE,MAAT;AAAiB+J,MAAAA,UAAU,EAAE,EAA7B;AAAiCrC,MAAAA,aAAa,EAAE,EAAhD;AAAoDP,MAAAA,eAAe,EAAE;AAArE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,EAAZ;AAAgBvO,MAAAA,KAAK,EAAE;AAAvB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,qBAAqB,CAAC,oBAAD,CAD1B,CADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEqP,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTR,MAAAA,eAAe,EAAE,OADR;AAET/L,MAAAA,MAAM,EAAE,EAFC;AAGT6O,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,MAAD;AACI,IAAA,QAAQ,EAAE/M,MADd;AAEI,IAAA,KAAK,EAAE1B,UAFX;AAGI,IAAA,aAAa,EAAE,yBAAM;AACjBC,MAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH,KALL;AAMI,IAAA,KAAK,EAAE;AAAEJ,MAAAA,MAAM,EAAE;AAAV,KANX;AAOI,IAAA,UAAU,EAAE;AACR8O,MAAAA,KAAK,EAAE,SADC;AAERC,MAAAA,IAAI,EAAE;AAFE,KAPhB;AAWI,IAAA,gBAAgB,EAAC,OAXrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,EAqBQ3O,UAAU,GACN,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTwE,MAAAA,KAAK,EAAE,MADE;AAETiI,MAAAA,OAAO,EAAE,MAFA;AAGTN,MAAAA,aAAa,EAAE,KAHN;AAITR,MAAAA,eAAe,EAAE;AAJR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwC,MAAM,CAACvD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANH,EASI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAExK,UADX;AAEI,IAAA,QAAQ,EAAE,kBAACqQ,KAAD,EAAgB;AACtB,UAAM3G,IAAI,GAAG,IAAIzM,IAAJ,CAASoT,KAAT,CAAb;AAEA,UAAI3G,IAAI,GAAG,IAAIzM,IAAJ,EAAX,EAAuB;AACnBgD,MAAAA,aAAa,CAACyJ,IAAD,CAAb;AACH,KAPT;AAQQ,IAAA,WAAW,EAAE0B,aARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADM,GAsBJ,IA3Cd,CANJ,EAuDI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEhH,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,MAAd,GAAuB;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE2H,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQnM,UAAU,GACN,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTwE,MAAAA,KAAK,EAAE,MADE;AAETiI,MAAAA,OAAO,EAAE,MAFA;AAGTN,MAAAA,aAAa,EAAE,KAHN;AAITR,MAAAA,eAAe,EAAE,OAJR;AAKT2C,MAAAA,UAAU,EAAE;AALH,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOK,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACvD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA9N,qBAAqB,CAAC,UAAD,CADrB,CAPL,EAUA,oBAAC,QAAD;AACI,IAAA,KAAK,EAAEoD,QADX;AAEI,IAAA,QAAQ,EAAE,kBAACuQ,KAAD,EAAgB;AACtB,UAAM3G,IAAI,GAAG,IAAIzM,IAAJ,CAASoT,KAAT,CAAb;AAEA,UAAI3G,IAAI,GAAG,IAAIzM,IAAJ,EAAX,EAAuB;AAEvB8C,MAAAA,WAAW,CAAC2J,IAAD,CAAX;AACH,KARL;AASI,IAAA,WAAW,EAAE0B,aATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,CADM,GAyBJ,IA3Bd,CADJ,CAvDJ,CADJ,GA2Fc,IAnNtB,EAsNQxL,UAAU,GACN,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEwE,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,MAAd,GAAuB;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE,MAAT;AAAiB+J,MAAAA,UAAU,EAAE,EAA7B;AAAiCrC,MAAAA,aAAa,EAAE,EAAhD;AAAoDP,MAAAA,eAAe,EAAE;AAArE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,EAAZ;AAAgBvO,MAAAA,KAAK,EAAE;AAAvB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEqO,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTR,MAAAA,eAAe,EAAE,OADR;AAET/L,MAAAA,MAAM,EAAE,EAFC;AAGT6O,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEjO,MADX;AAEI,IAAA,aAAa,EAAE;AAAA,aAAMC,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA,KAFnB;AAGI,IAAA,KAAK,EAAE;AAAEZ,MAAAA,MAAM,EAAE;AAAV,KAHX;AAII,IAAA,UAAU,EAAE;AACR8O,MAAAA,KAAK,EAAE,SADC;AAERC,MAAAA,IAAI,EAAE;AAFE,KAJhB;AAQI,IAAA,gBAAgB,EAAC,OARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,EAkBQnO,MAAM,GACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTgE,MAAAA,KAAK,EAAE,MADE;AAETiI,MAAAA,OAAO,EAAE,MAFA;AAGTN,MAAAA,aAAa,EAAE,KAHN;AAITR,MAAAA,eAAe,EAAE;AAJR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwC,MAAM,CAACvD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9N,qBAAqB,CAAC,mBAAD,CAD1B,CANJ,EASI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEwD,WADX;AAEI,IAAA,KAAK,EAAE6N,MAAM,CAACuC,MAFlB;AAGI,IAAA,WAAW,EAAE,OAHjB;AAII,IAAA,YAAY,EAAE,sBAAArC,GAAG;AAAA,aAAI9N,cAAc,CAAC8N,GAAD,CAAlB;AAAA,KAJrB;AAKI,IAAA,oBAAoB,EAAE,SAL1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADE,GAkBA,IApCd,CANJ,CADM,GA8CI,IApQtB,CADH,GAwQK,IAzQV,EA0QI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE5B,MAAAA,OAAO,EAAE,MAAX;AAAmBN,MAAAA,aAAa,EAAE3H,KAAK,GAAG,GAAR,GAAc,QAAd,GAAyB;AAA3D,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,MAAd,GAAuB,QAAhC;AAA0C0J,MAAAA,gBAAgB,EAAE,CAA5D;AAA+DR,MAAAA,WAAW,EAAE;AAA5E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAElJ,MAAAA,KAAK,EAAE,MAAT;AAAiBmH,MAAAA,eAAe,EAAE;AAAlC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEnH,MAAAA,KAAK,EAAE,MAAT;AAAiB+J,MAAAA,UAAU,EAAE,EAA7B;AAAiCrC,MAAAA,aAAa,EAAE,EAAhD;AAAoDP,MAAAA,eAAe,EAAE;AAArE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,EAAZ;AAAgBvO,MAAAA,KAAK,EAAE;AAAvB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,qBAAqB,CAAC,UAAD,CAD1B,CADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE0H,MAAAA,KAAK,EAAE,MAAT;AAAiBiI,MAAAA,OAAO,EAAE,MAA1B;AAAkCN,MAAAA,aAAa,EAAE,KAAjD;AAAwDR,MAAAA,eAAe,EAAE;AAAzE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEnH,MAAAA,KAAK,EAAE,KAAT;AAAgBmH,MAAAA,eAAe,EAAE;AAAjC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQpN,iBAAiB,GACb,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4P,MAAM,CAACsB,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEvR,cADX;AAEI,IAAA,KAAK,EAAEiQ,MAAM,CAACwC,cAFlB;AAGI,IAAA,WAAW,EAAE,gBAHjB;AAII,IAAA,YAAY,EAAE,sBAAAtC,GAAG,EAAI;AACjBlQ,MAAAA,iBAAiB,CAACkQ,GAAD,CAAjB;AACH,KANL;AAOI,IAAA,oBAAoB,EAAE,SAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADa,GAYb,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEF,MAAM,CAACsB,QAA1B;AAAoC,IAAA,UAAU,EAAE,IAAhD;AAAsD,IAAA,8BAA8B,EAAE,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAEvR,cAAc,KAAK,EAAnB,GAAwBiQ,MAAM,CAACwC,cAA/B,GAAgDxC,MAAM,CAACyC,GADlE;AAEI,IAAA,OAAO,EAAE,mBAAM;AACXzS,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACH,KAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAK,EAAE,SAAT;AAAoByO,MAAAA,UAAU,EAAE,EAAhC;AAAoCF,MAAAA,QAAQ,EAAE;AAA9C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvP,qBAAqB,CAAC,MAAD,CAD1B,CALJ,CADJ,EAWQsB,gBAAgB,CAAC8G,GAAjB,CAAqB,UAAC2L,QAAD,EAAsB;AACvC,WAAO,oBAAC,gBAAD;AACH,MAAA,GAAG,EAAEtR,IAAI,CAACC,MAAL,EADF;AAEH,MAAA,KAAK,EAAEtB,cAAc,KAAK2S,QAAnB,GAA8B1C,MAAM,CAACwC,cAArC,GAAsDxC,MAAM,CAACyC,GAFjE;AAGH,MAAA,OAAO,EAAE,mBAAM;AACXzS,QAAAA,iBAAiB,CAAC0S,QAAD,CAAjB;AACH,OALE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMH,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE/S,QAAAA,KAAK,EAAE,SAAT;AAAoByO,QAAAA,UAAU,EAAE,EAAhC;AAAoCF,QAAAA,QAAQ,EAAE;AAA9C,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKwE,QADL,CANG,CAAP;AAUH,GAXD,CAXR,CAdZ,CADJ,EA0CI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAErM,MAAAA,KAAK,EAAE,KAAT;AAAgBmH,MAAAA,eAAe,EAAE;AAAjC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAE,mBAAM;AACX,UAAIpN,iBAAJ,EAAuB;AACnBJ,QAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAK,QAAAA,oBAAoB,CAAC,KAAD,CAApB;AACH,OAHD,MAGO;AACHL,QAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAK,QAAAA,oBAAoB,CAAC,IAAD,CAApB;AACH;AACJ,KATL;AAUI,IAAA,KAAK,EAAE;AAAEmN,MAAAA,eAAe,EAAE;AAAnB,KAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEM,MAAAA,SAAS,EAAE,QAAb;AAAuBM,MAAAA,UAAU,EAAE,EAAnC;AAAuC/H,MAAAA,KAAK,EAAE;AAA9C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEjG,iBAAiB,GAAG,OAAH,GAAa,KAA9C;AAAqD,IAAA,IAAI,EAAE,EAA3D;AAA+D,IAAA,KAAK,EAAE,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAXJ,CADJ,CA1CJ,CANJ,CADJ,CADJ,EAsEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEiG,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,MAAd,GAAuB,QAAhC;AAA0C0J,MAAAA,gBAAgB,EAAE,CAA5D;AAA+DR,MAAAA,WAAW,EAAE;AAA5E,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAElJ,MAAAA,KAAK,EAAE,MAAT;AAAiB+J,MAAAA,UAAU,EAAE,EAA7B;AAAiCrC,MAAAA,aAAa,EAAE,EAAhD;AAAoDP,MAAAA,eAAe,EAAE;AAArE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,EAAZ;AAAgBvO,MAAAA,KAAK,EAAE;AAAvB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhB,qBAAqB,CAAC,UAAD,CAD1B,CADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE0H,MAAAA,KAAK,EAAE,MAAT;AAAiBiI,MAAAA,OAAO,EAAE,MAA1B;AAAkCN,MAAAA,aAAa,EAAE,KAAjD;AAAwDR,MAAAA,eAAe,EAAE;AAAzE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEnH,MAAAA,KAAK,EAAE,MAAT;AAAiBmH,MAAAA,eAAe,EAAE;AAAlC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,KAAK,kCAAOwC,MAAM,CAACsB,QAAd;AAAwB7P,MAAAA,MAAM,EAAE;AAAhC,MAAjB;AAAuD,IAAA,UAAU,EAAE,IAAnE;AAAyE,IAAA,8BAA8B,EAAE,KAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQV,YAAY,CAACgG,GAAb,CAAiB,UAAC4L,CAAD,EAAYC,CAAZ,EAA0B;AACvC,WAAO,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEjT,KAAK,KAAKiT,CAAV,GAAc5C,MAAM,CAAC6C,qBAArB,GAA6C7C,MAAM,CAAC8C,cAAjE;AAAiF,MAAA,GAAG,EAAE1R,IAAI,CAACC,MAAL,EAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,oBAAC,gBAAD;AACI,MAAA,KAAK,EAAE;AACHgF,QAAAA,KAAK,EAAE,EADJ;AAEH5E,QAAAA,MAAM,EAAE,EAFL;AAGHgO,QAAAA,YAAY,EAAE,CAHX;AAIHjC,QAAAA,eAAe,EAAEzM,YAAY,CAAC6R,CAAD;AAJ1B,OADX;AAOI,MAAA,OAAO,EAAE,mBAAM;AACXhT,QAAAA,QAAQ,CAACgT,CAAD,CAAR;AACH,OATL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAAP;AAaH,GAdD,CAFR,CADJ,CADJ,CANJ,CAtEJ,CA1QJ,EA+WI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEvM,MAAAA,KAAK,EAAE,MAAT;AAAiB+J,MAAAA,UAAU,EAAE,EAA7B;AAAiCpC,MAAAA,aAAa,EAAE3H,KAAK,GAAG,GAAR,GAAc,QAAd,GAAyB;AAAzE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,MAAd,GAAuB;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE,MAAT;AAAiB+J,MAAAA,UAAU,EAAE,EAA7B;AAAiCrC,MAAAA,aAAa,EAAE,EAAhD;AAAoDP,MAAAA,eAAe,EAAE;AAArE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,EAAZ;AAAgBvO,MAAAA,KAAK,EAAE;AAAvB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACT6N,MAAAA,eAAe,EAAE,OADR;AAETnH,MAAAA,KAAK,EAAE,MAFE;AAGT5E,MAAAA,MAAM,EAAE,EAHC;AAIT6O,MAAAA,WAAW,EAAE;AAJJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAE7Q,MADX;AAEI,IAAA,aAAa,EAAE,yBAAM;AACjB,UAAIA,MAAJ,EAAY;AAERK,QAAAA,YAAY,CAAC,GAAD,CAAZ;AACH,OAHD,MAGO;AAEHA,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AACDgB,MAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACApB,MAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,KAZL;AAaI,IAAA,KAAK,EAAE;AAAEgC,MAAAA,MAAM,EAAE;AAAV,KAbX;AAcI,IAAA,UAAU,EAAE;AACR8O,MAAAA,KAAK,EAAE,SADC;AAERC,MAAAA,IAAI,EAAE;AAFE,KAdhB;AAkBI,IAAA,gBAAgB,EAAC,OAlBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CANJ,CADJ,EAoCQ/Q,MAAM,GACF,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE4G,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,MAAd,GAAuB;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE,MAAT;AAAiB+J,MAAAA,UAAU,EAAE,EAA7B;AAAiCrC,MAAAA,aAAa,EAAE,EAAhD;AAAoDP,MAAAA,eAAe,EAAE;AAArE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,EAAZ;AAAgBvO,MAAAA,KAAK,EAAE;AAAvB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEqO,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTR,MAAAA,eAAe,EAAE,OADR;AAET/L,MAAAA,MAAM,EAAE,EAFC;AAGT6O,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAE,CAACjR,OADZ;AAEI,IAAA,aAAa,EAAE;AAAA,aAAMC,UAAU,CAAC,CAACD,OAAF,CAAhB;AAAA,KAFnB;AAGI,IAAA,KAAK,EAAE;AAAEoC,MAAAA,MAAM,EAAE;AAAV,KAHX;AAII,IAAA,UAAU,EAAE;AACR8O,MAAAA,KAAK,EAAE,SADC;AAERC,MAAAA,IAAI,EAAE;AAFE,KAJhB;AAQI,IAAA,gBAAgB,EAAC,OARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,EAkBQ,CAACnR,OAAD,GACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTiP,MAAAA,OAAO,EAAE,MADA;AAETN,MAAAA,aAAa,EAAE,KAFN;AAGTR,MAAAA,eAAe,EAAE;AAHR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwC,MAAM,CAACvD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9N,qBAAqB,CAAC,aAAD,CAD1B,CALJ,EAQI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEqR,MAAM,CAACuC,MADlB;AAEI,IAAA,SAAS,EAAE;AACPrE,MAAAA,QAAQ,EAAE;AADH,KAFf;AAKI,IAAA,aAAa,EAAErO,SALnB;AAMI,IAAA,aAAa,EAAE,uBAACkT,SAAD;AAAA,aACXjT,YAAY,CAACiT,SAAD,CADD;AAAA,KANnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUQvV,qBAAqB,CAACuJ,GAAtB,CAA0B,UAAC0E,IAAD,EAAYuH,KAAZ,EAA8B;AACpD,WAAO,oBAAC,MAAD,CAAQ,IAAR;AACH,MAAA,KAAK,EAAEnT,SAAS,KAAK4L,IAAI,CAACR,KAAnB,GAA2B,SAA3B,GAAuC,SAD3C;AAEH,MAAA,KAAK,EAAEQ,IAAI,CAACR,KAAL,KAAe,GAAf,IAAsBzK,SAAS,KAAK,EAApC,GAAyC,MAAzC,GAAkDiL,IAAI,CAACwH,KAF3D;AAGH,MAAA,KAAK,EAAExH,IAAI,CAACR,KAHT;AAIH,MAAA,GAAG,EAAE+H,KAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAMH,GAPD,CAVR,CARJ,CADJ,GA8BI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACT3M,MAAAA,KAAK,EAAE,MADE;AAETiI,MAAAA,OAAO,EAAE,MAFA;AAGTN,MAAAA,aAAa,EAAE,KAHN;AAITR,MAAAA,eAAe,EAAE;AAJR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwC,MAAM,CAACvD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9N,qBAAqB,CAAC,UAAD,CAD1B,CANJ,EASI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAEgC,SADX;AAEI,IAAA,QAAQ,EAAE,kBAAC2R,KAAD,EAAgB;AACtB,UAAM3G,IAAI,GAAG,IAAIzM,IAAJ,CAASoT,KAAT,CAAb;AACA,UAAI3G,IAAI,GAAG,IAAIzM,IAAJ,EAAX,EAAuB;AAEvB0B,MAAAA,YAAY,CAAC+K,IAAD,CAAZ;AACH,KAPL;AAQI,IAAA,WAAW,EAAE0B,aARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAhDZ,CANJ,CADE,GA6EQ,IAjHtB,EAoHQ5N,MAAM,IAAI,CAACJ,OAAX,GACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEgH,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,MAAd,GAAuB;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE,MAAT;AAAiB+J,MAAAA,UAAU,EAAE,EAA7B;AAAiCrC,MAAAA,aAAa,EAAE,EAAhD;AAAoDP,MAAAA,eAAe,EAAE;AAArE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,EAAZ;AAAgBvO,MAAAA,KAAK,EAAE;AAAvB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEqO,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTR,MAAAA,eAAe,EAAE,OADR;AAET/L,MAAAA,MAAM,EAAE,EAFC;AAGT6O,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEzP,mBADX;AAEI,IAAA,aAAa,EAAE;AAAA,aAAMC,sBAAsB,CAAC,CAACD,mBAAF,CAA5B;AAAA,KAFnB;AAGI,IAAA,KAAK,EAAE;AAAEY,MAAAA,MAAM,EAAE;AAAV,KAHX;AAII,IAAA,UAAU,EAAE;AACR8O,MAAAA,KAAK,EAAE,SADC;AAERC,MAAAA,IAAI,EAAE;AAFE,KAJhB;AAQI,IAAA,gBAAgB,EAAC,OARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,EAkBQ3P,mBAAmB,GAAG,IAAH,GACf,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTwF,MAAAA,KAAK,EAAE,MADE;AAETiI,MAAAA,OAAO,EAAE,MAFA;AAGTN,MAAAA,aAAa,EAAE,KAHN;AAITR,MAAAA,eAAe,EAAE;AAJR,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwC,MAAM,CAACvD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9N,qBAAqB,CAAC,YAAD,CAD1B,CANJ,EASI,oBAAC,QAAD;AACI,IAAA,KAAK,EAAEgC,SADX;AAEI,IAAA,QAAQ,EAAE,kBAAC2R,KAAD,EAAgB;AACtB,UAAM3G,IAAI,GAAG,IAAIzM,IAAJ,CAASoT,KAAT,CAAb;AACA,UAAI3G,IAAI,GAAG,IAAIzM,IAAJ,EAAX,EAAuB;AACvB0B,MAAAA,YAAY,CAAC+K,IAAD,CAAZ;AACH,KANL;AAOI,IAAA,WAAW,EAAE0B,aAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CAnBZ,CANJ,CADJ,GA+Cc,IAnKtB,CA/WJ,EAshBK9J,MAAM,GAAI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE8C,MAAAA,KAAK,EAAEA,KAAK,GAAG,GAAR,GAAc,MAAd,GAAuB;AAAhC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,KAAK,EAAE,MAAT;AAAiB+J,MAAAA,UAAU,EAAE,EAA7B;AAAiCrC,MAAAA,aAAa,EAAE,EAAhD;AAAoDP,MAAAA,eAAe,EAAE;AAArE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEU,MAAAA,QAAQ,EAAE,EAAZ;AAAgBvO,MAAAA,KAAK,EAAE;AAAvB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,CADL,EAMK,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEqO,MAAAA,aAAa,EAAE;AAAjB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTR,MAAAA,eAAe,EAAE,OADR;AAET/L,MAAAA,MAAM,EAAE,EAFC;AAGT6O,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAE9L,WADX;AAEI,IAAA,aAAa,EAAE;AAAA,aAAMC,cAAc,CAAC,CAACD,WAAF,CAApB;AAAA,KAFnB;AAGI,IAAA,KAAK,EAAE;AAAE/C,MAAAA,MAAM,EAAE;AAAV,KAHX;AAII,IAAA,UAAU,EAAE;AACR8O,MAAAA,KAAK,EAAE,SADC;AAERC,MAAAA,IAAI,EAAE;AAFE,KAJhB;AAQI,IAAA,gBAAgB,EAAC,OARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CANL,CAAJ,GAwBe,IA9iB1B,CAhKJ,EAgtBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACkD,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACHjF,MAAAA,IAAI,EAAE,CADH;AAEHT,MAAAA,eAAe,EAAE,OAFd;AAGHqC,MAAAA,cAAc,EAAE,QAHb;AAIHvB,MAAAA,OAAO,EAAE,MAJN;AAKHN,MAAAA,aAAa,EAAE,KALZ;AAMHvM,MAAAA,MAAM,EAAE,EANL;AAOH2O,MAAAA,UAAU,EAAE;AAPT,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,mBACD7M,MADC;AAAA;AAAA;AAAA;;AAEDsD,cAAAA,aAAa;AAFZ;AAAA;;AAAA;AAAA;AAAA,+CAIKyB,YAAY,EAJjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADb;AAQI,IAAA,KAAK,EAAE;AACHmH,MAAAA,YAAY,EAAE,EADX;AAEHjC,MAAAA,eAAe,EAAE;AAFd,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaQhN,SAAS,KAAK,EAAd,GACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTsN,MAAAA,SAAS,EAAE,QADF;AAETM,MAAAA,UAAU,EAAE,EAFH;AAGTzO,MAAAA,KAAK,EAAE,OAHE;AAITuO,MAAAA,QAAQ,EAAE,EAJD;AAKTV,MAAAA,eAAe,EAAE,SALR;AAMTiC,MAAAA,YAAY,EAAE,EANL;AAOT9B,MAAAA,iBAAiB,EAAE,EAPV;AAQTsE,MAAAA,UAAU,EAAE,OARH;AASTrE,MAAAA,QAAQ,EAAE,QATD;AAUTnM,MAAAA,MAAM,EAAE,EAVC;AAWT0M,MAAAA,aAAa,EAAE;AAXN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaK7J,YAAY,GAAG3F,qBAAqB,CAAC,SAAD,CAAxB,GAAsCA,qBAAqB,CAAC,MAAD,CAb5E,CADJ,GAgBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTmP,MAAAA,SAAS,EAAE,QADF;AAETM,MAAAA,UAAU,EAAE,EAFH;AAGTzO,MAAAA,KAAK,EAAE,OAHE;AAITuO,MAAAA,QAAQ,EAAE,EAJD;AAKTV,MAAAA,eAAe,EAAE,SALR;AAMTiC,MAAAA,YAAY,EAAE,EANL;AAOT9B,MAAAA,iBAAiB,EAAE,EAPV;AAQTsE,MAAAA,UAAU,EAAE,OARH;AASTrE,MAAAA,QAAQ,EAAE,QATD;AAUTnM,MAAAA,MAAM,EAAE,EAVC;AAWT0M,MAAAA,aAAa,EAAE;AAXN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaK7J,YAAY,GAAG3F,qBAAqB,CAAC,SAAD,CAAxB,GAAsCA,qBAAqB,CAAC,OAAD,CAb5E,CA7BZ,CAVJ,CADJ,CAhtBJ,CA5LJ,CATJ,CADJ;AAs9BH,CAhiDD;;AAkiDA,eAAeI,MAAf;AAEA,IAAMiR,MAAW,GAAGmD,UAAU,CAAClH,MAAX,CAAkB;AAClCmH,EAAAA,UAAU,EAAE;AACR/M,IAAAA,KAAK,EAAE,GADC;AAER6H,IAAAA,QAAQ,EAAE,EAFF;AAGRzM,IAAAA,MAAM,EAAE,EAHA;AAIR9B,IAAAA,KAAK,EAAE,SAJC;AAKR8P,IAAAA,YAAY,EAAE,EALN;AAMRU,IAAAA,UAAU,EAAE;AANJ,GADsB;AASlCkD,EAAAA,eAAe,EAAE;AACbC,IAAAA,QAAQ,EAAE,UADG;AAEbC,IAAAA,GAAG,EAAE,CAFQ;AAGbC,IAAAA,IAAI,EAAE,CAHO;AAIbC,IAAAA,MAAM,EAAE,CAJK;AAKbC,IAAAA,KAAK,EAAE;AALM,GATiB;AAgBlCC,EAAAA,SAAS,EAAE;AACPtN,IAAAA,KAAK,EAAE,MADA;AAEPmH,IAAAA,eAAe,EAAE,SAFV;AAGPiC,IAAAA,YAAY,EAAE,EAHP;AAIPvB,IAAAA,QAAQ,EAAE,EAJH;AAKPwB,IAAAA,OAAO,EAAE,EALF;AAMPU,IAAAA,UAAU,EAAE,EANL;AAOPrC,IAAAA,aAAa,EAAE,EAPR;AAQP6F,IAAAA,YAAY,EAAE;AARP,GAhBuB;AA0BlCV,EAAAA,MAAM,EAAE;AACJ7M,IAAAA,KAAK,EAAE,MADH;AAEJmH,IAAAA,eAAe,EAAE,OAFb;AAGJc,IAAAA,OAAO,EAAE,MAHL;AAIJN,IAAAA,aAAa,EAAE,KAJX;AAKJK,IAAAA,SAAS,EAAE,EALP;AAMJD,IAAAA,UAAU,EAAE;AANR,GA1B0B;AAkClC0E,EAAAA,cAAc,EAAE;AACZ1E,IAAAA,UAAU,EAAE,EADA;AAEZyB,IAAAA,cAAc,EAAE,QAFJ;AAGZvB,IAAAA,OAAO,EAAE,MAHG;AAIZN,IAAAA,aAAa,EAAE,QAJH;AAKZmC,IAAAA,UAAU,EAAE,CALA;AAMZxC,IAAAA,iBAAiB,EAAE,CANP;AAOZH,IAAAA,eAAe,EAAE;AAPL,GAlCkB;AA2ClCqF,EAAAA,qBAAqB,EAAE;AACnBzE,IAAAA,UAAU,EAAE,EADO;AAEnByB,IAAAA,cAAc,EAAE,QAFG;AAGnBvB,IAAAA,OAAO,EAAE,MAHU;AAInBN,IAAAA,aAAa,EAAE,QAJI;AAKnBmC,IAAAA,UAAU,EAAE,CALO;AAMnBxC,IAAAA,iBAAiB,EAAE,CANA;AAOnBH,IAAAA,eAAe,EAAE,OAPE;AAQnBiC,IAAAA,YAAY,EAAE,EARK;AASnBD,IAAAA,WAAW,EAAE,CATM;AAUnBD,IAAAA,WAAW,EAAE;AAVM,GA3CW;AAuDlCU,EAAAA,KAAK,EAAE;AACH5J,IAAAA,KAAK,EAAE,MADJ;AAEHwN,IAAAA,iBAAiB,EAAE,SAFhB;AAGHC,IAAAA,iBAAiB,EAAE,CAHhB;AAIH5F,IAAAA,QAAQ,EAAE,EAJP;AAKHwB,IAAAA,OAAO,EAAE,EALN;AAMHU,IAAAA,UAAU,EAAE,EANT;AAOHrC,IAAAA,aAAa,EAAE,EAPZ;AAQHM,IAAAA,SAAS,EAAE,CARR;AASHuF,IAAAA,YAAY,EAAE;AATX,GAvD2B;AAkElCjI,EAAAA,IAAI,EAAE;AACFtF,IAAAA,KAAK,EAAE,MADL;AAEFiI,IAAAA,OAAO,EAAE,MAFP;AAGFN,IAAAA,aAAa,EAAE,KAHb;AAIFD,IAAAA,aAAa,EAAE,CAJb;AAKFP,IAAAA,eAAe,EAAE;AALf,GAlE4B;AAyElC8D,EAAAA,QAAQ,EAAE;AACNjL,IAAAA,KAAK,EAAE,MADD;AAEN2H,IAAAA,aAAa,EAAE,KAFT;AAGNR,IAAAA,eAAe,EAAE,OAHX;AAINY,IAAAA,UAAU,EAAE;AAJN,GAzEwB;AA+ElCmE,EAAAA,MAAM,EAAE;AACJjE,IAAAA,OAAO,EAAE,MADL;AAEJuB,IAAAA,cAAc,EAAE,QAFZ;AAGJrC,IAAAA,eAAe,EAAE,OAHb;AAIJI,IAAAA,QAAQ,EAAE,QAJN;AAKJM,IAAAA,QAAQ,EAAE,EALN;AAMJJ,IAAAA,SAAS,EAAE,QANP;AAOJ0B,IAAAA,WAAW,EAAE,CAPT;AAQJnJ,IAAAA,KAAK,EAAE,GARH;AASJ5E,IAAAA,MAAM,EAAE,EATJ;AAUJ4O,IAAAA,SAAS,EAAE,QAVP;AAWJhC,IAAAA,SAAS,EAAE,CAAC,EAXR;AAYJoB,IAAAA,YAAY,EAAE;AAZV,GA/E0B;AA6FlChD,EAAAA,IAAI,EAAE;AACFyB,IAAAA,QAAQ,EAAE,EADR;AAEFvO,IAAAA,KAAK,EAAE,SAFL;AAGFmO,IAAAA,SAAS,EAAE,MAHT;AAIFH,IAAAA,iBAAiB,EAAE;AAJjB,GA7F4B;AAmGlC8E,EAAAA,GAAG,EAAE;AACDvE,IAAAA,QAAQ,EAAE,EADT;AAEDvO,IAAAA,KAAK,EAAE,SAFN;AAGD8B,IAAAA,MAAM,EAAE,EAHP;AAIDkM,IAAAA,iBAAiB,EAAE,EAJlB;AAKDH,IAAAA,eAAe,EAAE;AALhB,GAnG6B;AA0GlCgE,EAAAA,QAAQ,EAAE;AACNtD,IAAAA,QAAQ,EAAE,EADJ;AAENvO,IAAAA,KAAK,EAAE,SAFD;AAGN8B,IAAAA,MAAM,EAAE,EAHF;AAINkM,IAAAA,iBAAiB,EAAE,EAJb;AAKNH,IAAAA,eAAe,EAAE,OALX;AAMNoG,IAAAA,YAAY,EAAE;AANR,GA1GwB;AAkHlCrC,EAAAA,UAAU,EAAE;AACRrD,IAAAA,QAAQ,EAAE,EADF;AAERvO,IAAAA,KAAK,EAAE,MAFC;AAGR8B,IAAAA,MAAM,EAAE,EAHA;AAIRkM,IAAAA,iBAAiB,EAAE,EAJX;AAKR8B,IAAAA,YAAY,EAAE,EALN;AAMRjC,IAAAA,eAAe,EAAE,SANT;AAORoG,IAAAA,YAAY,EAAE;AAPN,GAlHsB;AA2HlCpB,EAAAA,cAAc,EAAE;AACZtE,IAAAA,QAAQ,EAAE,EADE;AAEZvO,IAAAA,KAAK,EAAE,SAFK;AAGZ8B,IAAAA,MAAM,EAAE,EAHI;AAIZkM,IAAAA,iBAAiB,EAAE,EAJP;AAKZH,IAAAA,eAAe,EAAE,OALL;AAMZiC,IAAAA,YAAY,EAAE,EANF;AAOZD,IAAAA,WAAW,EAAE,CAPD;AAQZD,IAAAA,WAAW,EAAE;AARD,GA3HkB;AAqIlCwE,EAAAA,MAAM,EAAE;AACJvG,IAAAA,eAAe,EAAE;AADb,GArI0B;AAwIlCwG,EAAAA,MAAM,EAAE;AACJxG,IAAAA,eAAe,EAAE;AADb,GAxI0B;AA2IlCyG,EAAAA,MAAM,EAAE;AACJzG,IAAAA,eAAe,EAAE;AADb,GA3I0B;AA8IlC0G,EAAAA,MAAM,EAAE;AACJ1G,IAAAA,eAAe,EAAE;AADb,GA9I0B;AAiJlC2G,EAAAA,MAAM,EAAE;AACJ3G,IAAAA,eAAe,EAAE;AADb,GAjJ0B;AAoJlC4G,EAAAA,OAAO,EAAE;AACL3E,IAAAA,YAAY,EAAE,EADT;AAELD,IAAAA,WAAW,EAAE,CAFR;AAGLD,IAAAA,WAAW,EAAE;AAHR;AApJyB,CAAlB,CAApB","sourcesContent":["import React, { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { Keyboard, StyleSheet, Switch, TextInput, ScrollView, Animated, Dimensions } from 'react-native';\r\nimport { Text, View, TouchableOpacity } from '../components/Themed';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { timedFrequencyOptions } from '../helpers/FrequencyOptions';\r\nimport { fetchAPI } from '../graphql/FetchAPI';\r\nimport { createCue, createQuiz, getChannelCategories, getChannels, getSharedWith } from '../graphql/QueriesAndMutations';\r\nimport Datetime from 'react-datetime';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport {\r\n    actions,\r\n    RichEditor,\r\n    RichToolbar,\r\n} from \"react-native-pell-rich-editor\";\r\nimport FileUpload from './UploadFiles';\r\nimport Alert from '../components/Alert'\r\nimport Select from 'react-select';\r\nimport QuizCreate from './QuizCreate';\r\nimport DurationPicker from 'react-duration-picker'\r\nimport TeXToSVG from \"tex-to-svg\";\r\nimport EquationEditor from \"equation-editor-react\";\r\n// import WebView from 'react-native-webview';\r\nimport { PreferredLanguageText } from \"../helpers/LanguageContext\";\r\nimport moment from 'moment';\r\nimport ReactPlayer from 'react-player'\r\nimport Webview from './Webview'\r\n\r\n\r\nconst Create: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const current = new Date()\r\n    const [cue, setCue] = useState('')\r\n    const [shuffle, setShuffle] = useState(false)\r\n    const [starred, setStarred] = useState(false)\r\n    const [notify, setNotify] = useState(false)\r\n    const [color, setColor] = useState(0)\r\n    const [frequency, setFrequency] = useState('0')\r\n    const [customCategory, setCustomCategory] = useState('')\r\n    const [localCustomCategories] = useState(props.customCategories)\r\n    const [customCategories, setCustomCategories] = useState(props.customCategories)\r\n    const [addCustomCategory, setAddCustomCategory] = useState(false)\r\n    const [channels, setChannels] = useState<any[]>([])\r\n    const [channelId, setChannelId] = useState<any>('')\r\n    const [endPlayAt, setEndPlayAt] = useState(new Date(current.getTime() + 1000 * 60 * 60))\r\n    const [playChannelCueIndef, setPlayChannelCueIndef] = useState(true)\r\n    const colorChoices: any[] = ['#d91d56', '#ED7D22', '#F8D41F', '#B8D41F', '#53BE6D'].reverse()\r\n    const [modalAnimation] = useState(new Animated.Value(0))\r\n    const [reloadEditorKey, setReloadEditorKey] = useState(Math.random())\r\n    let RichText: any = useRef()\r\n    const [height, setHeight] = useState(100)\r\n    const [init, setInit] = useState(false)\r\n    const [submission, setSubmission] = useState(false)\r\n    const [deadline, setDeadline] = useState(new Date(current.getTime() + 1000 * 60 * 60 * 24))\r\n    const [initiateAt, setInitiateAt] = useState(new Date(current.getTime()))\r\n    const [gradeWeight, setGradeWeight] = useState<any>(0)\r\n    const [graded, setGraded] = useState(false)\r\n    const [imported, setImported] = useState(false)\r\n    const [url, setUrl] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const [showImportOptions, setShowImportOptions] = useState(false)\r\n    const [selected, setSelected] = useState<any[]>([])\r\n    const [subscribers, setSubscribers] = useState<any[]>([])\r\n    const [expandMenu, setExpandMenu] = useState(false)\r\n    // options to create Quiz\r\n    const [isQuiz, setIsQuiz] = useState(false)\r\n    const [problems, setProblems] = useState<any[]>([])\r\n    const [timer, setTimer] = useState(false)\r\n    const [duration, setDuration] = useState({\r\n        hours: 1, minutes: 0, seconds: 0\r\n    })\r\n    const [equation, setEquation] = useState('y = x + 1')\r\n    const [showEquationEditor, setShowEquationEditor] = useState(false)\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [shuffleQuiz, setShuffleQuiz] = useState(false);\r\n    const [creatingQuiz,setCreatingQuiz] = useState(false)\r\n\r\n    const window = Dimensions.get(\"window\");\r\n    const screen = Dimensions.get(\"screen\");\r\n\r\n    const [dimensions, setDimensions] = useState({ window, screen });\r\n\r\n    // Alerts\r\n\r\n    const enterOneProblemAlert = PreferredLanguageText('enterOneProblem')\r\n    const invalidDurationAlert = PreferredLanguageText('invalidDuration')\r\n    const fillMissingProblemsAlert = PreferredLanguageText('fillMissingProblems')\r\n    const enterNumericPointsAlert = PreferredLanguageText('enterNumericPoints')\r\n    // const mustHaveOneOptionAlert = PreferredLanguageText('mustHaveOneOption')\r\n    const fillMissingOptionsAlert = PreferredLanguageText('fillMissingOptions')\r\n    const eachOptionOneCorrectAlert = PreferredLanguageText('eachOptionOneCorrect')\r\n    const noStudentSelectedAlert = PreferredLanguageText('noStudentSelected')\r\n    const selectWhoToShareAlert = PreferredLanguageText('selectWhoToShare')\r\n    const clearQuestionAlert = PreferredLanguageText('clearQuestion')\r\n    const cannotUndoAlert = PreferredLanguageText('cannotUndo')\r\n    const somethingWentWrongAlert = PreferredLanguageText('somethingWentWrong');\r\n    const checkConnectionAlert = PreferredLanguageText('checkConnection');\r\n    const enterContentAlert = PreferredLanguageText('enterContent');\r\n    const enterTitleAlert = PreferredLanguageText('enterTitle');\r\n\r\n    const onDimensionsChange = useCallback(({ window, screen }: any) => {\r\n        setDimensions({ window, screen })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        Dimensions.addEventListener(\"change\", onDimensionsChange);\r\n        return () => {\r\n            Dimensions.removeEventListener(\"change\", onDimensionsChange);\r\n        };\r\n    }, [])\r\n\r\n    const insertEquation = useCallback(() => {\r\n        const SVGEquation = TeXToSVG(equation, { width: 100 }); // returns svg in html format\r\n        RichText.current.insertHTML('<div><br/>' + SVGEquation + '<br/></div>');\r\n        setShowEquationEditor(false)\r\n        setEquation('')\r\n        // setReloadEditorKey(Math.random())\r\n    }, [equation, RichText, RichText.current, cue])\r\n\r\n    useEffect(() => {\r\n        if (cue[0] === '{' && cue[cue.length - 1] === '}') {\r\n            const obj = JSON.parse(cue)\r\n            setImported(true)\r\n            setUrl(obj.url)\r\n            setType(obj.type)\r\n        } else {\r\n            setImported(false)\r\n            setUrl('')\r\n            setType('')\r\n            setTitle('')\r\n        }\r\n    }, [cue])\r\n\r\n    console.log(\"Shuffle Quiz\", shuffleQuiz)\r\n\r\n    const createNewQuiz = useCallback(() => {\r\n        let error = false\r\n        if (problems.length === 0) {\r\n            Alert(enterOneProblemAlert)\r\n            return;\r\n        }\r\n        if (timer) {\r\n            if (duration.hours === 0 && duration.minutes === 0 && duration.seconds === 0) {\r\n                Alert(invalidDurationAlert)\r\n                return;\r\n            }\r\n        }\r\n        problems.map((problem) => {\r\n            if (problem.question === '' || problem.question === 'formula:') {\r\n                Alert(fillMissingProblemsAlert)\r\n                error = true;\r\n            }\r\n            if (problem.points === '' || Number.isNaN(Number(problem.points))) {\r\n                Alert(enterNumericPointsAlert)\r\n                error = true;\r\n            }\r\n            let optionFound = false\r\n            // if (problem.options.length === 0) {\r\n            //     Alert(mustHaveOneOptionAlert)\r\n            //     error = true;\r\n            // }\r\n\r\n            // If MCQ then > 2 options\r\n            if (!problem.questionType && problem.options.length < 2) {\r\n                Alert(\"Problem must have at least 2 options\")\r\n                error = true;\r\n            }\r\n\r\n            // If MCQ, check if any options repeat:\r\n            if (!problem.questionType) {\r\n                const keys: any = {};\r\n\r\n                problem.options.map((option: any) => {\r\n                    if (option.option === '' || option.option === 'formula:') {\r\n                        Alert(fillMissingOptionsAlert)\r\n                        error = true;\r\n                    }\r\n\r\n                    if (option.option in keys) {\r\n                        Alert(\"Option repeated in a question\");\r\n                        error = true\r\n                    }\r\n\r\n                    if (option.isCorrect) {\r\n                        optionFound = true\r\n                    }\r\n\r\n                    keys[option.option] = 1\r\n                })\r\n                \r\n                if (!optionFound) {\r\n                    Alert(eachOptionOneCorrectAlert)\r\n                    error = true;\r\n                }\r\n            }\r\n            \r\n        })\r\n        if (error) {\r\n            return\r\n        }\r\n\r\n        const server = fetchAPI('')\r\n        const durationMinutes = (duration.hours * 60) + (duration.minutes) + (duration.seconds / 60);\r\n        server.mutate({\r\n            mutation: createQuiz,\r\n            variables: {\r\n                quiz: {\r\n                    problems,\r\n                    duration: timer ? durationMinutes.toString() : null,\r\n                    shuffleQuiz\r\n                }\r\n            }\r\n        }).then(res => {\r\n            if (res.data && res.data.quiz.createQuiz !== 'error') {\r\n                storeDraft('quizDraft', '');\r\n                handleCreate(res.data.quiz.createQuiz)\r\n            }\r\n        })\r\n    }, [problems, cue, modalAnimation, customCategory, props.saveDataInCloud, isQuiz,\r\n        gradeWeight, deadline, initiateAt, submission, imported, selected, subscribers,\r\n        shuffle, frequency, starred, color, notify, title, type, url, timer, duration,\r\n        props.closeModal, channelId, endPlayAt, playChannelCueIndef, shuffleQuiz])\r\n\r\n    const loadChannelCategoriesAndSubscribers = useCallback(async () => {\r\n\r\n        if (channelId === '') {\r\n            setCustomCategories(localCustomCategories)\r\n            return\r\n        }\r\n        const server = fetchAPI('')\r\n        // get categories\r\n        server.query({\r\n            query: getChannelCategories,\r\n            variables: {\r\n                channelId\r\n            }\r\n        }).then(res => {\r\n            if (res.data.channel && res.data.channel.getChannelCategories) {\r\n                setCustomCategories(res.data.channel.getChannelCategories)\r\n            }\r\n        }).catch(err => {\r\n        })\r\n        // get subscribers\r\n        server.query({\r\n            query: getSharedWith,\r\n            variables: {\r\n                channelId,\r\n                cueId: null\r\n            }\r\n        })\r\n            .then((res: any) => {\r\n                if (res.data && res.data.cue.getSharedWith) {\r\n                    setSubscribers(res.data.cue.getSharedWith)\r\n                    // clear selected\r\n                    setSelected(res.data.cue.getSharedWith)\r\n                }\r\n            })\r\n            .catch((err: any) => console.log(err))\r\n\r\n    }, [channelId, localCustomCategories])\r\n\r\n    useEffect(() => {\r\n        loadChannelCategoriesAndSubscribers()\r\n    }, [channelId])\r\n\r\n    const handleHeightChange = useCallback((h: any) => {\r\n        setHeight(h)\r\n    }, [])\r\n\r\n    const cameraCallback = useCallback(async () => {\r\n        const cameraSettings = await ImagePicker.getCameraPermissionsAsync()\r\n        if (!cameraSettings.granted) {\r\n            await ImagePicker.requestCameraPermissionsAsync();\r\n            const updatedCameraSettings = await ImagePicker.getCameraPermissionsAsync()\r\n            if (!updatedCameraSettings.granted) {\r\n                return;\r\n            }\r\n        }\r\n        let result = await ImagePicker.launchCameraAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n            quality: 1,\r\n            base64: true\r\n        });\r\n        if (!result.cancelled) {\r\n            RichText.current.insertImage(result.uri, 'border-radius: 8px; max-width: 400px; width: 100%;')\r\n        }\r\n    }, [RichText, RichText.current])\r\n\r\n    const galleryCallback = useCallback(async () => {\r\n\r\n        const gallerySettings = await ImagePicker.getMediaLibraryPermissionsAsync()\r\n        if (!gallerySettings.granted) {\r\n            await ImagePicker.requestMediaLibraryPermissionsAsync()\r\n            const updatedGallerySettings = await ImagePicker.getMediaLibraryPermissionsAsync()\r\n            if (!updatedGallerySettings.granted) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n            quality: 1,\r\n            base64: true\r\n        });\r\n\r\n        if (!result.cancelled) {\r\n            RichText.current.insertImage(result.uri, 'border-radius: 8px; max-width: 400px; width: 100%;')\r\n        }\r\n    }, [RichText, RichText.current])\r\n\r\n    const loadChannels = useCallback(async () => {\r\n        const uString: any = await AsyncStorage.getItem('user')\r\n        if (uString) {\r\n            const user = JSON.parse(uString)\r\n            const server = fetchAPI('')\r\n            server.query({\r\n                query: getChannels,\r\n                variables: {\r\n                    userId: user._id\r\n                }\r\n            })\r\n                .then(res => {\r\n                    if (res.data.channel.findByUserId) {\r\n                        setChannels(res.data.channel.findByUserId)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                })\r\n        }\r\n        setInit(true)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        loadChannels()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!init) {\r\n            return\r\n        }\r\n        let saveCue = ''\r\n        // Current limitation - not able to save quizzes...\r\n        if (imported) {\r\n            const obj = {\r\n                type,\r\n                url,\r\n                title\r\n            }\r\n            saveCue = JSON.stringify(obj)\r\n        } else if (isQuiz)  {\r\n            const quiz = {\r\n                title,\r\n                problems,\r\n                timer,\r\n                duration\r\n            }\r\n\r\n            const saveQuiz = JSON.stringify(quiz)\r\n\r\n            storeDraft('quizDraft', saveQuiz)\r\n        } else {\r\n            saveCue = cue\r\n        }\r\n        if (saveCue && saveCue !== \"\") {\r\n            storeDraft('cueDraft', saveCue)\r\n        } else {\r\n            storeDraft('cueDraft', '')\r\n        }\r\n    }, [cue, init, type, imported, url, title, isQuiz, problems, timer, duration])\r\n\r\n    const storeDraft = useCallback(async (type, value) => {\r\n        await AsyncStorage.setItem(type, value)\r\n    }, [])\r\n\r\n    const handleCreate = useCallback(async (quizId?: string) => {\r\n\r\n        setIsSubmitting(true)\r\n\r\n        if (isSubmitting) return;\r\n\r\n        if (!quizId && (cue === null || cue.toString().trim() === '')) {\r\n            Alert(enterContentAlert)\r\n            setIsSubmitting(false)\r\n            return\r\n        }\r\n\r\n        if ((imported || isQuiz) && title === '') {\r\n            Alert(enterTitleAlert)\r\n            setIsSubmitting(false)\r\n            return\r\n        }\r\n\r\n        if (submission && deadline < new Date()) {\r\n            Alert(\"Submission deadline must be in future\")\r\n            setIsSubmitting(false)\r\n            return\r\n        }\r\n\r\n\r\n        let saveCue = ''\r\n        if (quizId) {\r\n            const obj: any = {\r\n                quizId,\r\n                title\r\n            }\r\n            if (timer) {\r\n                obj.initiatedAt = null\r\n            }\r\n            saveCue = JSON.stringify(obj)\r\n        } else if (imported) {\r\n            const obj = {\r\n                type,\r\n                url,\r\n                title\r\n            }\r\n            saveCue = JSON.stringify(obj)\r\n        } else {\r\n            saveCue = cue\r\n        }\r\n\r\n        // LOCAL CUE\r\n        if (channelId === '') {\r\n            let subCues: any = {}\r\n            try {\r\n                const value = await AsyncStorage.getItem('cues')\r\n                if (value) {\r\n                    subCues = JSON.parse(value)\r\n                }\r\n            } catch (e) {\r\n            }\r\n            let _id = subCues['local'].length;\r\n            while (true) {\r\n                const duplicateId = subCues['local'].findIndex((item: any) => {\r\n                    return item._id === _id\r\n                })\r\n                if (duplicateId === -1) {\r\n                    break;\r\n                } else {\r\n                    _id++;\r\n                }\r\n            }\r\n            subCues['local'].push({\r\n                _id,\r\n                cue: saveCue,\r\n                date: new Date(),\r\n                color,\r\n                shuffle,\r\n                frequency,\r\n                starred,\r\n                customCategory,\r\n                endPlayAt: notify && (shuffle || !playChannelCueIndef) ? endPlayAt.toISOString() : ''\r\n            })\r\n            const stringifiedCues = JSON.stringify(subCues)\r\n            await AsyncStorage.setItem('cues', stringifiedCues)\r\n            storeDraft('cueDraft', '')\r\n            setIsSubmitting(false)\r\n            props.closeModal()\r\n        } else {\r\n            // CHANNEL CUE\r\n            const uString = await AsyncStorage.getItem('user')\r\n            if (!uString) {\r\n                return\r\n            }\r\n\r\n            if (selected.length === 0) {\r\n                Alert(noStudentSelectedAlert, selectWhoToShareAlert)\r\n                return;\r\n            }\r\n\r\n            if ((submission || isQuiz) && deadline < initiateAt) {\r\n                Alert(\"Available from time must be set before deadline\", \"\")\r\n                return;\r\n            }\r\n\r\n            const user = JSON.parse(uString)\r\n            const server = fetchAPI('')\r\n            const userIds: any[] = []\r\n            if (selected.length !== 0) {\r\n                selected.map((item) => {\r\n                    userIds.push(item.value)\r\n                })\r\n            }\r\n\r\n            const variables = {\r\n                cue: saveCue,\r\n                starred,\r\n                color: color.toString(),\r\n                channelId,\r\n                frequency,\r\n                customCategory,\r\n                shuffle,\r\n                createdBy: user._id,\r\n                gradeWeight: gradeWeight.toString(),\r\n                submission: submission || isQuiz,\r\n                deadline: submission || isQuiz ? deadline.toISOString() : '',\r\n                initiateAt: submission || isQuiz ? initiateAt.toISOString() : '',\r\n                endPlayAt: notify && (shuffle || !playChannelCueIndef) ? endPlayAt.toISOString() : '',\r\n                shareWithUserIds: selected.length === subscribers.length ? null : userIds\r\n            }\r\n\r\n            server.mutate({\r\n                mutation: createCue,\r\n                variables\r\n            })\r\n                .then(res => {\r\n                    if (res.data.cue.create) {\r\n                        Animated.timing(modalAnimation, {\r\n                            toValue: 0,\r\n                            duration: 150,\r\n                            useNativeDriver: true\r\n                        }).start(() => {\r\n                            storeDraft('cueDraft', '')\r\n                            setIsSubmitting(false)\r\n                            props.closeModal()\r\n                        })\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    setIsSubmitting(false)\r\n                    Alert(somethingWentWrongAlert, checkConnectionAlert)\r\n                })\r\n        }\r\n        setIsSubmitting(false)\r\n\r\n    }, [cue, modalAnimation, customCategory, props.saveDataInCloud, isQuiz, timer, duration,\r\n        gradeWeight, deadline, initiateAt, submission, imported, selected, subscribers,\r\n        shuffle, frequency, starred, color, notify, title, type, url,\r\n        props.closeModal, channelId, endPlayAt, playChannelCueIndef])\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                const h = await AsyncStorage.getItem('cueDraft')\r\n                if (h !== null) {\r\n                    setCue(h)\r\n                }\r\n                const quizDraft = await AsyncStorage.getItem('quizDraft')\r\n                if (quizDraft !== null) {\r\n                    const { duration, timer, problems, title } = JSON.parse(quizDraft);\r\n\r\n                    setDuration(duration);\r\n                    setTimer(timer);\r\n                    setProblems(problems);\r\n                    setTitle(title);\r\n                }\r\n            } catch (e) {\r\n                console.log(e)\r\n            }\r\n        }\r\n        getData()\r\n    }, [])\r\n\r\n    const clearAll = useCallback(() => {\r\n        Alert(\r\n            clearQuestionAlert,\r\n            cannotUndoAlert,\r\n            [\r\n                {\r\n                    text: \"Cancel\", style: \"cancel\"\r\n                },\r\n                {\r\n                    text: \"Clear\", onPress: () => {\r\n                        setCue('')\r\n                        setImported(false)\r\n                        setUrl('')\r\n                        setType('')\r\n                        setTitle('')\r\n                        setProblems([])\r\n                        setIsQuiz(false)\r\n                        setTimer(false)\r\n                        setShowEquationEditor(false)\r\n                        setEquation('')\r\n                        setReloadEditorKey(Math.random())\r\n                    }\r\n                }\r\n            ]\r\n        )\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        Animated.timing(modalAnimation, {\r\n            toValue: 1,\r\n            duration: 150,\r\n            useNativeDriver: true\r\n        }).start();\r\n    }, [])\r\n\r\n    const onChange = useCallback((value, { action, removedValue }) => {\r\n        switch (action) {\r\n            case 'remove-value':\r\n            case 'pop-value':\r\n                if (removedValue.isFixed) {\r\n                    return;\r\n                }\r\n                break;\r\n            case 'clear':\r\n                value = subscribers.filter(v => v.isFixed);\r\n                break;\r\n        }\r\n        setSelected(value)\r\n    }, [subscribers])\r\n\r\n    const onChangeDuration = useCallback((duration: any) => {\r\n        const { hours, minutes, seconds } = duration;\r\n        setDuration({ hours, minutes, seconds });\r\n    }, [])\r\n\r\n    const yesterday = moment().subtract(1, 'day');\r\n    const disablePastDt = (current: any) => {\r\n        return current.isAfter(yesterday);\r\n    };\r\n\r\n    const quizAlert = PreferredLanguageText('quizzesCanOnly')\r\n    const width = dimensions.window.width;\r\n    return (\r\n        <View style={{\r\n            width: '100%',\r\n            height: dimensions.window.width < 1024 ? dimensions.window.height - 30 : dimensions.window.height,\r\n            backgroundColor: 'white',\r\n            borderTopLeftRadius: 0,\r\n            borderTopRightRadius: 0,\r\n            paddingHorizontal: 20,\r\n            overflow: 'hidden'\r\n        }}>\r\n            <Animated.View style={{\r\n                width: '100%',\r\n                backgroundColor: 'white',\r\n                opacity: modalAnimation,\r\n                height: '100%',\r\n            }}>\r\n                <Text style={{ width: '100%', textAlign: 'center', height: 15, paddingBottom: 30 }}>\r\n                    {/* <Ionicons name='chevron-down' size={20} color={'#e0e0e0'} /> */}\r\n                </Text>\r\n                <View style={{ flexDirection: 'row' }}>\r\n                    <View style={{ backgroundColor: 'white', flex: 1 }}>\r\n                        <Text\r\n                            style={{\r\n                                fontSize: 11,\r\n                                paddingBottom: 20,\r\n                                textTransform: 'uppercase',\r\n                                // paddingLeft: 10\r\n                            }}\r\n                        >\r\n                            {PreferredLanguageText('new')}\r\n                        </Text>\r\n                    </View>\r\n                    <TouchableOpacity\r\n                        onPress={() => setStarred(!starred)}\r\n                        style={{\r\n                            backgroundColor: 'white',\r\n                        }}>\r\n                        <Text style={{\r\n                            textAlign: 'right',\r\n                            lineHeight: 30,\r\n                            marginTop: -31,\r\n                            // paddingRight: 25,\r\n                            width: '100%'\r\n                        }}>\r\n                            <Ionicons name='bookmark' size={34} color={starred ? '#d91d56' : '#a2a2aa'} />\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <View style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: dimensions.window.width < 768 ? 'column-reverse' : 'row',\r\n                    paddingBottom: 4,\r\n                    marginTop: showImportOptions || imported || isQuiz ? 0 : 20,\r\n                    backgroundColor: 'white',\r\n                }} onTouchStart={() => Keyboard.dismiss()}>\r\n                    <View style={{ flexDirection: dimensions.window.width < 768 ? 'column' : 'row', flex: 1 }}>\r\n                        {\r\n                            showImportOptions ? null :\r\n                                <RichToolbar\r\n                                    key={reloadEditorKey.toString()}\r\n                                    style={{\r\n                                        flexWrap: 'wrap',\r\n                                        backgroundColor: 'white',\r\n                                        height: 28,\r\n                                        overflow: 'visible'\r\n                                    }}\r\n                                    iconSize={12}\r\n                                    editor={RichText}\r\n                                    disabled={false}\r\n                                    iconTint={\"#a2a2aa\"}\r\n                                    selectedIconTint={\"#a2a2aa\"}\r\n                                    disabledIconTint={\"#a2a2aa\"}\r\n                                    actions={\r\n                                        imported || isQuiz ? [\"\"] :\r\n                                            [\r\n                                                actions.setBold,\r\n                                                actions.setItalic,\r\n                                                actions.setUnderline,\r\n                                                actions.insertBulletsList,\r\n                                                actions.insertOrderedList,\r\n                                                actions.checkboxList,\r\n                                                actions.insertLink,\r\n                                                actions.insertImage,\r\n                                                // \"insertCamera\",\r\n                                                actions.undo,\r\n                                                actions.redo,\r\n                                                \"clear\"\r\n                                            ]}\r\n                                    iconMap={{\r\n                                        [\"insertCamera\"]: ({ tintColor }) => <Ionicons name='camera-outline' size={15} color={tintColor} />,\r\n                                        [\"clear\"]: ({ tintColor }) => <Ionicons name='trash-outline' size={13} color={tintColor} onPress={() => clearAll()} />\r\n                                    }}\r\n                                    onPressAddImage={galleryCallback}\r\n                                    insertCamera={cameraCallback}\r\n                                />\r\n                        }\r\n                        {\r\n                            imported || !showImportOptions ? null :\r\n                                <FileUpload\r\n                                    back={() => setShowImportOptions(false)}\r\n                                    onUpload={(u: any, t: any) => {\r\n                                        const obj = { url: u, type: t, title }\r\n                                        setCue(JSON.stringify(obj))\r\n                                        setShowImportOptions(false)\r\n                                    }}\r\n                                />\r\n                        }\r\n                    </View>\r\n                    <View style={{ flexDirection: 'row' }}>\r\n                        {\r\n                            !isQuiz ?\r\n                                <Text style={{\r\n                                    color: '#a2a2aa',\r\n                                    fontSize: 11,\r\n                                    lineHeight: 30,\r\n                                    textAlign: 'right',\r\n                                    paddingRight: 20,\r\n                                    textTransform: 'uppercase'\r\n                                }}\r\n                                    onPress={() => setShowEquationEditor(!showEquationEditor)}\r\n                                >\r\n                                    {\r\n                                        showEquationEditor ? PreferredLanguageText('hide') : PreferredLanguageText('formula')\r\n                                    }\r\n                                </Text> : null\r\n                        }\r\n                        {\r\n                            isQuiz ? null :\r\n                                <Text style={{\r\n                                    color: '#a2a2aa',\r\n                                    fontSize: 11,\r\n                                    lineHeight: 30,\r\n                                    textAlign: 'right',\r\n                                    paddingRight: 20,\r\n                                    textTransform: 'uppercase'\r\n                                }}\r\n                                    onPress={() => setShowImportOptions(true)}\r\n                                >\r\n                                    {PreferredLanguageText('import')}\r\n                                </Text>\r\n                        }\r\n                        <Text style={{\r\n                            color: '#a2a2aa',\r\n                            fontSize: 11,\r\n                            lineHeight: 30,\r\n                            textAlign: 'right',\r\n                            paddingRight: 10,\r\n                            textTransform: 'uppercase'\r\n                        }}\r\n                            onPress={() => {\r\n                                if (channelId !== '') {\r\n                                    setIsQuiz(true)\r\n                                    setSubmission(true)\r\n                                } else {\r\n                                    Alert(quizAlert)\r\n                                }\r\n                            }}\r\n                        >\r\n                            {PreferredLanguageText('quiz')}\r\n                        </Text>\r\n                    </View>\r\n                </View>\r\n                {\r\n                    showEquationEditor ?\r\n                        <View style={{ width: '100%', flexDirection: width < 768 ? 'column' : 'row', paddingBottom: 20 }}>\r\n                            <View style={{\r\n                                borderColor: '#f4f4f6',\r\n                                borderWidth: 1,\r\n                                borderRadius: 15,\r\n                                padding: 10,\r\n                                minWidth: 200,\r\n                                maxWidth: '50%'\r\n                            }}>\r\n                                <EquationEditor\r\n                                    value={equation}\r\n                                    onChange={setEquation}\r\n                                    autoCommands=\"pi theta sqrt sum prod alpha beta gamma rho int\"\r\n                                    autoOperatorNames=\"sin cos tan arccos arcsin arctan\"\r\n                                />\r\n                            </View>\r\n                            <TouchableOpacity\r\n                                style={{\r\n                                    justifyContent: 'center',\r\n                                    paddingHorizontal: 20,\r\n                                    maxWidth: '10%'\r\n                                }}\r\n                                onPress={() => insertEquation()}\r\n                            >\r\n                                <Ionicons name='add-circle-outline' color='#a2a2aa' size={20} />\r\n                            </TouchableOpacity>\r\n                            <View style={{ minWidth: '40%', flex: 1, paddingVertical: 5, justifyContent: 'center', }}>\r\n                                <Text style={{ flex: 1, fontSize: 12, color: '#a2a2aa' }}>\r\n                                    ^ → Superscript, _ → Subscript, int → Integral, sum → Summation, prod → Product, sqrt → Square root, bar → Bar over letter, alpha, beta, ... omega → Small Greek letter, Alpha, Beta, ... Omega → Capital Greek letter\r\n                                </Text>\r\n                            </View>\r\n                        </View> : null\r\n                }\r\n                <ScrollView\r\n                    style={{ paddingBottom: 100 }}\r\n                    showsVerticalScrollIndicator={false}\r\n                    scrollEnabled={true}\r\n                    scrollEventThrottle={1}\r\n                    keyboardDismissMode={'on-drag'}\r\n                    overScrollMode={'always'}\r\n                    nestedScrollEnabled={true}\r\n                >\r\n                    {\r\n                        imported || isQuiz ?\r\n                            <View style={{ display: 'flex', flexDirection: width < 768 ? 'column' : 'row', overflow: 'visible' }}>\r\n                                <View style={{ width: width < 768 ? '100%' : '33.33%', borderRightWidth: 0, borderColor: '#f4f4f6', paddingRight: 15, display: 'flex', flexDirection: 'row' }}>\r\n                                    <TextInput\r\n                                        value={title}\r\n                                        style={styles.input}\r\n                                        placeholder={PreferredLanguageText('title')}\r\n                                        onChangeText={val => setTitle(val)}\r\n                                        placeholderTextColor={'#a2a2aa'}\r\n                                    />\r\n                                    <TouchableOpacity\r\n                                        style={{\r\n                                            marginLeft: 15,\r\n                                            paddingTop: 15\r\n                                        }}\r\n                                        onPress={() => clearAll()}\r\n                                    >\r\n                                        <Ionicons name=\"trash-outline\" color=\"#a2a2aa\" size={20} style={{ alignSelf: 'center' }} />\r\n                                        <Text\r\n                                            style={{\r\n                                                fontSize: 9,\r\n                                                color: \"#a2a2aa\",\r\n                                                textAlign: \"center\"\r\n                                            }}>\r\n                                            Remove\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                                {\r\n                                    isQuiz ?\r\n                                        <View style={{ width: width < 768 ? '100%' : '31.67%', borderRightWidth: 0, borderColor: '#f4f4f6', paddingTop: 10 }}>\r\n                                            <View style={{ width: '100%', paddingBottom: 15, backgroundColor: 'white' }}>\r\n                                                <Text style={{ fontSize: 15, color: '#a2a2aa' }}>\r\n                                                    <Ionicons name='timer-outline' size={20} color={'#a2a2aa'} />\r\n                                                </Text>\r\n                                            </View>\r\n                                            <View style={{\r\n                                                backgroundColor: 'white',\r\n                                                width: '100%',\r\n                                                height: 40,\r\n                                                marginRight: 10\r\n                                            }}>\r\n                                                <Switch\r\n                                                    value={timer}\r\n                                                    onValueChange={() => {\r\n                                                        if (timer) {\r\n                                                            setDuration({\r\n                                                                hours: 1,\r\n                                                                minutes: 0,\r\n                                                                seconds: 0\r\n                                                            })\r\n                                                        }\r\n                                                        setTimer(!timer)\r\n                                                    }}\r\n                                                    style={{ height: 20 }}\r\n                                                    trackColor={{\r\n                                                        false: '#f4f4f6',\r\n                                                        true: '#3B64F8'\r\n                                                    }}\r\n                                                    activeThumbColor='white'\r\n                                                />\r\n                                            </View>\r\n                                        </View> : null\r\n                                }\r\n                                {\r\n                                    isQuiz && timer ?\r\n                                        <View style={{ width: width < 768 ? '100%' : '35%', borderRightWidth: 0, borderColor: '#f4f4f6' }}>\r\n                                            <DurationPicker\r\n                                                onChange={onChangeDuration}\r\n                                                initialDuration={{ hours: 1, minutes: 0, seconds: 0 }}\r\n                                                maxHours={6}\r\n                                            />\r\n                                        </View> : null\r\n                                }\r\n                            </View> : null\r\n                    }\r\n                    <View style={{\r\n                        width: '100%',\r\n                        minHeight: isQuiz ? 0 : 500,\r\n                        backgroundColor: 'white'\r\n                    }}>\r\n                        {\r\n                            isQuiz ?\r\n                                <QuizCreate\r\n                                    problems={problems}\r\n                                    setProblems={(p: any) => setProblems(p)}\r\n                                />\r\n                                : (imported ?\r\n                                    (\r\n                                        type === 'mp4' || type === 'mp3' || type === 'mov' || type === 'mpeg' || type === 'mp2' || type === 'wav' ?\r\n                                            <ReactPlayer url={url} controls={true} onContextMenu={(e: any) => e.preventDefault()} config={{ file: { attributes: { controlsList: 'nodownload' } } }} />\r\n                                            :\r\n                                            <View\r\n                                                key={url}\r\n                                                style={{ flex: 1 }}\r\n                                            >\r\n                                                <Webview\r\n                                                    key={url}\r\n                                                    url={url}\r\n                                                />\r\n                                            </View>\r\n                                    )\r\n                                    :\r\n                                    null)\r\n                        }\r\n                        <RichEditor\r\n                            key={reloadEditorKey.toString()}\r\n                            containerStyle={{\r\n                                height,\r\n                                backgroundColor: '#f4f4f6',\r\n                                padding: 3,\r\n                                paddingTop: 5,\r\n                                paddingBottom: 10,\r\n                                borderRadius: 15,\r\n                                display: (isQuiz || imported) ? \"none\" : \"flex\"\r\n                            }}\r\n                            ref={RichText}\r\n                            style={{\r\n                                width: '100%',\r\n                                backgroundColor: '#f4f4f6',\r\n                                borderRadius: 15,\r\n                                minHeight: 475,\r\n                                display: (isQuiz || imported) ? \"none\" : \"flex\"\r\n                            }}\r\n                            editorStyle={{\r\n                                backgroundColor: '#f4f4f6',\r\n                                placeholderColor: '#a2a2aa',\r\n                                color: '#202025',\r\n                                contentCSSText: 'font-size: 14px;',\r\n\r\n                            }}\r\n                            initialContentHTML={cue}\r\n                            onScroll={() => Keyboard.dismiss()}\r\n                            placeholder={PreferredLanguageText('title')}\r\n                            onChange={(text) => {\r\n                                const modifedText = text.split('&amp;').join('&')\r\n                                setCue(modifedText)\r\n                            }}\r\n                            onHeightChange={handleHeightChange}\r\n                            onBlur={() => Keyboard.dismiss()}\r\n                            allowFileAccess={true}\r\n                            allowFileAccessFromFileURLs={true}\r\n                            allowUniversalAccessFromFileURLs={true}\r\n                            allowsFullscreenVideo={true}\r\n                            allowsInlineMediaPlayback={true}\r\n                            allowsLinkPreview={true}\r\n                            allowsBackForwardNavigationGestures={true}\r\n                        />\r\n\r\n                    </View>\r\n                    <View style={{ flex: 1, display: 'flex', flexDirection: 'column', marginHorizontal: 10 }}>\r\n                        {channels.length !== 0 ?\r\n                            <View style={{ display: 'flex', flexDirection: width < 768 ? 'column' : 'row', overflow: 'visible' }}>\r\n                                <View style={{ width: width < 768 ? '100%' : '33.33%', borderRightWidth: 0, borderColor: '#f4f4f6' }}>\r\n                                    <View style={{ width: '100%', paddingTop: 40, paddingBottom: 15, backgroundColor: 'white' }}>\r\n                                        <Text style={{ fontSize: 12, color: '#a2a2aa' }}>\r\n                                            {/* {PreferredLanguageText('channel')} */}\r\n                                            Share with\r\n                                            {/* <Ionicons\r\n                                                name='school-outline' size={20} color={'#a2a2aa'} /> */}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View style={{ width: '100%', display: 'flex', flexDirection: 'row', backgroundColor: 'white' }}>\r\n                                        <View style={{ width: '85%', backgroundColor: 'white', display: 'flex' }}>\r\n                                            <ScrollView style={styles.colorBar} horizontal={true} showsHorizontalScrollIndicator={false}>\r\n                                                <TouchableOpacity\r\n                                                    style={channelId === '' ? styles.allOutline : styles.allBlack}\r\n                                                    onPress={() => {\r\n                                                        setChannelId('')\r\n                                                        setCustomCategories(localCustomCategories)\r\n                                                        setCustomCategory('')\r\n                                                        setAddCustomCategory(false)\r\n                                                        setSubmission(false)\r\n                                                        setGradeWeight(0)\r\n                                                        setGraded(false)\r\n                                                        setSelected([])\r\n                                                        setSubscribers([])\r\n                                                        setProblems([])\r\n                                                        setIsQuiz(false)\r\n                                                        setTimer(false)\r\n                                                    }}>\r\n                                                    <Text style={{ lineHeight: 20, fontSize: 12, color: channelId === '' ? '#fff' : '#202025' }}>\r\n                                                        {/* <Ionicons name='home-outline' size={15} /> */}\r\n                                                        {PreferredLanguageText('myCues')}\r\n                                                    </Text>\r\n                                                </TouchableOpacity>\r\n                                                {\r\n                                                    channels.map((channel) => {\r\n                                                        return <TouchableOpacity\r\n                                                            key={Math.random()}\r\n                                                            style={channelId === channel._id ? styles.allOutline : styles.allBlack}\r\n                                                            onPress={() => {\r\n                                                                setChannelId(channel._id)\r\n                                                                setAddCustomCategory(false)\r\n                                                                setCustomCategory('')\r\n                                                                setSubmission(isQuiz ? true : false)\r\n                                                                setGradeWeight(0)\r\n                                                                setGraded(false)\r\n                                                            }}>\r\n                                                            <Text style={{ lineHeight: 20, fontSize: 12, color: channelId === channel._id ? '#fff' : '#202025' }}>\r\n                                                                {channel.name}\r\n                                                            </Text>\r\n                                                        </TouchableOpacity>\r\n                                                    })\r\n                                                }\r\n                                            </ScrollView>\r\n                                        </View>\r\n                                    </View>\r\n                                    {\r\n                                        channelId !== '' ?\r\n                                            <View style={{ maxHeight: 175, flexDirection: 'column', marginTop: 25, overflow: 'scroll' }}>\r\n                                                <View style={{ width: '90%', padding: 5, height: expandMenu ? 175 : 'auto' }}>\r\n                                                    <Select\r\n                                                        placeholder='Share with'\r\n                                                        styles={{\r\n                                                            menu: (provided: any, state: any) => ({\r\n                                                                ...provided,\r\n                                                                zIndex: 9999,\r\n                                                                overflow: 'scroll',\r\n                                                                height: 125,\r\n                                                                display: 'flex',\r\n                                                                margin: 5,\r\n                                                                width: '97%',\r\n                                                                boxShadow: 'none'\r\n                                                            }),\r\n                                                            option: (provided: any, state: any) => ({\r\n                                                                ...provided,\r\n                                                                fontFamily: 'overpass',\r\n                                                                color: '#a2a2aa',\r\n                                                                fontSize: 10,\r\n                                                                height: 25,\r\n                                                                width: '97%'\r\n                                                            }),\r\n                                                            input: (styles: any) => ({\r\n                                                                // ...styles,\r\n                                                                width: '100%',\r\n                                                                border: 'none',\r\n                                                                borderWidth: 0,\r\n                                                                fontSize: 12\r\n                                                            }),\r\n                                                            placeholder: (styles: any) => ({\r\n                                                                ...styles,\r\n                                                                fontFamily: 'overpass',\r\n                                                                color: '#a2a2aa',\r\n                                                                fontSize: 12\r\n                                                            }),\r\n                                                            multiValueLabel: (styles: any, { data }: any) => ({\r\n                                                                ...styles,\r\n                                                                color: '#202025',\r\n                                                                fontFamily: 'overpass'\r\n                                                            }),\r\n                                                            multiValue: (styles: any, { data }: any) => ({\r\n                                                                ...styles,\r\n                                                                backgroundColor: '#f4f4f6',\r\n                                                                fontFamily: 'overpass'\r\n                                                            })\r\n                                                        }}\r\n                                                        value={selected}\r\n                                                        isMulti={true}\r\n                                                        onMenuOpen={() => setExpandMenu(true)}\r\n                                                        onMenuClose={() => setExpandMenu(false)}\r\n                                                        name=\"Share with\"\r\n                                                        className=\"basic-multi-select\"\r\n                                                        classNamePrefix=\"select\"\r\n                                                        onChange={onChange}\r\n                                                        options={subscribers}\r\n                                                    />\r\n                                                </View>\r\n                                            </View> : null\r\n                                    }\r\n                                </View>\r\n                                {\r\n                                    channelId !== '' ?\r\n                                        <View style={{ width: width < 768 ? '100%' : '33.33%' }}>\r\n                                            <View style={{ width: '100%', paddingTop: 40, paddingBottom: 15, backgroundColor: 'white' }}>\r\n                                                <Text style={{ fontSize: 12, color: '#a2a2aa' }}>\r\n                                                    {PreferredLanguageText('submissionRequired')}\r\n                                                </Text>\r\n                                            </View>\r\n                                            <View style={{ flexDirection: 'row' }}>\r\n                                                <View style={{\r\n                                                    backgroundColor: 'white',\r\n                                                    height: 40,\r\n                                                    marginRight: 10\r\n                                                }}>\r\n                                                    <Switch\r\n                                                        disabled={isQuiz}\r\n                                                        value={submission}\r\n                                                        onValueChange={() => {\r\n                                                            setSubmission(!submission)\r\n                                                        }}\r\n                                                        style={{ height: 20 }}\r\n                                                        trackColor={{\r\n                                                            false: '#f4f4f6',\r\n                                                            true: '#a2a2aa'\r\n                                                        }}\r\n                                                        activeThumbColor='white'\r\n                                                    />\r\n                                                </View>\r\n                                                {\r\n                                                    submission ?\r\n                                                        <View style={{\r\n                                                            width: '100%',\r\n                                                            display: 'flex',\r\n                                                            flexDirection: 'row',\r\n                                                            backgroundColor: 'white',\r\n                                                        }}>\r\n                                                           <Text style={styles.text}>\r\n                                                                Available \r\n                                                            </Text>\r\n                                                            <Datetime\r\n                                                                value={initiateAt}\r\n                                                                onChange={(event: any) => {\r\n                                                                    const date = new Date(event)\r\n\r\n                                                                    if (date < new Date()) return;\r\n                                                                        setInitiateAt(date)\r\n                                                                    }}\r\n                                                                    isValidDate={disablePastDt}\r\n                                                                />\r\n\r\n                                                        </View>\r\n                                                        : null\r\n                                                }\r\n                                            </View>\r\n\r\n                                            {/* Add it here */}\r\n\r\n                                            <View style={{ width: width < 768 ? '100%' : '33.33%' }}>\r\n                                                <View style={{ flexDirection: 'row' }}>\r\n                                                    {\r\n                                                        submission ?\r\n                                                            <View style={{\r\n                                                                width: '100%',\r\n                                                                display: 'flex',\r\n                                                                flexDirection: 'row',\r\n                                                                backgroundColor: 'white',\r\n                                                                marginLeft: 50\r\n                                                            }}>\r\n                                                                 <Text style={styles.text}>\r\n                                                                {PreferredLanguageText('deadline')}\r\n                                                            </Text>\r\n                                                            <Datetime\r\n                                                                value={deadline}\r\n                                                                onChange={(event: any) => {\r\n                                                                    const date = new Date(event)\r\n\r\n                                                                    if (date < new Date()) return;\r\n\r\n                                                                    setDeadline(date)\r\n                                                                }}\r\n                                                                isValidDate={disablePastDt}\r\n                                                            />\r\n                                                                \r\n\r\n                                                            </View>\r\n                                                            : null\r\n                                                    }\r\n                                                </View>\r\n\r\n                                            {/* Add it here */}\r\n                                        </View>\r\n\r\n                                        </View> : null\r\n                                }\r\n                                {\r\n                                    submission ?\r\n                                        <View style={{ width: width < 768 ? '100%' : '33.33%' }}>\r\n                                            <View style={{ width: '100%', paddingTop: 40, paddingBottom: 15, backgroundColor: 'white' }}>\r\n                                                <Text style={{ fontSize: 12, color: '#a2a2aa' }}>\r\n                                                    Grade Weight \r\n                                                </Text>\r\n                                            </View>\r\n                                            <View style={{ flexDirection: 'row' }}>\r\n                                                <View style={{\r\n                                                    backgroundColor: 'white',\r\n                                                    height: 40,\r\n                                                    marginRight: 10\r\n                                                }}>\r\n                                                    <Switch\r\n                                                        value={graded}\r\n                                                        onValueChange={() => setGraded(!graded)}\r\n                                                        style={{ height: 20 }}\r\n                                                        trackColor={{\r\n                                                            false: '#f4f4f6',\r\n                                                            true: '#a2a2aa'\r\n                                                        }}\r\n                                                        activeThumbColor='white'\r\n                                                    />\r\n                                                </View>\r\n                                                {\r\n                                                    graded ?\r\n                                                        <View style={{\r\n                                                            width: '100%',\r\n                                                            display: 'flex',\r\n                                                            flexDirection: 'row',\r\n                                                            backgroundColor: 'white'\r\n                                                        }}>\r\n                                                            <Text style={styles.text}>\r\n                                                                {PreferredLanguageText('percentageOverall')}\r\n                                                            </Text>\r\n                                                            <TextInput\r\n                                                                value={gradeWeight}\r\n                                                                style={styles.picker}\r\n                                                                placeholder={'0-100'}\r\n                                                                onChangeText={val => setGradeWeight(val)}\r\n                                                                placeholderTextColor={'#a2a2aa'}\r\n                                                            />\r\n                                                        </View>\r\n                                                        : null\r\n                                                }\r\n                                            </View>\r\n                                        </View> : null\r\n                                }\r\n                            </View>\r\n                            : null}\r\n                        <View style={{ display: 'flex', flexDirection: width < 768 ? 'column' : 'row' }}>\r\n                            <View style={{ width: width < 768 ? '100%' : '33.33%', borderRightWidth: 0, borderColor: '#f4f4f6' }}>\r\n                                <View style={{ width: '100%', backgroundColor: 'white' }}>\r\n                                    <View style={{ width: '100%', paddingTop: 40, paddingBottom: 15, backgroundColor: 'white' }}>\r\n                                        <Text style={{ fontSize: 12, color: '#a2a2aa' }}>\r\n                                            {PreferredLanguageText('category')}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View style={{ width: '100%', display: 'flex', flexDirection: 'row', backgroundColor: 'white' }}>\r\n                                        <View style={{ width: '85%', backgroundColor: 'white' }}>\r\n                                            {\r\n                                                addCustomCategory ?\r\n                                                    <View style={styles.colorBar}>\r\n                                                        <TextInput\r\n                                                            value={customCategory}\r\n                                                            style={styles.allGrayOutline}\r\n                                                            placeholder={'Enter Category'}\r\n                                                            onChangeText={val => {\r\n                                                                setCustomCategory(val)\r\n                                                            }}\r\n                                                            placeholderTextColor={'#a2a2aa'}\r\n                                                        />\r\n                                                    </View> :\r\n                                                    <ScrollView style={styles.colorBar} horizontal={true} showsHorizontalScrollIndicator={false}>\r\n                                                        <TouchableOpacity\r\n                                                            style={customCategory === '' ? styles.allGrayOutline : styles.all}\r\n                                                            onPress={() => {\r\n                                                                setCustomCategory('')\r\n                                                            }}>\r\n                                                            <Text style={{ color: '#a2a2aa', lineHeight: 20, fontSize: 12 }}>\r\n                                                                {PreferredLanguageText('none')}\r\n                                                            </Text>\r\n                                                        </TouchableOpacity>\r\n                                                        {\r\n                                                            customCategories.map((category: string) => {\r\n                                                                return <TouchableOpacity\r\n                                                                    key={Math.random()}\r\n                                                                    style={customCategory === category ? styles.allGrayOutline : styles.all}\r\n                                                                    onPress={() => {\r\n                                                                        setCustomCategory(category)\r\n                                                                    }}>\r\n                                                                    <Text style={{ color: '#a2a2aa', lineHeight: 20, fontSize: 12 }}>\r\n                                                                        {category}\r\n                                                                    </Text>\r\n                                                                </TouchableOpacity>\r\n                                                            })\r\n                                                        }\r\n                                                    </ScrollView>\r\n                                            }\r\n                                        </View>\r\n                                        <View style={{ width: '15%', backgroundColor: 'white' }}>\r\n                                            <TouchableOpacity\r\n                                                onPress={() => {\r\n                                                    if (addCustomCategory) {\r\n                                                        setCustomCategory('')\r\n                                                        setAddCustomCategory(false)\r\n                                                    } else {\r\n                                                        setCustomCategory('')\r\n                                                        setAddCustomCategory(true)\r\n                                                    }\r\n                                                }}\r\n                                                style={{ backgroundColor: 'white' }}>\r\n                                                <Text style={{ textAlign: 'center', lineHeight: 20, width: '100%' }}>\r\n                                                    <Ionicons name={addCustomCategory ? 'close' : 'add'} size={20} color={'#a2a2aa'} />\r\n                                                </Text>\r\n                                            </TouchableOpacity>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                            <View style={{ width: width < 768 ? '100%' : '33.33%', borderRightWidth: 0, borderColor: '#f4f4f6' }}>\r\n                                <View style={{ width: '100%', paddingTop: 40, paddingBottom: 15, backgroundColor: 'white' }}>\r\n                                    <Text style={{ fontSize: 12, color: '#a2a2aa' }}>\r\n                                        {PreferredLanguageText('priority')}\r\n                                    </Text>\r\n                                </View>\r\n                                <View style={{ width: '100%', display: 'flex', flexDirection: 'row', backgroundColor: 'white' }}>\r\n                                    <View style={{ width: '100%', backgroundColor: 'white' }}>\r\n                                        <ScrollView style={{ ...styles.colorBar, height: 20 }} horizontal={true} showsHorizontalScrollIndicator={false}>\r\n                                            {\r\n                                                colorChoices.map((c: string, i: number) => {\r\n                                                    return <View style={color === i ? styles.colorContainerOutline : styles.colorContainer} key={Math.random()}>\r\n                                                        <TouchableOpacity\r\n                                                            style={{\r\n                                                                width: 12,\r\n                                                                height: 12,\r\n                                                                borderRadius: 6,\r\n                                                                backgroundColor: colorChoices[i]\r\n                                                            }}\r\n                                                            onPress={() => {\r\n                                                                setColor(i)\r\n                                                            }}\r\n                                                        />\r\n                                                    </View>\r\n                                                })\r\n                                            }\r\n                                        </ScrollView>\r\n                                    </View>\r\n                                </View>\r\n                            </View>\r\n                        </View>\r\n                        <View style={{ width: '100%', paddingTop: 15, flexDirection: width < 768 ? 'column' : 'row' }}>\r\n                            <View style={{ width: width < 768 ? '100%' : '33.33%' }}>\r\n                                <View style={{ width: '100%', paddingTop: 40, paddingBottom: 15, backgroundColor: 'white' }}>\r\n                                    <Text style={{ fontSize: 12, color: '#a2a2aa' }}>\r\n                                        Reminder\r\n                                    </Text>\r\n                                </View>\r\n                                <View style={{\r\n                                    backgroundColor: 'white',\r\n                                    width: '100%',\r\n                                    height: 40,\r\n                                    marginRight: 10\r\n                                }}>\r\n                                    <Switch\r\n                                        value={notify}\r\n                                        onValueChange={() => {\r\n                                            if (notify) {\r\n                                                // setShuffle(false)\r\n                                                setFrequency(\"0\")\r\n                                            } else {\r\n                                                // setShuffle(true)\r\n                                                setFrequency(\"1-D\")\r\n                                            }\r\n                                            setPlayChannelCueIndef(true)\r\n                                            setNotify(!notify)\r\n                                        }}\r\n                                        style={{ height: 20 }}\r\n                                        trackColor={{\r\n                                            false: '#f4f4f6',\r\n                                            true: '#3B64F8'\r\n                                        }}\r\n                                        activeThumbColor='white'\r\n                                    />\r\n                                </View>\r\n                            </View>\r\n                            {\r\n                                notify ?\r\n                                    <View style={{ width: width < 768 ? '100%' : '33.33%' }}>\r\n                                        <View style={{ width: '100%', paddingTop: 40, paddingBottom: 15, backgroundColor: 'white' }}>\r\n                                            <Text style={{ fontSize: 12, color: '#a2a2aa' }}>\r\n                                                Recurring\r\n                                            </Text>\r\n                                        </View>\r\n                                        <View style={{ flexDirection: 'row', }}>\r\n                                            <View style={{\r\n                                                backgroundColor: 'white',\r\n                                                height: 40,\r\n                                                marginRight: 10\r\n                                            }}>\r\n                                                <Switch\r\n                                                    value={!shuffle}\r\n                                                    onValueChange={() => setShuffle(!shuffle)}\r\n                                                    style={{ height: 20 }}\r\n                                                    trackColor={{\r\n                                                        false: '#f4f4f6',\r\n                                                        true: '#a2a2aa'\r\n                                                    }}\r\n                                                    activeThumbColor='white'\r\n                                                />\r\n                                            </View>\r\n                                            {\r\n                                                !shuffle ?\r\n                                                    <View style={{\r\n                                                        display: 'flex',\r\n                                                        flexDirection: 'row',\r\n                                                        backgroundColor: 'white'\r\n                                                    }}>\r\n                                                        <Text style={styles.text}>\r\n                                                            {PreferredLanguageText('remindEvery')}\r\n                                                        </Text>\r\n                                                        <Picker\r\n                                                            style={styles.picker}\r\n                                                            itemStyle={{\r\n                                                                fontSize: 15\r\n                                                            }}\r\n                                                            selectedValue={frequency}\r\n                                                            onValueChange={(itemValue: any) =>\r\n                                                                setFrequency(itemValue)\r\n                                                            }>\r\n                                                            {\r\n                                                                timedFrequencyOptions.map((item: any, index: number) => {\r\n                                                                    return <Picker.Item\r\n                                                                        color={frequency === item.value ? '#3B64F8' : \"#202025\"}\r\n                                                                        label={item.value === '0' && channelId !== '' ? 'Once' : item.label}\r\n                                                                        value={item.value}\r\n                                                                        key={index}\r\n                                                                    />\r\n                                                                })\r\n                                                            }\r\n                                                        </Picker>\r\n                                                    </View> :\r\n                                                    <View style={{\r\n                                                        width: '100%',\r\n                                                        display: 'flex',\r\n                                                        flexDirection: 'row',\r\n                                                        backgroundColor: 'white'\r\n                                                    }}>\r\n                                                        <Text style={styles.text}>\r\n                                                            {PreferredLanguageText('RemindOn')}\r\n                                                        </Text>\r\n                                                        <Datetime\r\n                                                            value={endPlayAt}\r\n                                                            onChange={(event: any) => {\r\n                                                                const date = new Date(event)\r\n                                                                if (date < new Date()) return;\r\n\r\n                                                                setEndPlayAt(date)\r\n                                                            }}\r\n                                                            isValidDate={disablePastDt}\r\n                                                        />\r\n                                                    </View>\r\n                                            }\r\n                                        </View>\r\n                                    </View> : null\r\n                            }\r\n                            {\r\n                                notify && !shuffle ?\r\n                                    <View style={{ width: width < 768 ? '100%' : '33.33%' }}>\r\n                                        <View style={{ width: '100%', paddingTop: 40, paddingBottom: 15, backgroundColor: 'white' }}>\r\n                                            <Text style={{ fontSize: 12, color: '#a2a2aa' }}>\r\n                                                Indefinite\r\n                                            </Text>\r\n                                        </View>\r\n                                        <View style={{ flexDirection: 'row' }}>\r\n                                            <View style={{\r\n                                                backgroundColor: 'white',\r\n                                                height: 40,\r\n                                                marginRight: 10\r\n                                            }}>\r\n                                                <Switch\r\n                                                    value={playChannelCueIndef}\r\n                                                    onValueChange={() => setPlayChannelCueIndef(!playChannelCueIndef)}\r\n                                                    style={{ height: 20 }}\r\n                                                    trackColor={{\r\n                                                        false: '#f4f4f6',\r\n                                                        true: '#a2a2aa'\r\n                                                    }}\r\n                                                    activeThumbColor='white'\r\n                                                />\r\n                                            </View>\r\n                                            {\r\n                                                playChannelCueIndef ? null :\r\n                                                    <View style={{\r\n                                                        width: '100%',\r\n                                                        display: 'flex',\r\n                                                        flexDirection: 'row',\r\n                                                        backgroundColor: 'white'\r\n                                                    }}>\r\n                                                        <Text style={styles.text}>\r\n                                                            {PreferredLanguageText('remindTill')}\r\n                                                        </Text>\r\n                                                        <Datetime\r\n                                                            value={endPlayAt}\r\n                                                            onChange={(event: any) => {\r\n                                                                const date = new Date(event)\r\n                                                                if (date < new Date()) return;\r\n                                                                setEndPlayAt(date)\r\n                                                            }}\r\n                                                            isValidDate={disablePastDt}\r\n                                                        />\r\n                                                    </View>\r\n                                            }\r\n                                        </View>\r\n                                    </View> : null\r\n                            }\r\n                        </View>\r\n                        {/* if Quiz then ask Shuffle */}\r\n                        {isQuiz ?  <View style={{ width: width < 768 ? '100%' : '33.33%' }}>\r\n                                        <View style={{ width: '100%', paddingTop: 40, paddingBottom: 15, backgroundColor: 'white' }}>\r\n                                            <Text style={{ fontSize: 12, color: '#a2a2aa' }}>\r\n                                                Shuffle Questions\r\n                                            </Text>\r\n                                        </View>\r\n                                        <View style={{ flexDirection: 'row' }}>\r\n                                            <View style={{\r\n                                                backgroundColor: 'white',\r\n                                                height: 40,\r\n                                                marginRight: 10\r\n                                            }}>\r\n                                                <Switch\r\n                                                    value={shuffleQuiz}\r\n                                                    onValueChange={() => setShuffleQuiz(!shuffleQuiz)}\r\n                                                    style={{ height: 20 }}\r\n                                                    trackColor={{\r\n                                                        false: '#f4f4f6',\r\n                                                        true: '#a2a2aa'\r\n                                                    }}\r\n                                                    activeThumbColor='white'\r\n                                                />\r\n                                            </View>\r\n                                        </View>\r\n                                    </View> : null}\r\n                    </View>\r\n                    <View style={styles.footer}>\r\n                        <View\r\n                            style={{\r\n                                flex: 1,\r\n                                backgroundColor: 'white',\r\n                                justifyContent: 'center',\r\n                                display: 'flex',\r\n                                flexDirection: 'row',\r\n                                height: 50,\r\n                                paddingTop: 10\r\n                            }}>\r\n                            <TouchableOpacity\r\n                                onPress={async () => {\r\n                                    if (isQuiz) {\r\n                                        createNewQuiz()\r\n                                    } else {\r\n                                        await handleCreate()\r\n                                    }\r\n                                }}\r\n                                style={{\r\n                                    borderRadius: 15,\r\n                                    backgroundColor: 'white'\r\n                                }}>\r\n                                {\r\n                                    channelId === '' ?\r\n                                        <Text style={{\r\n                                            textAlign: 'center',\r\n                                            lineHeight: 35,\r\n                                            color: 'white',\r\n                                            fontSize: 12,\r\n                                            backgroundColor: '#3B64F8',\r\n                                            borderRadius: 15,\r\n                                            paddingHorizontal: 25,\r\n                                            fontFamily: 'inter',\r\n                                            overflow: 'hidden',\r\n                                            height: 35,\r\n                                            textTransform: 'uppercase'\r\n                                        }}>\r\n                                            {isSubmitting ? PreferredLanguageText('sharing') : PreferredLanguageText('save')}\r\n                                        </Text> :\r\n                                        <Text style={{\r\n                                            textAlign: 'center',\r\n                                            lineHeight: 35,\r\n                                            color: 'white',\r\n                                            fontSize: 12,\r\n                                            backgroundColor: '#3B64F8',\r\n                                            borderRadius: 15,\r\n                                            paddingHorizontal: 25,\r\n                                            fontFamily: 'inter',\r\n                                            overflow: 'hidden',\r\n                                            height: 35,\r\n                                            textTransform: 'uppercase'\r\n                                        }}>\r\n                                            {isSubmitting ? PreferredLanguageText('sharing') : PreferredLanguageText('share')}\r\n                                        </Text>\r\n                                }\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                    {/* Collapsible ends here */}\r\n                </ScrollView>\r\n            </Animated.View>\r\n        </View >\r\n    );\r\n}\r\n\r\nexport default Create\r\n\r\nconst styles: any = StyleSheet.create({\r\n    timePicker: {\r\n        width: 125,\r\n        fontSize: 15,\r\n        height: 45,\r\n        color: '#202025',\r\n        borderRadius: 10,\r\n        marginLeft: 10\r\n    },\r\n    backgroundVideo: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n    },\r\n    cuesInput: {\r\n        width: '100%',\r\n        backgroundColor: '#f4f4f6',\r\n        borderRadius: 15,\r\n        fontSize: 21,\r\n        padding: 20,\r\n        paddingTop: 20,\r\n        paddingBottom: 20,\r\n        marginBottom: '4%'\r\n    },\r\n    footer: {\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        marginTop: 80,\r\n        lineHeight: 18\r\n    },\r\n    colorContainer: {\r\n        lineHeight: 20,\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginLeft: 7,\r\n        paddingHorizontal: 4,\r\n        backgroundColor: 'white'\r\n    },\r\n    colorContainerOutline: {\r\n        lineHeight: 22,\r\n        justifyContent: 'center',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginLeft: 7,\r\n        paddingHorizontal: 4,\r\n        backgroundColor: 'white',\r\n        borderRadius: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#a2a2aa'\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        borderBottomColor: '#f4f4f6',\r\n        borderBottomWidth: 1,\r\n        fontSize: 15,\r\n        padding: 15,\r\n        paddingTop: 12,\r\n        paddingBottom: 12,\r\n        marginTop: 5,\r\n        marginBottom: 20\r\n    },\r\n    date: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        paddingBottom: 4,\r\n        backgroundColor: 'white',\r\n    },\r\n    colorBar: {\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        backgroundColor: 'white',\r\n        lineHeight: 20\r\n    },\r\n    picker: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'white',\r\n        overflow: 'hidden',\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        borderWidth: 1,\r\n        width: 100,\r\n        height: 20,\r\n        alignSelf: 'center',\r\n        marginTop: -20,\r\n        borderRadius: 3\r\n    },\r\n    text: {\r\n        fontSize: 12,\r\n        color: '#a2a2aa',\r\n        textAlign: 'left',\r\n        paddingHorizontal: 10\r\n    },\r\n    all: {\r\n        fontSize: 12,\r\n        color: '#a2a2aa',\r\n        height: 22,\r\n        paddingHorizontal: 10,\r\n        backgroundColor: 'white'\r\n    },\r\n    allBlack: {\r\n        fontSize: 12,\r\n        color: '#202025',\r\n        height: 22,\r\n        paddingHorizontal: 10,\r\n        backgroundColor: 'white',\r\n        marginBottom: 20\r\n    },\r\n    allOutline: {\r\n        fontSize: 12,\r\n        color: '#FFF',\r\n        height: 22,\r\n        paddingHorizontal: 10,\r\n        borderRadius: 10,\r\n        backgroundColor: '#202025',\r\n        marginBottom: 20\r\n    },\r\n    allGrayOutline: {\r\n        fontSize: 12,\r\n        color: '#a2a2aa',\r\n        height: 22,\r\n        paddingHorizontal: 10,\r\n        backgroundColor: 'white',\r\n        borderRadius: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#a2a2aa'\r\n    },\r\n    color1: {\r\n        backgroundColor: '#D11C60'\r\n    },\r\n    color2: {\r\n        backgroundColor: '#EF5B24',\r\n    },\r\n    color3: {\r\n        backgroundColor: '#E0D41F',\r\n    },\r\n    color4: {\r\n        backgroundColor: '#B8D41F',\r\n    },\r\n    color5: {\r\n        backgroundColor: '#7FB1D3',\r\n    },\r\n    outline: {\r\n        borderRadius: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#a2a2aa'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}