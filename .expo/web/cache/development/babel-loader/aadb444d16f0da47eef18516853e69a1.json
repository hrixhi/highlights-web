{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\AttendanceList.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { View, Text } from \"./Themed\";\nimport moment from 'moment';\nimport { PreferredLanguageText } from \"../helpers/LanguageContext\";\nimport Datetime from \"react-datetime\";\nimport XLSX from \"xlsx\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport * as FileSaver from 'file-saver';\n\nvar AttendanceList = function AttendanceList(props) {\n  var unparsedPastMeetings = JSON.parse(JSON.stringify(props.pastMeetings));\n  var unparsedChannelAttendances = JSON.parse(JSON.stringify(props.channelAttendances));\n\n  var _useState = useState(unparsedPastMeetings),\n      _useState2 = _slicedToArray(_useState, 2),\n      pastMeetings = _useState2[0],\n      setPastMeetings = _useState2[1];\n\n  var _useState3 = useState(unparsedChannelAttendances),\n      _useState4 = _slicedToArray(_useState3, 2),\n      channelAttendances = _useState4[0],\n      setChannelAttendances = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      enableFilter = _useState6[0],\n      setEnableFilter = _useState6[1];\n\n  var _useState7 = useState(new Date()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      end = _useState8[0],\n      setEnd = _useState8[1];\n\n  var _useState9 = useState(new Date(end.getTime() - 2630000 * 60 * 10)),\n      _useState10 = _slicedToArray(_useState9, 2),\n      start = _useState10[0],\n      setStart = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      attendanceTotalMap = _useState12[0],\n      setAttendanceTotalMap = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showAttendanceStats = _useState14[0],\n      setShowAttendanceStats = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      exportAoa = _useState16[0],\n      setExportAoa = _useState16[1];\n\n  useEffect(function () {\n    if (channelAttendances.length === 0 || pastMeetings.length === 0) {\n      return;\n    }\n\n    var studentTotalMap = {};\n    channelAttendances.forEach(function (att) {\n      var count = 0;\n      pastMeetings.forEach(function (meeting) {\n        var attendanceObject = att.attendances.find(function (s) {\n          return s.dateId.toString().trim() === meeting.dateId.toString().trim();\n        });\n        if (attendanceObject) count++;\n      });\n      studentTotalMap[att.userId] = count;\n    });\n    setAttendanceTotalMap(studentTotalMap);\n    var exportAoa = [];\n    var row1 = [\"\"];\n    pastMeetings.forEach(function (meeting) {\n      row1.push(moment(new Date(meeting.start)).format('MMMM Do YYYY, h:mm a'));\n    });\n    row1.push(\"Total\");\n    exportAoa.push(row1);\n    channelAttendances.forEach(function (att) {\n      var userRow = [];\n      userRow.push(att.fullName);\n      pastMeetings.forEach(function (meeting) {\n        var attendanceObject = att.attendances.find(function (s) {\n          return s.dateId.toString().trim() === meeting.dateId.toString().trim();\n        });\n\n        if (attendanceObject) {\n          userRow.push(\"Joined at \" + moment(new Date(attendanceObject.joinedAt)).format('MMMM Do YYYY, h:mm a'));\n        } else {\n          userRow.push('-');\n        }\n      });\n      userRow.push(studentTotalMap[att.userId] + \" / \" + pastMeetings.length);\n      exportAoa.push(userRow);\n    });\n    setExportAoa(exportAoa);\n  }, [channelAttendances, pastMeetings]);\n  useEffect(function () {\n    if (enableFilter) {\n      var filteredPastMeetings = unparsedPastMeetings.filter(function (meeting) {\n        return new Date(meeting.start) > start && new Date(meeting.end) < end;\n      });\n      setPastMeetings(filteredPastMeetings);\n    } else {\n      setPastMeetings(unparsedPastMeetings);\n    }\n  }, [enableFilter, start, end]);\n\n  var exportAttendance = function exportAttendance() {\n    var fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    var fileExtension = '.xlsx';\n    var ws = XLSX.utils.aoa_to_sheet(exportAoa);\n    var wb = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, \"Attendance \");\n    var excelBuffer = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    var data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    FileSaver.saveAs(data, \"attendances\" + fileExtension);\n  };\n\n  var width = Dimensions.get(\"window\").width;\n\n  var renderAttendanceStatsTabs = function renderAttendanceStatsTabs() {\n    return React.createElement(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        justifyContent: \"center\",\n        flexDirection: \"column\"\n      },\n      onPress: function onPress() {\n        setShowAttendanceStats(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: !showAttendanceStats ? styles.allGrayFill : styles.all,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, \"Students\")), React.createElement(TouchableOpacity, {\n      style: {\n        justifyContent: \"center\",\n        flexDirection: \"column\"\n      },\n      onPress: function onPress() {\n        setShowAttendanceStats(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: showAttendanceStats ? styles.allGrayFill : styles.all,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, \"Lectures\")));\n  };\n\n  var renderAttendanceChart = function renderAttendanceChart() {\n    var studentCount = channelAttendances.length;\n    var meetingLabels = [];\n    var attendanceCounts = [];\n    pastMeetings.map(function (meeting) {\n      var title = meeting.title,\n          start = meeting.start,\n          dateId = meeting.dateId;\n      console.log(meeting);\n      meetingLabels.push(\"\" + moment(new Date(start)).format('MMMM Do YYYY, h:mm a'));\n      var count = 0;\n      channelAttendances.forEach(function (att) {\n        var filteredDateId = att.attendances.filter(function (x) {\n          return x.dateId === dateId;\n        });\n        if (filteredDateId.length > 0) count++;\n      });\n      var percentage = count / studentCount * 100;\n      attendanceCounts.push(percentage);\n    });\n    var data = {\n      labels: meetingLabels,\n      datasets: [{\n        data: attendanceCounts,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(134, 65, 244, \" + opacity + \")\";\n        },\n        strokeWidth: 2\n      }]\n    };\n    return React.createElement(View, {\n      style: {\n        width: '100%',\n        backgroundColor: 'white',\n        flex: 1\n      },\n      key: JSON.stringify(pastMeetings),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, React.createElement(ScrollView, {\n      showsHorizontalScrollIndicator: false,\n      horizontal: true,\n      contentContainerStyle: {\n        height: '100%'\n      },\n      nestedScrollEnabled: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, React.createElement(LineChart, {\n      data: data,\n      width: width - 100,\n      height: 500,\n      chartConfig: {\n        backgroundGradientFrom: \"#fff\",\n        backgroundGradientFromOpacity: 0,\n        backgroundGradientTo: \"#fff\",\n        backgroundGradientToOpacity: 0,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(1, 122, 205, 1)\";\n        },\n        labelColor: function labelColor() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(0, 0, 0, 1)\";\n        },\n        strokeWidth: 2,\n        barPercentage: 0.5,\n        useShadowColorFromDataset: false,\n        propsForBackgroundLines: {\n          strokeWidth: 1,\n          stroke: '#efefef',\n          strokeDasharray: '0'\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }\n    })));\n  };\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      width: '100%',\n      height: '100%',\n      paddingHorizontal: 20,\n      borderTopRightRadius: 0,\n      borderTopLeftRadius: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      height: 15,\n      paddingBottom: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      flexDirection: 'row',\n      paddingBottom: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    key: Math.random(),\n    style: {\n      flex: 1,\n      backgroundColor: 'white'\n    },\n    onPress: function onPress() {\n      props.hideChannelAttendance();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      fontSize: 15,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, React.createElement(Ionicons, {\n    name: \"chevron-back-outline\",\n    size: 17,\n    color: '#202025',\n    style: {\n      marginRight: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 29\n    }\n  }), \" \", renderAttendanceStatsTabs())), pastMeetings.length === 0 || channelAttendances.length === 0 ? null : React.createElement(Text, {\n    style: {\n      color: \"#a2a2aa\",\n      fontSize: 11,\n      lineHeight: 25,\n      textAlign: \"right\",\n      textTransform: \"uppercase\",\n      marginRight: 20\n    },\n    onPress: function onPress() {\n      setEnableFilter(!enableFilter);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 89\n    }\n  }, !enableFilter ? \"FILTER\" : \"HIDE\"), pastMeetings.length === 0 || channelAttendances.length === 0 || !props.isOwner ? null : React.createElement(Text, {\n    style: {\n      color: \"#a2a2aa\",\n      fontSize: 11,\n      lineHeight: 25,\n      textAlign: \"right\",\n      textTransform: \"uppercase\"\n    },\n    onPress: function onPress() {\n      exportAttendance();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 110\n    }\n  }, \"EXPORT\")), unparsedPastMeetings.length === 0 || channelAttendances.length === 0 ? null : React.createElement(View, {\n    style: {\n      paddingTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 93\n    }\n  }, React.createElement(View, {\n    style: {\n      display: 'flex',\n      width: \"100%\",\n      flexDirection: width < 768 ? \"column\" : \"row\",\n      marginBottom: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, !enableFilter ? null : React.createElement(View, {\n    style: {\n      width: width < 768 ? \"100%\" : \"30%\",\n      flexDirection: \"row\",\n      marginTop: 12,\n      marginLeft: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 61\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 41\n    }\n  }, PreferredLanguageText(\"start\"), \" Date\"), React.createElement(Datetime, {\n    value: start,\n    onChange: function onChange(event) {\n      var date = new Date(event);\n      setStart(date);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 41\n    }\n  })), !enableFilter ? null : React.createElement(View, {\n    style: {\n      width: width < 768 ? \"100%\" : \"30%\",\n      flexDirection: \"row\",\n      marginTop: 12,\n      marginLeft: width < 768 ? 0 : 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 61\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 41\n    }\n  }, PreferredLanguageText(\"end\"), \" Date\"), React.createElement(Datetime, {\n    value: end,\n    onChange: function onChange(event) {\n      var date = new Date(event);\n      setEnd(date);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 41\n    }\n  })))), channelAttendances.length === 0 || pastMeetings.length === 0 ? React.createElement(View, {\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      color: '#a2a2aa',\n      fontSize: 22,\n      paddingTop: 100,\n      paddingHorizontal: 5,\n      fontFamily: 'inter'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 25\n    }\n  }, pastMeetings.length === 0 ? \"No past meetings\" : \"No Students\")) : !showAttendanceStats ? React.createElement(View, {\n    style: {\n      width: '100%',\n      backgroundColor: 'white',\n      flex: 1,\n      flexDirection: 'row'\n    },\n    key: JSON.stringify(channelAttendances),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 45\n    }\n  }, React.createElement(ScrollView, {\n    showsHorizontalScrollIndicator: true,\n    horizontal: true,\n    contentContainerStyle: {\n      height: '100%'\n    },\n    nestedScrollEnabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 25\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    horizontal: false,\n    contentContainerStyle: {\n      height: '100%'\n    },\n    nestedScrollEnabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 29\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: styles.row,\n    key: \"-\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: styles.col,\n    key: '0,0',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 41\n    }\n  }), React.createElement(View, {\n    style: styles.col,\n    key: '0,0',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 13,\n      color: '#202025',\n      fontFamily: 'inter'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 45\n    }\n  }, \"Total\")), pastMeetings.map(function (meeting, col) {\n    var title = meeting.title,\n        start = meeting.start;\n    return React.createElement(View, {\n      style: styles.col,\n      key: col.toString(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 56\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'center',\n        fontSize: 13,\n        color: '#202025',\n        fontFamily: 'inter'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 53\n      }\n    }, title), React.createElement(Text, {\n      style: {\n        textAlign: 'center',\n        fontSize: 12,\n        color: '#202025'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 53\n      }\n    }, moment(new Date(start)).format('MMMM Do YYYY, h:mm a')));\n  })), channelAttendances.map(function (channelAttendance, row) {\n    var studentCount = attendanceTotalMap[channelAttendance.userId];\n    return React.createElement(View, {\n      style: styles.row,\n      key: row,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 52\n      }\n    }, React.createElement(View, {\n      style: styles.col,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 49\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'left',\n        fontSize: 13,\n        color: '#202025',\n        fontFamily: 'inter'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 53\n      }\n    }, channelAttendance.fullName)), React.createElement(View, {\n      style: styles.col,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 49\n      }\n    }, React.createElement(Text, {\n      style: {\n        textAlign: 'left',\n        fontSize: 13,\n        color: '#202025',\n        fontFamily: 'inter'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 53\n      }\n    }, studentCount, \" / \", pastMeetings.length)), pastMeetings.map(function (meeting, col) {\n      var attendanceObject = channelAttendance.attendances.find(function (s) {\n        return s.dateId.toString().trim() === meeting.dateId.toString().trim();\n      });\n      return React.createElement(View, {\n        style: styles.col,\n        key: row.toString() + '-' + col.toString(),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 64\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 12,\n          color: '#a2a2aa'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 61\n        }\n      }, attendanceObject ? \"Present\" : '-'), attendanceObject ? React.createElement(Text, {\n        style: {\n          textAlign: 'left',\n          fontSize: 12,\n          color: '#202025'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 81\n        }\n      }, PreferredLanguageText('joinedAt') + ' ' + moment(new Date(attendanceObject.joinedAt)).format('h:mm a')) : null);\n    }));\n  }))))) : renderAttendanceChart());\n};\n\nexport default AttendanceList;\nvar styles = StyleSheet.create({\n  row: {\n    height: 70,\n    borderRadius: 15,\n    marginBottom: 15,\n    flexDirection: 'row',\n    overflow: 'hidden',\n    backgroundColor: '#f4f4f6'\n  },\n  col: {\n    width: 100,\n    justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#f4f4f6',\n    padding: 5\n  },\n  text: {\n    fontSize: 12,\n    color: \"#a2a2aa\",\n    textAlign: \"left\",\n    paddingHorizontal: 10\n  },\n  allGrayFill: {\n    fontSize: 12,\n    color: \"#fff\",\n    paddingHorizontal: 10,\n    borderRadius: 10,\n    backgroundColor: \"#a2a2aa\",\n    lineHeight: 20\n  },\n  allGrayOutline: {\n    fontSize: 12,\n    color: \"#a2a2aa\",\n    height: 22,\n    paddingHorizontal: 10,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: \"#a2a2aa\",\n    lineHeight: 20\n  },\n  all: {\n    fontSize: 12,\n    color: \"#a2a2aa\",\n    height: 22,\n    paddingHorizontal: 10,\n    backgroundColor: \"white\",\n    lineHeight: 20\n  }\n});","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/AttendanceList.tsx"],"names":["React","useState","useEffect","Ionicons","View","Text","moment","PreferredLanguageText","Datetime","XLSX","LineChart","FileSaver","AttendanceList","props","unparsedPastMeetings","JSON","parse","stringify","pastMeetings","unparsedChannelAttendances","channelAttendances","setPastMeetings","setChannelAttendances","enableFilter","setEnableFilter","Date","end","setEnd","getTime","start","setStart","attendanceTotalMap","setAttendanceTotalMap","showAttendanceStats","setShowAttendanceStats","exportAoa","setExportAoa","length","studentTotalMap","forEach","att","count","meeting","attendanceObject","attendances","find","s","dateId","toString","trim","userId","row1","push","format","userRow","fullName","joinedAt","filteredPastMeetings","filter","exportAttendance","fileType","fileExtension","ws","utils","aoa_to_sheet","wb","book_new","book_append_sheet","excelBuffer","write","bookType","type","data","Blob","saveAs","width","Dimensions","get","renderAttendanceStatsTabs","flexDirection","justifyContent","styles","allGrayFill","all","renderAttendanceChart","studentCount","meetingLabels","attendanceCounts","map","title","console","log","filteredDateId","x","percentage","labels","datasets","color","opacity","strokeWidth","backgroundColor","flex","height","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","labelColor","barPercentage","useShadowColorFromDataset","propsForBackgroundLines","stroke","strokeDasharray","paddingHorizontal","borderTopRightRadius","borderTopLeftRadius","textAlign","paddingBottom","Math","random","hideChannelAttendance","fontSize","marginRight","lineHeight","textTransform","isOwner","paddingTop","display","marginBottom","marginTop","marginLeft","text","event","date","fontFamily","row","col","channelAttendance","StyleSheet","create","borderRadius","overflow","padding","allGrayOutline","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, ScrollView, Switch, TouchableOpacity, Dimensions } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { View, Text } from './Themed';\r\nimport _ from 'lodash'\r\nimport moment from 'moment'\r\nimport { PreferredLanguageText } from '../helpers/LanguageContext';\r\nimport Datetime from \"react-datetime\";\r\nimport XLSX from \"xlsx\";\r\nimport {\r\n    LineChart,\r\n  } from \"react-native-chart-kit\";\r\nimport * as FileSaver from 'file-saver';\r\n\r\n\r\nconst AttendanceList: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const unparsedPastMeetings: any[] = JSON.parse(JSON.stringify(props.pastMeetings))\r\n    const unparsedChannelAttendances: any[] = JSON.parse(JSON.stringify(props.channelAttendances))\r\n    const [pastMeetings, setPastMeetings] = useState<any[]>(unparsedPastMeetings)\r\n    const [channelAttendances, setChannelAttendances] = useState<any[]>(unparsedChannelAttendances)   \r\n    \r\n    const [enableFilter, setEnableFilter] = useState(false);\r\n    const [end, setEnd] = useState(new Date());\r\n    const [start, setStart] = useState(new Date(end.getTime() - (2630000 * 60 * 10)));\r\n    \r\n    const [attendanceTotalMap, setAttendanceTotalMap] = useState<any>({});\r\n\r\n    const [showAttendanceStats, setShowAttendanceStats] = useState(false);\r\n\r\n    const [exportAoa, setExportAoa] = useState<any[]>()\r\n\r\n    useEffect(() => {\r\n\r\n        if (channelAttendances.length === 0 || pastMeetings.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Calculate total for each student and add it to the end\r\n        const studentTotalMap: any = {};\r\n\r\n        channelAttendances.forEach(att => {\r\n\r\n            let count = 0\r\n            pastMeetings.forEach(meeting => {\r\n\r\n                const attendanceObject = att.attendances.find((s: any) => {\r\n                    return s.dateId.toString().trim() === meeting.dateId.toString().trim()\r\n                })\r\n\r\n                if (attendanceObject) count++;\r\n\r\n            })\r\n\r\n            studentTotalMap[att.userId] = count; \r\n        \r\n        })\r\n\r\n        // console.log(studentTotalMap)\r\n        setAttendanceTotalMap(studentTotalMap)\r\n        \r\n        const exportAoa = [];\r\n\r\n        // Add row 1 with past meetings and total\r\n        let row1 = [\"\"];\r\n\r\n        pastMeetings.forEach(meeting => {\r\n            row1.push(moment(new Date(meeting.start)).format('MMMM Do YYYY, h:mm a'))\r\n        })\r\n\r\n        row1.push(\"Total\")\r\n\r\n        exportAoa.push(row1);\r\n\r\n        channelAttendances.forEach(att => {\r\n\r\n            let userRow = [];\r\n\r\n            userRow.push(att.fullName)\r\n\r\n            pastMeetings.forEach(meeting => {\r\n\r\n                const attendanceObject = att.attendances.find((s: any) => {\r\n                    return s.dateId.toString().trim() === meeting.dateId.toString().trim()\r\n                })\r\n\r\n                if (attendanceObject) {\r\n                    userRow.push(`Joined at ${moment(new Date(attendanceObject.joinedAt)).format('MMMM Do YYYY, h:mm a')}`)\r\n                } else {\r\n                    userRow.push('-')\r\n                }\r\n\r\n            })\r\n\r\n            userRow.push(`${studentTotalMap[att.userId]} / ${pastMeetings.length}`)\r\n\r\n            exportAoa.push(userRow)\r\n        \r\n        })\r\n\r\n        setExportAoa(exportAoa)\r\n\r\n       \r\n    }, [channelAttendances, pastMeetings])\r\n\r\n    // Update past meetings to consider\r\n    useEffect(() => {\r\n        if (enableFilter) {\r\n\r\n            const filteredPastMeetings = unparsedPastMeetings.filter(meeting => {\r\n                return (new Date(meeting.start) > start && new Date(meeting.end) < end) \r\n            })\r\n\r\n            setPastMeetings(filteredPastMeetings);\r\n            \r\n        } else {\r\n\r\n            setPastMeetings(unparsedPastMeetings)\r\n        }\r\n\r\n    }, [enableFilter, start, end])\r\n\r\n    const exportAttendance = () => {\r\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n        const fileExtension = '.xlsx';\r\n\r\n        const ws = XLSX.utils.aoa_to_sheet(exportAoa);\r\n\t\tconst wb = XLSX.utils.book_new();\r\n\t\tXLSX.utils.book_append_sheet(wb, ws, \"Attendance \");\r\n\t\t/* generate XLSX file and send to client */\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' })\r\n        const data = new Blob([excelBuffer], {type: fileType});\r\n        FileSaver.saveAs(data, \"attendances\" + fileExtension);\r\n    }\r\n\r\n    const width = Dimensions.get(\"window\").width;\r\n\r\n    const renderAttendanceStatsTabs = () => {\r\n        return (<View style={{ flexDirection: \"row\" }}>\r\n            <TouchableOpacity\r\n                style={{\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"column\"\r\n                }}\r\n                onPress={() => {\r\n                    setShowAttendanceStats(false);\r\n                }}>\r\n                <Text style={!showAttendanceStats ? styles.allGrayFill : styles.all}>\r\n                    Students\r\n                </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                style={{\r\n                    justifyContent: \"center\",\r\n                    flexDirection: \"column\"\r\n                }}\r\n                onPress={() => {\r\n                    setShowAttendanceStats(true);\r\n                }}>\r\n                <Text style={showAttendanceStats ? styles.allGrayFill : styles.all}>Lectures</Text>\r\n            </TouchableOpacity>\r\n    </View>)\r\n    }\r\n\r\n    const renderAttendanceChart = () => {\r\n\r\n        const studentCount = channelAttendances.length;\r\n\r\n        const meetingLabels: any[] = [];\r\n\r\n        const attendanceCounts:any[] = [];\r\n\r\n        pastMeetings.map((meeting: any) => {\r\n\r\n            const { title, start, dateId } = meeting\r\n            console.log(meeting);\r\n\r\n            meetingLabels.push(`${moment(new Date(start)).format('MMMM Do YYYY, h:mm a')}`)\r\n\r\n            let count = 0;\r\n\r\n            // Total count map\r\n            channelAttendances.forEach((att: any) => {\r\n                const filteredDateId = att.attendances.filter((x: any) => x.dateId === dateId)\r\n                if (filteredDateId.length > 0) count++;\r\n            })\r\n\r\n            let percentage = (count/studentCount) * 100\r\n\r\n            attendanceCounts.push(percentage)\r\n            \r\n        })\r\n\r\n        const data = {\r\n            labels: meetingLabels,\r\n            datasets: [\r\n              {\r\n                data: attendanceCounts,\r\n                color: (opacity = 1) => `rgba(134, 65, 244, ${opacity})`, // optional\r\n                strokeWidth: 2 // optional\r\n              }\r\n            ],\r\n            // legend: [\"Rainy Days\"] // optional\r\n          };\r\n\r\n\r\n\r\n        return (<View style={{\r\n            width: '100%',\r\n            backgroundColor: 'white',\r\n            flex: 1\r\n        }}\r\n            key={JSON.stringify(pastMeetings)}\r\n        >\r\n            {/* <Text style={{ textAlign: 'left', fontSize: 13, color: '#202025', fontFamily: 'inter', paddingBottom: 20 }}>\r\n                        Attendance By Lectures\r\n            </Text> */}\r\n            <ScrollView\r\n                            showsHorizontalScrollIndicator={false}\r\n                            horizontal={true}\r\n                            contentContainerStyle={{\r\n                                height: '100%'\r\n                            }}\r\n                            nestedScrollEnabled={true}\r\n                        >\r\n                    <LineChart \r\n                        data={data}\r\n                        width={width - 100}\r\n                        height={500}\r\n                        // chartConfig={chartConfig}\r\n                        // xAxisLabel=\"Lectures\"\r\n                        chartConfig={{\r\n                            backgroundGradientFrom: \"#fff\",\r\n                            backgroundGradientFromOpacity: 0,\r\n                            backgroundGradientTo: \"#fff\",\r\n                            backgroundGradientToOpacity: 0,\r\n                            color: (opacity = 1) => `rgba(1, 122, 205, 1)`,\r\n                            labelColor: (opacity = 1) => `rgba(0, 0, 0, 1)`,\r\n                            strokeWidth: 2, // optional, default 3\r\n                            barPercentage: 0.5,\r\n                            useShadowColorFromDataset: false, // optional\r\n                            propsForBackgroundLines: {\r\n                                strokeWidth: 1,\r\n                                stroke: '#efefef',\r\n                                strokeDasharray: '0',\r\n                              },\r\n                          }}\r\n                    />\r\n                </ScrollView>\r\n        </View>)\r\n    }\r\n\r\n\r\n    return (\r\n        <View style={{\r\n            backgroundColor: 'white',\r\n            width: '100%',\r\n            height: '100%',\r\n            paddingHorizontal: 20,\r\n            borderTopRightRadius: 0,\r\n            borderTopLeftRadius: 0\r\n        }}>\r\n            <Text style={{ width: '100%', textAlign: 'center', height: 15, paddingBottom: 25 }}>\r\n                {/* <Ionicons name='chevron-down' size={20} color={'#e0e0e0'} /> */}\r\n            </Text>\r\n            <View style={{ backgroundColor: 'white', flexDirection: 'row', paddingBottom: 25 }}>\r\n                <TouchableOpacity\r\n                    key={Math.random()}\r\n                    style={{\r\n                        flex: 1,\r\n                        backgroundColor: 'white'\r\n                    }}\r\n                    onPress={() => {\r\n                        props.hideChannelAttendance()                  \r\n                    }}>\r\n                        <Text style={{\r\n                            width: '100%',\r\n                            fontSize: 15,\r\n                            color: '#a2a2aa'\r\n                        }}>\r\n                            <Ionicons name='chevron-back-outline' size={17} color={'#202025'} style={{ marginRight: 10 }} /> {renderAttendanceStatsTabs()}\r\n                        </Text>\r\n                </TouchableOpacity>\r\n                {pastMeetings.length === 0 || channelAttendances.length === 0 ?  null : <Text\r\n                    style={{\r\n                        color: \"#a2a2aa\",\r\n                        fontSize: 11,\r\n                        lineHeight: 25,\r\n                        // paddingTop: 5,\r\n                        textAlign: \"right\",\r\n                        // paddingRight: 20,\r\n                        textTransform: \"uppercase\",\r\n                        marginRight: 20\r\n                    }}\r\n                    onPress={() => {\r\n                        setEnableFilter(!enableFilter)\r\n                    }}>\r\n                    {!enableFilter ? \"FILTER\" : \"HIDE\"}\r\n                </Text>}\r\n                {(pastMeetings.length === 0 || channelAttendances.length === 0 || !props.isOwner)  ?  null : <Text\r\n                    style={{\r\n                        color: \"#a2a2aa\",\r\n                        fontSize: 11,\r\n                        lineHeight: 25,\r\n                        // paddingTop: 5,\r\n                        textAlign: \"right\",\r\n                        // paddingRight: 20,\r\n                        textTransform: \"uppercase\"\r\n                    }}\r\n                    onPress={() => {\r\n                        exportAttendance()\r\n                    }}>\r\n                    EXPORT\r\n                </Text>}\r\n            </View>\r\n            \r\n            {/* Filters */}\r\n\r\n            {unparsedPastMeetings.length === 0 || channelAttendances.length === 0 ?  null : <View style={{ paddingTop: 30 }}>\r\n\r\n            <View style={{ display: 'flex', width: \"100%\", flexDirection: width < 768 ? \"column\" : \"row\", marginBottom: 30, }} >\r\n\r\n\r\n                                    {!enableFilter ? null : <View\r\n                                        style={{\r\n                                            width: width < 768 ? \"100%\" : \"30%\",\r\n                                            flexDirection: \"row\",\r\n                                            marginTop: 12,\r\n                                            marginLeft: 0\r\n                                        }}>\r\n                                        <Text style={styles.text}>{PreferredLanguageText(\"start\")} Date</Text>\r\n                                        <Datetime\r\n                                            value={start}\r\n                                            onChange={(event: any) => {\r\n                                                const date = new Date(event);\r\n                                                setStart(date);\r\n                                            }}\r\n                                        />\r\n                                    </View>}\r\n                                    {!enableFilter ? null : <View\r\n                                        style={{\r\n                                            width: width < 768 ? \"100%\" : \"30%\",\r\n                                            flexDirection: \"row\",\r\n                                            marginTop: 12,\r\n                                            marginLeft: width < 768 ? 0 : 10\r\n                                        }}>\r\n                                        <Text style={styles.text}>{PreferredLanguageText(\"end\")} Date</Text>\r\n                                        <Datetime\r\n                                            value={end}\r\n                                            onChange={(event: any) => {\r\n                                                const date = new Date(event);\r\n                                                setEnd(date);\r\n                                            }}\r\n                                        />\r\n                                    </View>}\r\n                                </View>\r\n\r\n            </View>}\r\n            {\r\n                channelAttendances.length === 0 || pastMeetings.length === 0 ?\r\n                    <View style={{ backgroundColor: 'white' }}>\r\n                        <Text style={{ width: '100%', color: '#a2a2aa', fontSize: 22, paddingTop: 100, paddingHorizontal: 5, fontFamily: 'inter' }}>\r\n                            {\r\n                                pastMeetings.length === 0  ? \"No past meetings\" : \"No Students\"\r\n                                // PreferredLanguageText('noGraded') : PreferredLanguageText('noStudents')\r\n                            }\r\n                        </Text>\r\n                    </View>\r\n                    :\r\n                    (!showAttendanceStats ? <View style={{\r\n                        width: '100%',\r\n                        backgroundColor: 'white',\r\n                        flex: 1,\r\n                        flexDirection: 'row'\r\n                    }}\r\n                        key={JSON.stringify(channelAttendances)}\r\n                    >\r\n                        \r\n                        <ScrollView\r\n                            showsHorizontalScrollIndicator={true}\r\n                            horizontal={true}\r\n                            contentContainerStyle={{\r\n                                height: '100%'\r\n                            }}\r\n                            nestedScrollEnabled={true}\r\n                        >\r\n                            <ScrollView\r\n                                showsVerticalScrollIndicator={false}\r\n                                horizontal={false}\r\n                                contentContainerStyle={{\r\n                                    height: '100%'\r\n                                }}\r\n                                nestedScrollEnabled={true}\r\n                            >\r\n                                <View>\r\n                                    <View style={styles.row} key={\"-\"}>\r\n                                        <View style={styles.col} key={'0,0'} />\r\n                                        <View style={styles.col} key={'0,0'} >\r\n                                            <Text style={{ fontSize: 13, color: '#202025', fontFamily: 'inter' }}>\r\n                                                Total\r\n                                            </Text>\r\n                                        </View>\r\n                                        {\r\n                                            pastMeetings.map((meeting: any, col: number) => {\r\n                                                const { title, start } = meeting\r\n                                                return <View style={styles.col} key={col.toString()}>\r\n                                                    <Text style={{ textAlign: 'center', fontSize: 13, color: '#202025', fontFamily: 'inter' }}>\r\n                                                        {title}\r\n                                                    </Text>\r\n                                                    <Text style={{ textAlign: 'center', fontSize: 12, color: '#202025' }}>\r\n                                                        {moment(new Date(start)).format('MMMM Do YYYY, h:mm a')}\r\n                                                    </Text>\r\n                                                </View>\r\n                                            })\r\n                                        }\r\n                                    </View>\r\n                                    {\r\n                                        channelAttendances.map((channelAttendance: any, row: number) => {\r\n\r\n                                            const studentCount = attendanceTotalMap[channelAttendance.userId];\r\n\r\n                                            return <View style={styles.row} key={row}>\r\n                                                <View style={styles.col} >\r\n                                                    <Text style={{ textAlign: 'left', fontSize: 13, color: '#202025', fontFamily: 'inter' }}>\r\n                                                        {channelAttendance.fullName}\r\n                                                    </Text>\r\n                                                </View>\r\n                                                <View style={styles.col} >\r\n                                                    <Text style={{ textAlign: 'left', fontSize: 13, color: '#202025', fontFamily: 'inter' }}>\r\n                                                        {studentCount} / {pastMeetings.length}\r\n                                                    </Text>\r\n                                                </View>\r\n                                                {\r\n                                                    pastMeetings.map((meeting: any, col: number) => {\r\n                                                        const attendanceObject = channelAttendance.attendances.find((s: any) => {\r\n                                                            return s.dateId.toString().trim() === meeting.dateId.toString().trim()\r\n                                                        })\r\n                                                        return <View style={styles.col} key={row.toString() + '-' + col.toString()}>\r\n                                                            <Text style={{ textAlign: 'center', fontSize: 12, color: '#a2a2aa' }}>\r\n                                                                {\r\n                                                                    attendanceObject ? \"Present\" : '-'\r\n                                                                }\r\n                                                            </Text>\r\n                                                            {attendanceObject ? <Text style={{ textAlign: 'left', fontSize: 12, color: '#202025' }}>\r\n                                                                {PreferredLanguageText('joinedAt') + ' ' + moment(new Date(attendanceObject.joinedAt)).format('h:mm a')}\r\n                                                            </Text> : null}\r\n                                                            \r\n                                                        </View>\r\n                                                    })\r\n                                                }\r\n                                                \r\n                                            </View>\r\n                                        })\r\n                                    }\r\n                                </View>\r\n                            </ScrollView>\r\n                        </ScrollView>\r\n                        {/* {channelAttendances.length === 0 || pastMeetings.length === 0  ? \r\n                            null : \r\n                            (<View \r\n                                style={{ display: 'flex', flexDirection: 'column', paddingLeft: 20 }}\r\n                            >\r\n                                \r\n                                <View style={styles.row} >\r\n                                   <View style={styles.col} >\r\n                                        <Text style={{ textAlign: 'center', fontSize: 12, color: '#202025' }}>\r\n                                            Total\r\n                                        </Text>                    \r\n                                    </View>\r\n                                </View>\r\n                                    {\r\n                                        channelAttendances.map(att => {\r\n                                            const studentCount = attendanceTotalMap[att.userId];\r\n\r\n                                            return (\r\n                                            <View style={styles.row} >\r\n                                                <View style={styles.col} >\r\n                                                    <Text style={{ textAlign: 'center', fontSize: 12, color: '#202025' }}>\r\n                                                        {studentCount} / {pastMeetings.length}\r\n                                                    </Text>                    \r\n                                                </View>\r\n                                            </View>)\r\n                                        })\r\n                                    }\r\n                            </View>)} */}\r\n                    </View> : renderAttendanceChart())\r\n            }\r\n        </View >\r\n    );\r\n}\r\n\r\nexport default AttendanceList\r\n\r\nconst styles = StyleSheet.create({\r\n    row: { height: 70, borderRadius: 15, marginBottom: 15, flexDirection: 'row', overflow: 'hidden', backgroundColor: '#f4f4f6', },\r\n    col: { width: 100, justifyContent: 'center', display: 'flex', flexDirection: 'column', backgroundColor: '#f4f4f6', padding: 5 },\r\n    text: {\r\n        fontSize: 12,\r\n        color: \"#a2a2aa\",\r\n        textAlign: \"left\",\r\n        paddingHorizontal: 10\r\n    },\r\n    allGrayFill: {\r\n        fontSize: 12,\r\n        color: \"#fff\",\r\n        paddingHorizontal: 10,\r\n        borderRadius: 10,\r\n        backgroundColor: \"#a2a2aa\",\r\n        lineHeight: 20\r\n    },\r\n    allGrayOutline: {\r\n        fontSize: 12,\r\n        color: \"#a2a2aa\",\r\n        height: 22,\r\n        paddingHorizontal: 10,\r\n        backgroundColor: \"white\",\r\n        borderRadius: 10,\r\n        borderWidth: 1,\r\n        borderColor: \"#a2a2aa\",\r\n        lineHeight: 20\r\n    },\r\n    all: {\r\n        fontSize: 12,\r\n        color: \"#a2a2aa\",\r\n        height: 22,\r\n        paddingHorizontal: 10,\r\n        backgroundColor: \"white\",\r\n        lineHeight: 20\r\n    },\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}