{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\Channels.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Text, View } from \"./Themed\";\nimport ChannelControls from \"./ChannelControls\";\n\nvar Channels = function Channels(props) {\n  var _useState = useState(new Animated.Value(0)),\n      _useState2 = _slicedToArray(_useState, 1),\n      modalAnimation = _useState2[0];\n\n  useEffect(function () {\n    Animated.timing(modalAnimation, {\n      toValue: 1,\n      duration: 150,\n      useNativeDriver: true\n    }).start();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      width: '100%',\n      backgroundColor: 'white',\n      borderTopRightRadius: 0,\n      borderTopLeftRadius: 0\n    },\n    onTouchMove: function onTouchMove() {\n      return Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: {\n      width: Dimensions.get('window').width < 1024 ? '100%' : '60%',\n      paddingHorizontal: 0,\n      minHeight: '100%',\n      backgroundColor: 'white',\n      opacity: modalAnimation\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      height: 15,\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), React.createElement(ChannelControls, {\n    closeModal: function closeModal() {\n      return props.closeModal();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Channels;","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/Channels.tsx"],"names":["React","useState","useEffect","Text","View","ChannelControls","Channels","props","Animated","Value","modalAnimation","timing","toValue","duration","useNativeDriver","start","width","backgroundColor","borderTopRightRadius","borderTopLeftRadius","Keyboard","dismiss","Dimensions","get","paddingHorizontal","minHeight","opacity","textAlign","height","paddingBottom","closeModal"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,IAAT,EAAeC,IAAf;AAEA,OAAOC,eAAP;;AAEA,IAAMC,QAA2D,GAAG,SAA9DA,QAA8D,CAACC,KAAD,EAAgB;AAAA,kBAEvDN,QAAQ,CAAC,IAAIO,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAF+C;AAAA;AAAA,MAEzEC,cAFyE;;AAIhFR,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,QAAQ,CAACG,MAAT,CAAgBD,cAAhB,EAAgC;AAC5BE,MAAAA,OAAO,EAAE,CADmB;AAE5BC,MAAAA,QAAQ,EAAE,GAFkB;AAG5BC,MAAAA,eAAe,EAAE;AAHW,KAAhC,EAIGC,KAJH;AAKH,GANQ,EAMN,EANM,CAAT;AAQA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTC,MAAAA,KAAK,EAAE,MADE;AAETC,MAAAA,eAAe,EAAE,OAFR;AAGTC,MAAAA,oBAAoB,EAAE,CAHb;AAITC,MAAAA,mBAAmB,EAAE;AAJZ,KAAb;AAMI,IAAA,WAAW,EAAE;AAAA,aAAMC,QAAQ,CAACC,OAAT,EAAN;AAAA,KANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE;AAClBL,MAAAA,KAAK,EAAEM,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBP,KAAzB,GAAiC,IAAjC,GAAwC,MAAxC,GAAiD,KADtC;AAElBQ,MAAAA,iBAAiB,EAAE,CAFD;AAGlBC,MAAAA,SAAS,EAAE,MAHO;AAIlBR,MAAAA,eAAe,EAAE,OAJC;AAKlBS,MAAAA,OAAO,EAAEhB;AALS,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE,MAAT;AAAiBW,MAAAA,SAAS,EAAE,QAA5B;AAAsCC,MAAAA,MAAM,EAAE,EAA9C;AAAkDC,MAAAA,aAAa,EAAE;AAAjE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAYI,oBAAC,eAAD;AACI,IAAA,UAAU,EAAE;AAAA,aAAMtB,KAAK,CAACuB,UAAN,EAAN;AAAA,KADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CARJ,CADJ;AA2BH,CAvCD;;AAyCA,eAAexB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Animated, Keyboard, Dimensions } from 'react-native';\r\nimport { Text, View } from './Themed';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport ChannelControls from './ChannelControls';\r\n\r\nconst Channels: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const [modalAnimation] = useState(new Animated.Value(0))\r\n\r\n    useEffect(() => {\r\n        Animated.timing(modalAnimation, {\r\n            toValue: 1,\r\n            duration: 150,\r\n            useNativeDriver: true\r\n        }).start();\r\n    }, [])\r\n\r\n    return (\r\n        <View style={{\r\n            width: '100%',\r\n            backgroundColor: 'white',\r\n            borderTopRightRadius: 0,\r\n            borderTopLeftRadius: 0,\r\n        }}\r\n            onTouchMove={() => Keyboard.dismiss()}\r\n        >\r\n            <Animated.View style={{\r\n                width: Dimensions.get('window').width < 1024 ? '100%' : '60%',\r\n                paddingHorizontal: 0,\r\n                minHeight: '100%',\r\n                backgroundColor: 'white',\r\n                opacity: modalAnimation,\r\n                // alignSelf: 'center',\r\n                // paddingLeft: 20\r\n            }}>\r\n                <Text style={{ width: '100%', textAlign: 'center', height: 15, paddingBottom: 10 }}>\r\n                    {/* <Ionicons name='chevron-down' size={20} color={'#e0e0e0'} /> */}\r\n                </Text>\r\n                <ChannelControls\r\n                    closeModal={() => props.closeModal()}\r\n                />\r\n            </Animated.View>\r\n        </View >\r\n    );\r\n}\r\n\r\nexport default Channels;"]},"metadata":{},"sourceType":"module"}