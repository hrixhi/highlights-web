{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\CustomTextInput.tsx\";\nimport React, { useState } from \"react\";\nimport DefaultText from \"react-native-web/dist/exports/Text\";\nimport DefaultView from \"react-native-web/dist/exports/View\";\nimport DefaultTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PreferredLanguageText } from \"../helpers/LanguageContext\";\nexport function TextInput(props) {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      errorType = _useState2[0],\n      setErrorType = _useState2[1];\n\n  var requiredErrorText = PreferredLanguageText('required');\n\n  var onValidateValue = function onValidateValue(value) {\n    console.log('props', props.required);\n    console.log('value', value);\n    var errorText = props.errorText,\n        regEx = props.regEx;\n\n    if (props.required && !value) {\n      setErrorType(requiredErrorText);\n      return;\n    }\n\n    if (regEx) {\n      var valid = value ? regEx.test(value) : true;\n\n      if (!valid) {\n        setErrorType(\"Invalid Input\");\n        return;\n      }\n    }\n\n    if (errorText) {\n      setErrorType(errorText);\n      return;\n    }\n\n    setErrorType(\"\");\n    return;\n  };\n\n  var renderErrorMessage = function renderErrorMessage() {\n    return errorType ? React.createElement(DefaultText, {\n      style: styles.errorText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, errorType) : null;\n  };\n\n  var renderFormFooter = function renderFormFooter() {\n    var footerMessage = props.footerMessage;\n    return footerMessage && !errorType ? React.createElement(DefaultText, {\n      style: styles.footer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, footerMessage) : null;\n  };\n\n  return React.createElement(DefaultView, {\n    style: styles.textInputContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, React.createElement(DefaultTextInput, _extends({\n    style: styles.input\n  }, props, {\n    onBlur: function onBlur() {\n      return onValidateValue(props.value || \"\");\n    },\n    multiline: props.hasMultipleLines,\n    numberOfLines: props.hasMultipleLines ? 3 : 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  })), renderFormFooter(), renderErrorMessage());\n}\nvar styles = StyleSheet.create({\n  textInputContainer: {\n    marginTop: 10,\n    marginBottom: 20\n  },\n  input: {\n    width: \"100%\",\n    borderBottomColor: \"#eeeeee\",\n    borderBottomWidth: 1,\n    fontSize: 15,\n    padding: 15,\n    paddingTop: 13,\n    paddingBottom: 13,\n    marginTop: 0,\n    marginBottom: 5\n  },\n  errorText: {\n    fontSize: 10,\n    color: \"red\",\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  },\n  footer: {\n    fontSize: 10,\n    display: \"flex\",\n    justifyContent: \"flex-end\"\n  }\n});","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/CustomTextInput.tsx"],"names":["React","useState","PreferredLanguageText","TextInput","props","errorType","setErrorType","requiredErrorText","onValidateValue","value","console","log","required","errorText","regEx","valid","test","renderErrorMessage","styles","renderFormFooter","footerMessage","footer","textInputContainer","input","hasMultipleLines","StyleSheet","create","marginTop","marginBottom","width","borderBottomColor","borderBottomWidth","fontSize","padding","paddingTop","paddingBottom","color","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Text as DefaultText,\r\n  View as DefaultView,\r\n  TextInput as DefaultTextInput,\r\n  StyleSheet\r\n} from \"react-native\";\r\nimport { PreferredLanguageText } from \"../helpers/LanguageContext\";\r\n\r\ntype FieldTypeProps = {\r\n  hasMultipleLines?: boolean\r\n}\r\n\r\ntype ValidationProps = {\r\n  required?: boolean;\r\n  errorText?: string;\r\n  regEx?: RegExp;\r\n};\r\n\r\ntype FooterProps = {\r\n  footerMessage?: string;\r\n};\r\n\r\nexport type TextInputProps = ValidationProps &\r\n  FooterProps & \r\n  FieldTypeProps &\r\n  DefaultTextInput[\"props\"];\r\n\r\nexport function TextInput(props: TextInputProps) {\r\n  const [errorType, setErrorType] = useState(\"\"); // Error description; Empty String if none;\r\n\r\n  const requiredErrorText = PreferredLanguageText('required')\r\n  const onValidateValue = (value: string) => {\r\n    console.log('props', props.required)\r\n    console.log('value',value)\r\n    const { errorText, regEx } = props;\r\n    if (props.required && !value) {\r\n      setErrorType(requiredErrorText);\r\n      return;\r\n    }\r\n\r\n    if (regEx) {\r\n      const valid: boolean = value ? regEx.test(value) : true;\r\n      if (!valid) {\r\n        setErrorType(\"Invalid Input\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (errorText) {\r\n      setErrorType(errorText);\r\n      return;\r\n    }\r\n\r\n    setErrorType(\"\");\r\n    return;\r\n  };\r\n\r\n  const renderErrorMessage = () => {\r\n    return errorType ? (\r\n      <DefaultText style={styles.errorText}>{errorType}</DefaultText>\r\n    ) : null;\r\n  };\r\n\r\n  const renderFormFooter = () => {\r\n    const { footerMessage } = props;\r\n    return footerMessage && !errorType ? (\r\n      <DefaultText style={styles.footer}>{footerMessage}</DefaultText>\r\n    ) : null;\r\n  };\r\n\r\n  return (\r\n    <DefaultView style={styles.textInputContainer}>\r\n      <DefaultTextInput\r\n        style={styles.input}\r\n        {...props}\r\n        onBlur={() => onValidateValue(props.value || \"\")}\r\n        multiline={props.hasMultipleLines}\r\n        numberOfLines={props.hasMultipleLines ? 3 : 1}\r\n      />\r\n      {renderFormFooter()}\r\n      {renderErrorMessage()}\r\n    </DefaultView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  textInputContainer: {\r\n    marginTop: 10,\r\n    marginBottom: 20\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    borderBottomColor: \"#eeeeee\",\r\n    borderBottomWidth: 1,\r\n    fontSize: 15,\r\n    padding: 15,\r\n    paddingTop: 13,\r\n    paddingBottom: 13,\r\n    marginTop: 0,\r\n    marginBottom: 5\r\n  },\r\n  errorText: {\r\n    fontSize: 10,\r\n    color: \"red\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  footer: {\r\n    fontSize: 10,\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}