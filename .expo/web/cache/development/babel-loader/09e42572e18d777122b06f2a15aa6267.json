{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\UploadFiles.tsx\";\n\nimport React, { useCallback, useState } from 'react';\nimport { Text, View } from \"./Themed\";\nimport axios from 'axios';\nimport { Ionicons } from '@expo/vector-icons';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar mime = require('mime-types');\n\nvar FileUpload = function FileUpload(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      uploading = _useState2[0],\n      setUploading = _useState2[1];\n\n  var onChange = useCallback(function (e) {\n    setUploading(true);\n    e.preventDefault();\n    var file = e.target.files[0];\n\n    if (file === null) {\n      setUploading(false);\n      return;\n    }\n\n    var type = mime.extension(file.type);\n\n    if (type === 'mpga') {\n      type = 'mp3';\n    }\n\n    if (type === 'png' || type === 'jpeg' || type === 'jpg' || type === 'gif') {\n      alert('Error! Images should be directly added to the text editor using the gallery icon in the toolbar.');\n      setUploading(false);\n      return;\n    }\n\n    fileUpload(file, type).then(function (response) {\n      var data = response.data;\n\n      if (data.status === \"success\") {\n        props.onUpload(data.url, type);\n        setUploading(false);\n      } else {\n        setUploading(false);\n      }\n    });\n  }, []);\n  var fileUpload = useCallback(function (file, type) {\n    var url = \"https://api.cuesapp.co/api/upload\";\n    var formData = new FormData();\n    formData.append(\"attachment\", file);\n    formData.append(\"typeOfUpload\", type);\n    var config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    return axios.post(url, formData, config);\n  }, []);\n  return React.createElement(View, {\n    style: {\n      paddingTop: 3.5,\n      paddingBottom: Dimensions.get('window').width < 768 ? 5 : 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  }, uploading ? React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Importing...\") : React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, React.createElement(Ionicons, {\n    name: \"arrow-back\",\n    color: \"#a2a2aa\",\n    size: 17,\n    style: {\n      marginRight: 10\n    },\n    onPress: function onPress() {\n      return props.back();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), React.createElement(\"input\", {\n    type: \"file\",\n    name: \"import\",\n    title: \"Import\",\n    onChange: onChange,\n    style: {\n      backgroundColor: '#fff',\n      fontFamily: 'overpass',\n      fontSize: 12,\n      color: '#a2a2aa',\n      marginRight: 10,\n      width: 170\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/UploadFiles.tsx"],"names":["React","useCallback","useState","Text","View","axios","Ionicons","mime","require","FileUpload","props","uploading","setUploading","onChange","e","preventDefault","file","target","files","type","extension","alert","fileUpload","then","response","data","status","onUpload","url","formData","FormData","append","config","headers","post","paddingTop","paddingBottom","Dimensions","get","width","fontSize","color","display","flexDirection","marginRight","back","backgroundColor","fontFamily"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react'\r\nimport { Text, View } from './Themed'\r\nimport axios from 'axios'\r\nimport { Ionicons } from '@expo/vector-icons'\r\nimport { Dimensions } from 'react-native'\r\n\r\nconst mime = require('mime-types')\r\n\r\nconst FileUpload: React.FC<any> = (props: any) => {\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n    const onChange = useCallback((e) => {\r\n        setUploading(true)\r\n        e.preventDefault();\r\n        const file = e.target.files[0]\r\n        if (file === null) {\r\n            setUploading(false)\r\n            return;\r\n        }\r\n        let type = mime.extension(file.type);\r\n        if (type === 'mpga') {\r\n            type = 'mp3'\r\n        }\r\n        if (type === 'png' || type === 'jpeg' || type === 'jpg' || type === 'gif') {\r\n            alert('Error! Images should be directly added to the text editor using the gallery icon in the toolbar.')\r\n            setUploading(false)\r\n            return\r\n        }\r\n        fileUpload(file, type).then(response => {\r\n            const { data } = response;\r\n            if (data.status === \"success\") {\r\n                props.onUpload(data.url, type);\r\n                setUploading(false)\r\n            } else {\r\n                setUploading(false)\r\n            }\r\n        });\r\n    }, [])\r\n\r\n    const fileUpload = useCallback((file, type) => {\r\n        const url = \"https://api.cuesapp.co/api/upload\";\r\n        const formData = new FormData();\r\n        formData.append(\"attachment\", file);\r\n        formData.append(\"typeOfUpload\", type);\r\n        const config = {\r\n            headers: {\r\n                \"content-type\": \"multipart/form-data\"\r\n            }\r\n        };\r\n        return axios.post(url, formData, config);\r\n    }, [])\r\n\r\n    return <View style={{\r\n        paddingTop: 3.5,\r\n        paddingBottom: Dimensions.get('window').width < 768 ? 5 : 0\r\n    }}>\r\n        {\r\n            uploading ? <Text style={{ fontSize: 12, color: '#a2a2aa' }}>\r\n                Importing...\r\n            </Text> :\r\n                <div style={{\r\n                    display: 'flex', flexDirection: 'row'\r\n                }}>\r\n                    <Ionicons name=\"arrow-back\" color=\"#a2a2aa\" size={17} style={{ marginRight: 10 }} onPress={() => props.back()} />\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"import\"\r\n                        title=\"Import\"\r\n                        onChange={onChange}\r\n                        style={{\r\n                            backgroundColor: '#fff',\r\n                            fontFamily: 'overpass',\r\n                            fontSize: 12,\r\n                            color: '#a2a2aa',\r\n                            marginRight: 10,\r\n                            width: 170\r\n                        }}\r\n                    />\r\n                </div>\r\n        }\r\n    </View >\r\n}\r\n\r\nexport default FileUpload"]},"metadata":{},"sourceType":"module"}