{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\screens\\\\Home.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TextInput } from \"../components/CustomTextInput\";\nimport Alert from \"../components/Alert\";\nimport BottomBar from \"../components/BottomBar\";\nimport CardsList from \"../components/CardsList\";\nimport { Text, TouchableOpacity, View } from \"../components/Themed\";\nimport TopBar from \"../components/TopBar\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Menu from \"../components/Menu\";\nimport Create from \"../components/Create\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Update from \"../components/Update\";\nimport { uniqueNamesGenerator, colors } from 'unique-names-generator';\nimport { defaultCues, defaultRandomShuffleFrequency, defaultSleepInfo } from \"../helpers/DefaultData\";\nimport Walkthrough from \"../components/Walkthrough\";\nimport Channels from \"../components/Channels\";\nimport { fetchAPI } from \"../graphql/FetchAPI\";\nimport { createUser, getSubscriptions, getCues, unsubscribe, saveConfigToCloud, saveCuesToCloud, login, getCuesFromCloud, findUserById, resetPassword, totalUnreadDiscussionThreads, totalUnreadMessages, getMeetingStatus } from \"../graphql/QueriesAndMutations\";\nimport Discussion from \"../components/Discussion\";\nimport Subscribers from \"../components/Subscribers\";\nimport Profile from \"../components/Profile\";\nimport { validateEmail } from \"../helpers/emailCheck\";\nimport Grades from \"../components/Grades\";\nimport Calendar from \"../components/Calendar\";\nimport Meeting from \"../components/Meeting\";\nimport { PreferredLanguageText, LanguageSelect } from \"../helpers/LanguageContext\";\nimport OneSignal, { useOneSignalSetup } from 'react-onesignal';\n\nvar Home = function Home(props) {\n  var window = Dimensions.get(\"window\");\n  var screen = Dimensions.get(\"screen\");\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      init = _useState2[0],\n      setInit = _useState2[1];\n\n  var _useState3 = useState('All'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterChoice = _useState4[0],\n      setFilterChoice = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      customCategories = _useState6[0],\n      setCustomCategories = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      subscriptions = _useState8[0],\n      setSubscriptions = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cues = _useState10[0],\n      setCues = _useState10[1];\n\n  var _useState11 = useState(new Date()),\n      _useState12 = _slicedToArray(_useState11, 2),\n      sleepFrom = _useState12[0],\n      _setSleepFrom = _useState12[1];\n\n  var _useState13 = useState(new Date()),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sleepTo = _useState14[0],\n      _setSleepTo = _useState14[1];\n\n  var _useState15 = useState('1-D'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      randomShuffleFrequency = _useState16[0],\n      _setRandomShuffleFrequency = _useState16[1];\n\n  var _useState17 = useState(true),\n      _useState18 = _slicedToArray(_useState17, 2),\n      reLoading = _useState18[0],\n      setReLoading = _useState18[1];\n\n  var _useState19 = useState(new Animated.Value(0)),\n      _useState20 = _slicedToArray(_useState19, 1),\n      fadeAnimation = _useState20[0];\n\n  var sheetRef = useRef(null);\n\n  var _useState21 = useState(0),\n      _useState22 = _slicedToArray(_useState21, 2),\n      updateModalIndex = _useState22[0],\n      setUpdateModalIndex = _useState22[1];\n\n  var _useState23 = useState('local'),\n      _useState24 = _slicedToArray(_useState23, 2),\n      updateModalKey = _useState24[0],\n      setUpdateModalKey = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      modalType = _useState26[0],\n      setModalType = _useState26[1];\n\n  var _useState27 = useState(0),\n      _useState28 = _slicedToArray(_useState27, 2),\n      pageNumber = _useState28[0],\n      setPageNumber = _useState28[1];\n\n  var _useState29 = useState(''),\n      _useState30 = _slicedToArray(_useState29, 2),\n      channelId = _useState30[0],\n      _setChannelId = _useState30[1];\n\n  var _useState31 = useState(''),\n      _useState32 = _slicedToArray(_useState31, 2),\n      cueId = _useState32[0],\n      setCueId = _useState32[1];\n\n  var _useState33 = useState(''),\n      _useState34 = _slicedToArray(_useState33, 2),\n      createdBy = _useState34[0],\n      setCreatedBy = _useState34[1];\n\n  var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      channelCreatedBy = _useState36[0],\n      _setChannelCreatedBy = _useState36[1];\n\n  var _useState37 = useState('All'),\n      _useState38 = _slicedToArray(_useState37, 2),\n      channelFilterChoice = _useState38[0],\n      _setChannelFilterChoice = _useState38[1];\n\n  var _useState39 = useState(false),\n      _useState40 = _slicedToArray(_useState39, 2),\n      showLoginWindow = _useState40[0],\n      setShowLoginWindow = _useState40[1];\n\n  var _useState41 = useState(''),\n      _useState42 = _slicedToArray(_useState41, 2),\n      email = _useState42[0],\n      setEmail = _useState42[1];\n\n  var _useState43 = useState(''),\n      _useState44 = _slicedToArray(_useState43, 2),\n      password = _useState44[0],\n      setPassword = _useState44[1];\n\n  var _useState45 = useState(Math.random()),\n      _useState46 = _slicedToArray(_useState45, 2),\n      reopenUpdateWindow = _useState46[0],\n      setReopenUpdateWindow = _useState46[1];\n\n  var _useState47 = useState(false),\n      _useState48 = _slicedToArray(_useState47, 2),\n      showForgotPassword = _useState48[0],\n      setShowForgotPassword = _useState48[1];\n\n  var _useState49 = useState(true),\n      _useState50 = _slicedToArray(_useState49, 2),\n      isSubmitDisabled = _useState50[0],\n      setIsSubmitDisabled = _useState50[1];\n\n  var _useState51 = useState(false),\n      _useState52 = _slicedToArray(_useState51, 2),\n      saveDataInProgress = _useState52[0],\n      setSaveDataInProgress = _useState52[1];\n\n  var _useState53 = useState({\n    window: window,\n    screen: screen\n  }),\n      _useState54 = _slicedToArray(_useState53, 2),\n      dimensions = _useState54[0],\n      setDimensions = _useState54[1];\n\n  var _useState55 = useState(0),\n      _useState56 = _slicedToArray(_useState55, 2),\n      unreadDiscussionThreads = _useState56[0],\n      setUnreadDiscussionThreads = _useState56[1];\n\n  var _useState57 = useState(0),\n      _useState58 = _slicedToArray(_useState57, 2),\n      unreadMessages = _useState58[0],\n      setUnreadMessages = _useState58[1];\n\n  var _useState59 = useState(false),\n      _useState60 = _slicedToArray(_useState59, 2),\n      meetingOn = _useState60[0],\n      setMeetingOn = _useState60[1];\n\n  var _useState61 = useState(\"\"),\n      _useState62 = _slicedToArray(_useState61, 2),\n      emailValidError = _useState62[0],\n      setEmailValidError = _useState62[1];\n\n  var enterValidEmailError = PreferredLanguageText('enterValidEmail');\n  var alreadyUnsubscribedAlert = PreferredLanguageText('alreadyUnsubscribed');\n  var checkConnectionAlert = PreferredLanguageText('checkConnection');\n  var somethingWentWrongAlert = PreferredLanguageText('somethingWentWrongAlert');\n  var eraseContentLeaveChannelAlert = PreferredLanguageText('eraseContentLeaveChannel');\n  var thisActionWillIrreversiblyAlert = PreferredLanguageText('thisActionWillIrreversibly');\n  var eraseContentAndUnsubscrbeAlert = PreferredLanguageText('eraseContentAndUnsubscrbe');\n  var weHaveEmailedPasswordAlert = PreferredLanguageText('weHaveEmailedPassword');\n  var invalidCredentialsAlert = PreferredLanguageText('invalidCredentials');\n  var unableToRefreshCuesAlert = PreferredLanguageText('unableToRefreshCues');\n  var leaveChannelAlert = PreferredLanguageText('leaveChannel');\n  var areYouSureUnsubscribeAlert = PreferredLanguageText('areYouSureUnsubscribe');\n  var keepContentAndUnsubscribeAlert = PreferredLanguageText('keepContentAndUnsubscribe');\n  useEffect(function () {\n    if (email && !validateEmail(email.toString().toLowerCase())) {\n      setEmailValidError(enterValidEmailError);\n      return;\n    }\n\n    setEmailValidError(\"\");\n  }, [email]);\n  useEffect(function () {\n    if (!showForgotPassword && email && password && !emailValidError) {\n      setIsSubmitDisabled(false);\n      return;\n    }\n\n    if (showForgotPassword && email && !emailValidError) {\n      setIsSubmitDisabled(false);\n      return;\n    }\n\n    setIsSubmitDisabled(true);\n  }, [showForgotPassword, email, password, emailValidError]);\n  var onDimensionsChange = useCallback(function (_ref) {\n    var window = _ref.window,\n        screen = _ref.screen;\n    setDimensions({\n      window: window,\n      screen: screen\n    });\n  }, []);\n  useEffect(function () {\n    Dimensions.addEventListener(\"change\", onDimensionsChange);\n    return function () {\n      Dimensions.removeEventListener(\"change\", onDimensionsChange);\n    };\n  }, []);\n  useEffect(function () {\n    (function _callee() {\n      var u, parsedUser;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n            case 2:\n              u = _context.sent;\n\n              if (u) {\n                parsedUser = JSON.parse(u);\n\n                if (parsedUser.email && parsedUser.email !== '') {} else {\n                  setShowLoginWindow(true);\n                }\n              } else {\n                setShowLoginWindow(true);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  useEffect(function () {\n    if (channelId !== '') {\n      (function _callee2() {\n        var u, user, server;\n        return _regeneratorRuntime.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n              case 2:\n                u = _context2.sent;\n\n                if (u) {\n                  user = JSON.parse(u);\n                  server = fetchAPI('');\n                  server.query({\n                    query: totalUnreadDiscussionThreads,\n                    variables: {\n                      userId: user._id,\n                      channelId: channelId\n                    }\n                  }).then(function (res) {\n                    if (res.data.threadStatus.totalUnreadDiscussionThreads) {\n                      setUnreadDiscussionThreads(res.data.threadStatus.totalUnreadDiscussionThreads);\n                    }\n                  });\n                  server.query({\n                    query: totalUnreadMessages,\n                    variables: {\n                      userId: user._id,\n                      channelId: channelId\n                    }\n                  }).then(function (res) {\n                    if (res.data.messageStatus.totalUnreadMessages) {\n                      setUnreadMessages(res.data.messageStatus.totalUnreadMessages);\n                    }\n                  });\n                  server.query({\n                    query: getMeetingStatus,\n                    variables: {\n                      channelId: channelId\n                    }\n                  }).then(function (res) {\n                    if (res.data && res.data.channel && res.data.channel.getMeetingStatus) {\n                      setMeetingOn(true);\n                    } else {\n                      setMeetingOn(false);\n                    }\n                  }).catch(function (err) {\n                    return console.log(err);\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      })();\n    }\n  }, [channelId, channelCreatedBy, email]);\n\n  var _refreshUnreadDiscussionCount = useCallback(function _callee3() {\n    var u, user;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (!(channelId !== '')) {\n              _context3.next = 5;\n              break;\n            }\n\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 3:\n            u = _context3.sent;\n\n            if (u) {\n              user = JSON.parse(u);\n              updateDiscussionNotidCounts(user._id);\n            }\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [channelId]);\n\n  var _refreshUnreadMessagesCount = useCallback(function _callee4() {\n    var u, user;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (!(channelId !== '')) {\n              _context4.next = 5;\n              break;\n            }\n\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 3:\n            u = _context4.sent;\n\n            if (u) {\n              user = JSON.parse(u);\n              updateMessageNotifCounts(user._id);\n            }\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [channelId]);\n\n  var refreshMeetingStatus = useCallback(function _callee5() {\n    var server;\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (channelId !== '') {\n              server = fetchAPI('');\n              server.query({\n                query: getMeetingStatus,\n                variables: {\n                  channelId: channelId\n                }\n              }).then(function (res) {\n                if (res.data && res.data.channel && res.data.channel.getMeetingStatus) {\n                  setMeetingOn(true);\n                } else {\n                  setMeetingOn(false);\n                }\n              });\n            }\n\n          case 1:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [channelId]);\n  var updateDiscussionNotidCounts = useCallback(function (userId) {\n    var server = fetchAPI('');\n    server.query({\n      query: totalUnreadDiscussionThreads,\n      variables: {\n        userId: userId,\n        channelId: channelId\n      }\n    }).then(function (res) {\n      if (res.data.threadStatus.totalUnreadDiscussionThreads !== undefined && res.data.threadStatus.totalUnreadDiscussionThreads !== null) {\n        setUnreadDiscussionThreads(res.data.threadStatus.totalUnreadDiscussionThreads);\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, [channelId]);\n  var updateMessageNotifCounts = useCallback(function (userId) {\n    var server = fetchAPI('');\n    server.query({\n      query: totalUnreadMessages,\n      variables: {\n        userId: userId,\n        channelId: channelId\n      }\n    }).then(function (res) {\n      if (res.data.messageStatus.totalUnreadMessages !== undefined && res.data.messageStatus.totalUnreadMessages !== null) {\n        setUnreadMessages(res.data.messageStatus.totalUnreadMessages);\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, [channelId]);\n  var storeMenu = useCallback(function _callee6() {\n    return _regeneratorRuntime.async(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('sleepFrom', sleepFrom.toString()));\n\n          case 3:\n            _context6.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('sleepTo', sleepTo.toString()));\n\n          case 5:\n            _context6.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('randomShuffleFrequency', randomShuffleFrequency));\n\n          case 7:\n            _context6.next = 12;\n            break;\n\n          case 9:\n            _context6.prev = 9;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(_context6.t0);\n\n          case 12:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  }, [randomShuffleFrequency, sleepTo, sleepFrom]);\n  var loadNewChannelCues = useCallback(function _callee7() {\n    var user, unparsedCues, allCues, parsedUser, server, res, receivedCues, custom, customC, stringCues, _custom, _customC, _custom2, _allCues, _customC2;\n\n    return _regeneratorRuntime.async(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            user = _context7.sent;\n            _context7.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('cues'));\n\n          case 5:\n            unparsedCues = _context7.sent;\n\n            if (!(user && unparsedCues)) {\n              _context7.next = 37;\n              break;\n            }\n\n            allCues = JSON.parse(unparsedCues);\n            parsedUser = JSON.parse(user);\n            server = fetchAPI(parsedUser._id);\n            _context7.prev = 10;\n            _context7.next = 13;\n            return _regeneratorRuntime.awrap(server.query({\n              query: getCues,\n              variables: {\n                userId: parsedUser._id\n              }\n            }));\n\n          case 13:\n            res = _context7.sent;\n\n            if (!res.data.cue.findByUserId) {\n              _context7.next = 25;\n              break;\n            }\n\n            receivedCues = res.data.cue.findByUserId;\n            receivedCues.map(function (item) {\n              var channelId = item.channelId.toString().trim();\n              var index = -1;\n\n              if (allCues[channelId]) {\n                index = allCues[channelId].findIndex(function (cue) {\n                  return cue._id.toString().trim() === item._id.toString().trim();\n                });\n              }\n\n              if (index === -1) {\n                var cue = {};\n                cue = _objectSpread({}, item);\n                delete cue.__typename;\n\n                if (allCues[cue.channelId]) {\n                  allCues[cue.channelId].push(cue);\n                } else {\n                  allCues[cue.channelId] = [cue];\n                }\n              } else {\n                allCues[item.channelId][index].unreadThreads = item.unreadThreads ? item.unreadThreads : 0;\n                allCues[item.channelId][index].status = item.status;\n\n                if (!allCues[item.channelId][index].original) {\n                  allCues[item.channelId][index].original = item.cue;\n                }\n              }\n            });\n            custom = {};\n            setCues(allCues);\n\n            if (allCues['local']) {\n              allCues['local'].map(function (item) {\n                if (item.customCategory !== \"\") {\n                  if (!custom[item.customCategory]) {\n                    custom[item.customCategory] = 0;\n                  }\n                }\n              });\n              customC = [];\n              Object.keys(custom).map(function (item) {\n                customC.push(item);\n              });\n              customC.sort();\n              setCustomCategories(customC);\n            }\n\n            stringCues = JSON.stringify(allCues);\n            _context7.next = 23;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"cues\", stringCues));\n\n          case 23:\n            Animated.timing(fadeAnimation, {\n              toValue: 1,\n              duration: 150,\n              useNativeDriver: true\n            }).start();\n            setReLoading(false);\n\n          case 25:\n            _context7.next = 35;\n            break;\n\n          case 27:\n            _context7.prev = 27;\n            _context7.t0 = _context7[\"catch\"](10);\n            Alert(unableToRefreshCuesAlert, checkConnectionAlert);\n            _custom = {};\n            setCues(allCues);\n\n            if (allCues['local']) {\n              allCues['local'].map(function (item) {\n                if (item.customCategory !== \"\") {\n                  if (!_custom[item.customCategory]) {\n                    _custom[item.customCategory] = 0;\n                  }\n                }\n              });\n              _customC = [];\n              Object.keys(_custom).map(function (item) {\n                _customC.push(item);\n              });\n\n              _customC.sort();\n\n              setCustomCategories(_customC);\n            }\n\n            Animated.timing(fadeAnimation, {\n              toValue: 1,\n              duration: 150,\n              useNativeDriver: true\n            }).start();\n            setReLoading(false);\n\n          case 35:\n            _context7.next = 38;\n            break;\n\n          case 37:\n            if (unparsedCues) {\n              _custom2 = {};\n              _allCues = JSON.parse(unparsedCues);\n              setCues(_allCues);\n\n              if (_allCues['local']) {\n                _allCues['local'].map(function (item) {\n                  if (item.customCategory !== \"\") {\n                    if (!_custom2[item.customCategory]) {\n                      _custom2[item.customCategory] = 0;\n                    }\n                  }\n                });\n\n                _customC2 = [];\n                Object.keys(_custom2).map(function (item) {\n                  _customC2.push(item);\n                });\n\n                _customC2.sort();\n\n                setCustomCategories(_customC2);\n              }\n\n              Animated.timing(fadeAnimation, {\n                toValue: 1,\n                duration: 150,\n                useNativeDriver: true\n              }).start();\n              setReLoading(false);\n            }\n\n          case 38:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[10, 27]], Promise);\n  }, []);\n  useOneSignalSetup(function _callee8() {\n    var permissions, currentState, externalUserId, user, parsedUser;\n    return _regeneratorRuntime.async(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            permissions = OneSignal.notificationPermission;\n            _context8.next = 3;\n            return _regeneratorRuntime.awrap(OneSignal.getNotificationPermission());\n\n          case 3:\n            currentState = _context8.sent;\n\n            if (!(currentState !== \"granted\")) {\n              _context8.next = 8;\n              break;\n            }\n\n            OneSignal.registerForPushNotifications();\n            _context8.next = 20;\n            break;\n\n          case 8:\n            _context8.next = 10;\n            return _regeneratorRuntime.awrap(OneSignal.getExternalUserId());\n\n          case 10:\n            externalUserId = _context8.sent;\n\n            if (externalUserId) {\n              _context8.next = 20;\n              break;\n            }\n\n            _context8.next = 14;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 14:\n            user = _context8.sent;\n\n            if (!user) {\n              _context8.next = 20;\n              break;\n            }\n\n            parsedUser = JSON.parse(user);\n\n            if (!parsedUser.email) {\n              _context8.next = 20;\n              break;\n            }\n\n            _context8.next = 20;\n            return _regeneratorRuntime.awrap(OneSignal.setExternalUserId(parsedUser._id));\n\n          case 20:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n  var unsubscribeChannel = useCallback(function () {\n    Alert(leaveChannelAlert, areYouSureUnsubscribeAlert + filterChoice + \"?\", [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }, {\n      text: keepContentAndUnsubscribeAlert,\n      onPress: function onPress() {\n        var user, parsedUser, server;\n        return _regeneratorRuntime.async(function onPress$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n              case 2:\n                user = _context9.sent;\n\n                if (user) {\n                  parsedUser = JSON.parse(user);\n                  server = fetchAPI('');\n                  server.mutate({\n                    mutation: unsubscribe,\n                    variables: {\n                      userId: parsedUser._id,\n                      channelId: channelId,\n                      keepContent: true\n                    }\n                  }).then(function (res) {\n                    if (res.data.subscription && res.data.subscription.unsubscribe) {\n                      _setChannelId('');\n\n                      setFilterChoice('All');\n\n                      _closeModal();\n\n                      _loadData();\n                    } else {\n                      Alert(alreadyUnsubscribedAlert);\n                    }\n                  }).catch(function (err) {\n                    Alert(somethingWentWrongAlert, checkConnectionAlert);\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }]);\n  }, [channelId, filterChoice]);\n\n  var _deleteChannel = useCallback(function () {\n    Alert(eraseContentLeaveChannelAlert, thisActionWillIrreversiblyAlert + filterChoice + \".\", [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }, {\n      text: eraseContentAndUnsubscrbeAlert,\n      onPress: function onPress() {\n        var user, parsedUser, server;\n        return _regeneratorRuntime.async(function onPress$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.next = 2;\n                return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n              case 2:\n                user = _context11.sent;\n\n                if (user) {\n                  parsedUser = JSON.parse(user);\n                  server = fetchAPI('');\n                  server.mutate({\n                    mutation: unsubscribe,\n                    variables: {\n                      userId: parsedUser._id,\n                      channelId: channelId,\n                      keepContent: false\n                    }\n                  }).then(function _callee9(res) {\n                    var subCues, value, stringifiedCues;\n                    return _regeneratorRuntime.async(function _callee9$(_context10) {\n                      while (1) {\n                        switch (_context10.prev = _context10.next) {\n                          case 0:\n                            if (!(res.data.subscription && res.data.subscription.unsubscribe)) {\n                              _context10.next = 23;\n                              break;\n                            }\n\n                            subCues = {};\n                            _context10.prev = 2;\n                            _context10.next = 5;\n                            return _regeneratorRuntime.awrap(AsyncStorage.getItem('cues'));\n\n                          case 5:\n                            value = _context10.sent;\n\n                            if (!value) {\n                              _context10.next = 12;\n                              break;\n                            }\n\n                            subCues = JSON.parse(value);\n\n                            if (subCues[channelId]) {\n                              delete subCues[channelId];\n                            }\n\n                            stringifiedCues = JSON.stringify(subCues);\n                            _context10.next = 12;\n                            return _regeneratorRuntime.awrap(AsyncStorage.setItem('cues', stringifiedCues));\n\n                          case 12:\n                            _context10.next = 17;\n                            break;\n\n                          case 14:\n                            _context10.prev = 14;\n                            _context10.t0 = _context10[\"catch\"](2);\n                            return _context10.abrupt(\"return\");\n\n                          case 17:\n                            _setChannelId('');\n\n                            setFilterChoice('All');\n\n                            _closeModal();\n\n                            _loadData();\n\n                            _context10.next = 24;\n                            break;\n\n                          case 23:\n                            Alert(alreadyUnsubscribedAlert);\n\n                          case 24:\n                          case \"end\":\n                            return _context10.stop();\n                        }\n                      }\n                    }, null, null, [[2, 14]], Promise);\n                  }).catch(function (err) {\n                    Alert(somethingWentWrongAlert, checkConnectionAlert);\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }]);\n  }, [channelId, filterChoice]);\n\n  var _loadData = useCallback(function _callee12(saveData) {\n    var version, server, fO, u, f, sF, sT, sC, sub, fullName, displayName, notificationId, SF, SFString, ST, STString, parsedSubscriptions, parsedUser, stringSub, custom, allCues, stringSC, customC, _parsedUser;\n\n    return _regeneratorRuntime.async(function _callee12$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            setReLoading(true);\n            _context14.prev = 1;\n            version = 'v0.9';\n            server = fetchAPI('');\n            _context14.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(version));\n\n          case 6:\n            fO = _context14.sent;\n\n            if (!(fO === undefined || fO === null)) {\n              _context14.next = 17;\n              break;\n            }\n\n            _context14.prev = 8;\n            _context14.next = 11;\n            return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n          case 11:\n            _context14.next = 13;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(version, 'SET'));\n\n          case 13:\n            _context14.next = 17;\n            break;\n\n          case 15:\n            _context14.prev = 15;\n            _context14.t0 = _context14[\"catch\"](8);\n\n          case 17:\n            _context14.next = 19;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 19:\n            u = _context14.sent;\n            _context14.next = 22;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('randomShuffleFrequency'));\n\n          case 22:\n            f = _context14.sent;\n            _context14.next = 25;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('sleepFrom'));\n\n          case 25:\n            sF = _context14.sent;\n            _context14.next = 28;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('sleepTo'));\n\n          case 28:\n            sT = _context14.sent;\n            _context14.next = 31;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('cues'));\n\n          case 31:\n            sC = _context14.sent;\n            _context14.next = 34;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('subscriptions'));\n\n          case 34:\n            sub = _context14.sent;\n\n            if (!u) {\n              fullName = uniqueNamesGenerator({\n                dictionaries: [colors]\n              }) + Math.floor(Math.random() * (999 - 100 + 1) + 100).toString();\n              displayName = fullName;\n              notificationId = 'NOT_SET';\n              server.mutate({\n                mutation: createUser,\n                variables: {\n                  fullName: fullName,\n                  displayName: displayName,\n                  notificationId: notificationId\n                }\n              }).then(function _callee10(res) {\n                var u, sU;\n                return _regeneratorRuntime.async(function _callee10$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        u = res.data.user.create;\n\n                        if (u.__typename) {\n                          delete u.__typename;\n                        }\n\n                        sU = JSON.stringify(u);\n                        _context12.next = 5;\n                        return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', sU));\n\n                      case 5:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (err) {});\n            }\n\n            if (!f) {\n              _context14.next = 40;\n              break;\n            }\n\n            _setRandomShuffleFrequency(f);\n\n            _context14.next = 43;\n            break;\n\n          case 40:\n            _setRandomShuffleFrequency(defaultRandomShuffleFrequency);\n\n            _context14.next = 43;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('randomShuffleFrequency', defaultRandomShuffleFrequency));\n\n          case 43:\n            if (!sF) {\n              _context14.next = 47;\n              break;\n            }\n\n            _setSleepFrom(new Date(sF));\n\n            _context14.next = 52;\n            break;\n\n          case 47:\n            SF = defaultSleepInfo().from;\n\n            _setSleepFrom(SF);\n\n            SFString = SF.toString();\n            _context14.next = 52;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('sleepFrom', SFString));\n\n          case 52:\n            if (!sT) {\n              _context14.next = 56;\n              break;\n            }\n\n            _setSleepTo(new Date(sT));\n\n            _context14.next = 61;\n            break;\n\n          case 56:\n            ST = defaultSleepInfo().to;\n\n            _setSleepTo(ST);\n\n            STString = ST.toString();\n            _context14.next = 61;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('sleepTo', STString));\n\n          case 61:\n            if (!sub) {\n              _context14.next = 66;\n              break;\n            }\n\n            parsedSubscriptions = JSON.parse(sub);\n\n            if (u) {\n              parsedUser = JSON.parse(u);\n              server.query({\n                query: getSubscriptions,\n                variables: {\n                  userId: parsedUser._id\n                }\n              }).then(function _callee11(res) {\n                var stringSub;\n                return _regeneratorRuntime.async(function _callee11$(_context13) {\n                  while (1) {\n                    switch (_context13.prev = _context13.next) {\n                      case 0:\n                        if (!res.data.subscription.findByUserId) {\n                          _context13.next = 7;\n                          break;\n                        }\n\n                        setSubscriptions(res.data.subscription.findByUserId);\n                        stringSub = JSON.stringify(res.data.subscription.findByUserId);\n                        _context13.next = 5;\n                        return _regeneratorRuntime.awrap(AsyncStorage.setItem('subscriptions', stringSub));\n\n                      case 5:\n                        _context13.next = 8;\n                        break;\n\n                      case 7:\n                        setSubscriptions(parsedSubscriptions);\n\n                      case 8:\n                      case \"end\":\n                        return _context13.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (res) {\n                setSubscriptions(parsedSubscriptions);\n              });\n            } else {\n              setSubscriptions(parsedSubscriptions);\n            }\n\n            _context14.next = 69;\n            break;\n\n          case 66:\n            stringSub = JSON.stringify(subscriptions);\n            _context14.next = 69;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('subscriptions', stringSub));\n\n          case 69:\n            if (!sC) {\n              _context14.next = 74;\n              break;\n            }\n\n            _context14.next = 72;\n            return _regeneratorRuntime.awrap(loadNewChannelCues());\n\n          case 72:\n            _context14.next = 87;\n            break;\n\n          case 74:\n            custom = {};\n            allCues = {};\n            allCues['local'] = _toConsumableArray(defaultCues);\n            stringSC = JSON.stringify(allCues);\n            _context14.next = 80;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('cues', stringSC));\n\n          case 80:\n            allCues['local'].map(function (item) {\n              if (item.customCategory !== \"\") {\n                if (!custom[item.customCategory]) {\n                  custom[item.customCategory] = 0;\n                }\n              }\n            });\n            customC = [];\n            Object.keys(custom).map(function (item) {\n              customC.push(item);\n            });\n            customC.sort();\n            setCues(allCues);\n            setCustomCategories(customC);\n            Animated.timing(fadeAnimation, {\n              toValue: 1,\n              duration: 150,\n              useNativeDriver: true\n            }).start();\n\n          case 87:\n            if (!init && dimensions.window.width >= 1024) {\n              openModal('Calendar');\n            }\n\n            if (!u) {\n              _context14.next = 97;\n              break;\n            }\n\n            _parsedUser = JSON.parse(u);\n\n            if (!_parsedUser.email) {\n              _context14.next = 97;\n              break;\n            }\n\n            if (!(init || saveData)) {\n              _context14.next = 96;\n              break;\n            }\n\n            _context14.next = 94;\n            return _regeneratorRuntime.awrap(saveDataInCloud());\n\n          case 94:\n            _context14.next = 97;\n            break;\n\n          case 96:\n            loadDataFromCloud();\n\n          case 97:\n            if (!init) {\n              setInit(true);\n            }\n\n            if (!sC) {\n              setReLoading(false);\n            }\n\n            _context14.next = 104;\n            break;\n\n          case 101:\n            _context14.prev = 101;\n            _context14.t1 = _context14[\"catch\"](1);\n            console.log(_context14.t1);\n\n          case 104:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, null, null, [[1, 101], [8, 15]], Promise);\n  }, [fadeAnimation, init]);\n\n  var handleLogin = useCallback(function () {\n    var server = fetchAPI('');\n    server.query({\n      query: login,\n      variables: {\n        email: email.toLowerCase(),\n        password: password\n      }\n    }).then(function _callee13(r) {\n      var u, userId, sU, error;\n      return _regeneratorRuntime.async(function _callee13$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              if (!(r.data.user.login.user && !r.data.user.login.error)) {\n                _context15.next = 12;\n                break;\n              }\n\n              u = r.data.user.login.user;\n\n              if (u.__typename) {\n                delete u.__typename;\n              }\n\n              userId = u._id;\n              OneSignal.setExternalUserId(userId);\n              sU = JSON.stringify(u);\n              _context15.next = 8;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', sU));\n\n            case 8:\n              setShowLoginWindow(false);\n              loadDataFromCloud();\n              _context15.next = 14;\n              break;\n\n            case 12:\n              error = r.data.user.login.error;\n              Alert(error);\n\n            case 14:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }).catch(function (e) {\n      return console.log(e);\n    });\n  }, [email, password]);\n  var loadDataFromCloud = useCallback(function _callee17() {\n    var u, user, server;\n    return _regeneratorRuntime.async(function _callee17$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _context19.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            u = _context19.sent;\n\n            if (u) {\n              user = JSON.parse(u);\n              server = fetchAPI(user._id);\n              server.query({\n                query: findUserById,\n                variables: {\n                  id: user._id\n                }\n              }).then(function _callee14(res) {\n                var u, sU;\n                return _regeneratorRuntime.async(function _callee14$(_context16) {\n                  while (1) {\n                    switch (_context16.prev = _context16.next) {\n                      case 0:\n                        u = res.data.user.findById;\n\n                        if (!u) {\n                          _context16.next = 12;\n                          break;\n                        }\n\n                        _setRandomShuffleFrequency(u.randomShuffleFrequency);\n\n                        _setSleepFrom(new Date(u.sleepFrom));\n\n                        _setSleepTo(new Date(u.sleepTo));\n\n                        _context16.next = 7;\n                        return _regeneratorRuntime.awrap(AsyncStorage.setItem('cueDraft', u.currentDraft));\n\n                      case 7:\n                        delete u.currentDraft;\n                        delete u.__typename;\n                        sU = JSON.stringify(u);\n                        _context16.next = 12;\n                        return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', sU));\n\n                      case 12:\n                      case \"end\":\n                        return _context16.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (err) {\n                return console.log(err);\n              });\n              server.query({\n                query: getCuesFromCloud,\n                variables: {\n                  userId: user._id\n                }\n              }).then(function _callee15(res) {\n                var allCues, custom, customC, stringCues;\n                return _regeneratorRuntime.async(function _callee15$(_context17) {\n                  while (1) {\n                    switch (_context17.prev = _context17.next) {\n                      case 0:\n                        if (!res.data.cue.getCuesFromCloud) {\n                          _context17.next = 13;\n                          break;\n                        }\n\n                        allCues = {};\n                        res.data.cue.getCuesFromCloud.map(function (cue) {\n                          var channelId = cue.channelId && cue.channelId !== '' ? cue.channelId : \"local\";\n                          delete cue.__typename;\n\n                          if (allCues[channelId]) {\n                            allCues[channelId].push(_objectSpread({}, cue));\n                          } else {\n                            allCues[channelId] = [_objectSpread({}, cue)];\n                          }\n                        });\n                        custom = {};\n\n                        if (allCues[\"local\"]) {\n                          allCues['local'].map(function (item) {\n                            if (item.customCategory !== \"\") {\n                              if (!custom[item.customCategory]) {\n                                custom[item.customCategory] = 0;\n                              }\n                            }\n                          });\n                        } else {\n                          allCues[\"local\"] = [];\n                        }\n\n                        customC = [];\n                        Object.keys(custom).map(function (item) {\n                          customC.push(item);\n                        });\n                        customC.sort();\n                        setCues(allCues);\n                        setCustomCategories(customC);\n                        stringCues = JSON.stringify(allCues);\n                        _context17.next = 13;\n                        return _regeneratorRuntime.awrap(AsyncStorage.setItem('cues', stringCues));\n\n                      case 13:\n                      case \"end\":\n                        return _context17.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (err) {\n                return console.log(err);\n              });\n              server.query({\n                query: getSubscriptions,\n                variables: {\n                  userId: user._id\n                }\n              }).then(function _callee16(res) {\n                var stringSub;\n                return _regeneratorRuntime.async(function _callee16$(_context18) {\n                  while (1) {\n                    switch (_context18.prev = _context18.next) {\n                      case 0:\n                        if (!res.data.subscription.findByUserId) {\n                          _context18.next = 5;\n                          break;\n                        }\n\n                        setSubscriptions(res.data.subscription.findByUserId);\n                        stringSub = JSON.stringify(res.data.subscription.findByUserId);\n                        _context18.next = 5;\n                        return _regeneratorRuntime.awrap(AsyncStorage.setItem('subscriptions', stringSub));\n\n                      case 5:\n                      case \"end\":\n                        return _context18.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (err) {\n                return console.log(err);\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  var saveDataInCloud = useCallback(function _callee19() {\n    var draft, f, sF, sT, u, parsedUser, sC, parsedCues, sub, parsedSubscriptions, allCuesToSave, allCues, server;\n    return _regeneratorRuntime.async(function _callee19$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            if (!saveDataInProgress) {\n              _context21.next = 2;\n              break;\n            }\n\n            return _context21.abrupt(\"return\");\n\n          case 2:\n            setSaveDataInProgress(true);\n            _context21.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('cueDraft'));\n\n          case 5:\n            draft = _context21.sent;\n            _context21.next = 8;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('randomShuffleFrequency'));\n\n          case 8:\n            f = _context21.sent;\n            _context21.next = 11;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('sleepFrom'));\n\n          case 11:\n            sF = _context21.sent;\n            _context21.next = 14;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('sleepTo'));\n\n          case 14:\n            sT = _context21.sent;\n            _context21.next = 17;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 17:\n            u = _context21.sent;\n            parsedUser = JSON.parse(u);\n            _context21.next = 21;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('cues'));\n\n          case 21:\n            sC = _context21.sent;\n            parsedCues = JSON.parse(sC);\n            _context21.next = 25;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('subscriptions'));\n\n          case 25:\n            sub = _context21.sent;\n            parsedSubscriptions = JSON.parse(sub);\n            allCuesToSave = [];\n            allCues = [];\n\n            if (parsedCues !== {}) {\n              Object.keys(parsedCues).map(function (key) {\n                parsedCues[key].map(function (cue) {\n                  var cueInput = _objectSpread(_objectSpread({}, cue), {}, {\n                    _id: cue._id.toString(),\n                    color: cue.color.toString(),\n                    date: new Date(cue.date).toISOString(),\n                    gradeWeight: cue.submission ? cue.gradeWeight.toString() : undefined,\n                    endPlayAt: cue.endPlayAt && cue.endPlayAt !== '' ? new Date(cue.endPlayAt).toISOString() : ''\n                  });\n\n                  allCuesToSave.push(_objectSpread({}, cueInput));\n                  delete cueInput.score;\n                  delete cueInput.graded;\n                  delete cueInput.submittedAt;\n                  delete cueInput.comment;\n                  delete cueInput.unreadThreads;\n                  delete cueInput.status;\n                  delete cueInput.channelName;\n                  delete cueInput.__typename;\n                  allCues.push(cueInput);\n                });\n              });\n            }\n\n            server = fetchAPI('');\n            server.mutate({\n              mutation: saveConfigToCloud,\n              variables: {\n                randomShuffleFrequency: f,\n                sleepFrom: sF,\n                sleepTo: sT,\n                currentDraft: draft ? draft : '',\n                subscriptions: parsedSubscriptions,\n                userId: parsedUser._id\n              }\n            }).then(function (res) {}).catch(function (err) {\n              return console.log(err);\n            });\n            server.mutate({\n              mutation: saveCuesToCloud,\n              variables: {\n                userId: parsedUser._id,\n                cues: allCues\n              }\n            }).then(function _callee18(res) {\n              var newIds, updatedCuesArray, updatedCuesObj, updatedCues;\n              return _regeneratorRuntime.async(function _callee18$(_context20) {\n                while (1) {\n                  switch (_context20.prev = _context20.next) {\n                    case 0:\n                      if (!res.data.cue.saveCuesToCloud) {\n                        _context20.next = 10;\n                        break;\n                      }\n\n                      newIds = res.data.cue.saveCuesToCloud;\n                      updatedCuesArray = [];\n                      allCuesToSave.map(function (c) {\n                        var id = c._id;\n                        var updatedItem = newIds.find(function (i) {\n                          return id.toString().trim() === i.oldId.toString().trim();\n                        });\n\n                        if (updatedItem) {\n                          updatedCuesArray.push(_objectSpread(_objectSpread({}, c), {}, {\n                            _id: updatedItem.newId\n                          }));\n                        } else {\n                          updatedCuesArray.push(c);\n                        }\n                      });\n                      updatedCuesObj = {};\n                      updatedCuesArray.map(function (c) {\n                        if (c.channelId && c.channelId !== '') {\n                          if (updatedCuesObj[c.channelId]) {\n                            updatedCuesObj[c.channelId].push(c);\n                          } else {\n                            updatedCuesObj[c.channelId] = [c];\n                          }\n                        } else {\n                          if (updatedCuesObj[\"local\"]) {\n                            updatedCuesObj[\"local\"].push(c);\n                          } else {\n                            updatedCuesObj[\"local\"] = [c];\n                          }\n                        }\n                      });\n                      updatedCues = JSON.stringify(updatedCuesObj);\n                      _context20.next = 9;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem('cues', updatedCues));\n\n                    case 9:\n                      if (newIds.length !== 0) {\n                        setCues(updatedCuesObj);\n                      }\n\n                    case 10:\n                      setSaveDataInProgress(false);\n\n                    case 11:\n                    case \"end\":\n                      return _context20.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }).catch(function (err) {\n              return console.log(err);\n            });\n\n          case 33:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [cues, setCues]);\n  useEffect(function () {\n    OneSignal.initialize(\"51db5230-f2f3-491a-a5b9-e4fba0f23c76\", {\n      notifyButton: {\n        enable: false\n      },\n      allowLocalhostAsSecureOrigin: true\n    });\n\n    _loadData();\n  }, []);\n\n  var _handleFilterChange = useCallback(function (choice) {\n    setPageNumber(0);\n    fadeAnimation.setValue(0);\n    Animated.timing(fadeAnimation, {\n      toValue: 1,\n      duration: 150,\n      useNativeDriver: true\n    }).start();\n    setFilterChoice(choice);\n  }, [fadeAnimation]);\n\n  var openModal = useCallback(function (type) {\n    setModalType(type);\n  }, [sheetRef, cues]);\n\n  var _openUpdate = useCallback(function (key, index, pageNumber, _id, by, channId) {\n    setUpdateModalKey(key);\n    setUpdateModalIndex(index);\n    setPageNumber(pageNumber);\n\n    _setChannelId(channId);\n\n    setCreatedBy(by);\n    setCueId(_id);\n    openModal('Update');\n  }, []);\n\n  var _reloadCueListAfterUpdate = useCallback(function _callee20() {\n    var unparsedCues, u, allCues, custom, customC, user;\n    return _regeneratorRuntime.async(function _callee20$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            _context22.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('cues'));\n\n          case 2:\n            unparsedCues = _context22.sent;\n            _context22.next = 5;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 5:\n            u = _context22.sent;\n\n            if (unparsedCues) {\n              allCues = JSON.parse(unparsedCues);\n              custom = {};\n              setCues(allCues);\n\n              if (allCues['local']) {\n                allCues['local'].map(function (item) {\n                  if (item.customCategory !== \"\") {\n                    if (!custom[item.customCategory]) {\n                      custom[item.customCategory] = 0;\n                    }\n                  }\n                });\n                customC = [];\n                Object.keys(custom).map(function (item) {\n                  customC.push(item);\n                });\n                customC.sort();\n                setCustomCategories(customC);\n              }\n\n              Animated.timing(fadeAnimation, {\n                toValue: 1,\n                duration: 150,\n                useNativeDriver: true\n              }).start();\n            }\n\n            if (!u) {\n              _context22.next = 12;\n              break;\n            }\n\n            user = JSON.parse(u);\n\n            if (!user.email) {\n              _context22.next = 12;\n              break;\n            }\n\n            _context22.next = 12;\n            return _regeneratorRuntime.awrap(saveDataInCloud());\n\n          case 12:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  var forgotPassword = useCallback(function () {\n    var server = fetchAPI('');\n    server.mutate({\n      mutation: resetPassword,\n      variables: {\n        email: email\n      }\n    }).then(function (res) {\n      if (res.data && res.data.user.resetPassword) {\n        Alert(weHaveEmailedPasswordAlert);\n        setShowForgotPassword(false);\n      } else {\n        Alert(invalidCredentialsAlert);\n      }\n    });\n  }, [email]);\n\n  var _closeModal = useCallback(function () {\n    setCueId('');\n    setModalType('');\n    setCreatedBy('');\n\n    _setChannelFilterChoice('All');\n\n    if (modalType === 'Create' || modalType === 'Update') {\n      fadeAnimation.setValue(0);\n\n      if (modalType === 'Update' && filterChoice === 'All-Channels') {\n        _setChannelId('');\n      }\n    }\n\n    _loadData(true);\n  }, [sheetRef, fadeAnimation, modalType, filterChoice]);\n\n  var modalContent = modalType === 'Menu' ? React.createElement(Menu, {\n    sleepFrom: sleepFrom,\n    sleepTo: sleepTo,\n    randomShuffleFrequency: randomShuffleFrequency,\n    setRandomShuffleFrequency: function setRandomShuffleFrequency(option) {\n      _setRandomShuffleFrequency(option);\n\n      storeMenu();\n    },\n    setSleepFrom: function setSleepFrom(date) {\n      _setSleepFrom(date);\n\n      storeMenu();\n    },\n    setSleepTo: function setSleepTo(date) {\n      _setSleepTo(date);\n\n      storeMenu();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1070,\n      columnNumber: 47\n    }\n  }) : modalType === 'Create' ? React.createElement(Create, {\n    key: JSON.stringify(customCategories),\n    customCategories: customCategories,\n    closeModal: function closeModal() {\n      _closeModal();\n\n      setPageNumber(0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1087,\n      columnNumber: 31\n    }\n  }) : modalType === 'Update' ? React.createElement(Update, {\n    key: cueId.toString(),\n    customCategories: customCategories,\n    cue: cues[updateModalKey][updateModalIndex],\n    cueIndex: updateModalIndex,\n    cueKey: updateModalKey,\n    closeModal: function closeModal() {\n      return _closeModal();\n    },\n    cueId: cueId,\n    createdBy: createdBy,\n    channelId: channelId,\n    filterChoice: filterChoice,\n    channelCreatedBy: channelCreatedBy,\n    reloadCueListAfterUpdate: function reloadCueListAfterUpdate() {\n      return _reloadCueListAfterUpdate();\n    },\n    reopenUpdateWindow: reopenUpdateWindow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1096,\n      columnNumber: 33\n    }\n  }) : modalType === 'Walkthrough' ? React.createElement(Walkthrough, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1112,\n      columnNumber: 40\n    }\n  }) : modalType === 'Channels' ? React.createElement(Channels, {\n    closeModal: function closeModal() {\n      return _closeModal();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 40\n    }\n  }) : modalType === 'Discussion' ? React.createElement(Discussion, {\n    closeModal: function closeModal() {\n      return _closeModal();\n    },\n    channelId: channelId,\n    filterChoice: filterChoice,\n    channelCreatedBy: channelCreatedBy,\n    refreshUnreadDiscussionCount: function refreshUnreadDiscussionCount() {\n      return _refreshUnreadDiscussionCount();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1119,\n      columnNumber: 44\n    }\n  }) : modalType === 'Subscribers' ? React.createElement(Subscribers, {\n    closeModal: function closeModal() {\n      return _closeModal();\n    },\n    channelId: channelId,\n    channelCreatedBy: channelCreatedBy,\n    filterChoice: filterChoice,\n    refreshUnreadMessagesCount: function refreshUnreadMessagesCount() {\n      return _refreshUnreadMessagesCount();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1127,\n      columnNumber: 49\n    }\n  }) : modalType === 'Profile' ? React.createElement(Profile, {\n    closeModal: function closeModal() {\n      return _closeModal();\n    },\n    saveDataInCloud: function _callee21() {\n      return _regeneratorRuntime.async(function _callee21$(_context23) {\n        while (1) {\n          switch (_context23.prev = _context23.next) {\n            case 0:\n              _context23.next = 2;\n              return _regeneratorRuntime.awrap(saveDataInCloud());\n\n            case 2:\n              return _context23.abrupt(\"return\", _context23.sent);\n\n            case 3:\n            case \"end\":\n              return _context23.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    reOpenProfile: function reOpenProfile() {\n      setModalType('');\n      openModal('Profile');\n    },\n    reloadData: function reloadData() {\n      _loadData();\n\n      openModal('Walkthrough');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1135,\n      columnNumber: 49\n    }\n  }) : modalType === 'Grades' ? React.createElement(Grades, {\n    closeModal: function closeModal() {\n      return _closeModal();\n    },\n    channelId: channelId,\n    channelCreatedBy: channelCreatedBy,\n    filterChoice: filterChoice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 52\n    }\n  }) : modalType === 'Calendar' ? React.createElement(Calendar, {\n    cues: cues,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1155,\n      columnNumber: 58\n    }\n  }) : modalType === 'Meeting' ? React.createElement(Meeting, {\n    channelId: channelId,\n    channelName: filterChoice,\n    channelCreatedBy: channelCreatedBy,\n    refreshMeetingStatus: refreshMeetingStatus,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1157,\n      columnNumber: 61\n    }\n  }) : null;\n  var cuesArray = [];\n  var filteredCues = [];\n\n  if (cues !== {}) {\n    Object.keys(cues).map(function (key) {\n      cues[key].map(function (cue, index) {\n        cuesArray.push(_objectSpread(_objectSpread({}, cue), {}, {\n          key: key,\n          index: index\n        }));\n      });\n    });\n  }\n\n  var cuesCopy = cuesArray.sort(function (a, b) {\n    if (a.color < b.color) {\n      return -1;\n    }\n\n    if (a.color > b.color) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  if (filterChoice === 'All') {\n    filteredCues = cuesCopy.filter(function (item) {\n      return !item.channelId || item.channelId === '';\n    });\n  } else if (filterChoice === 'All-Channels') {\n    filteredCues = cuesCopy.filter(function (item) {\n      return item.channelId && item.channeId !== '';\n    });\n  } else if (channelId !== '') {\n    filteredCues = cuesCopy.filter(function (item) {\n      return item.channelName === filterChoice;\n    });\n  } else {\n    filteredCues = cuesCopy.filter(function (item) {\n      return item.customCategory === filterChoice;\n    });\n  }\n\n  if (!init) {\n    return null;\n  }\n\n  var alertText = PreferredLanguageText('savedLocally');\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1223,\n      columnNumber: 5\n    }\n  }, showLoginWindow ? React.createElement(View, {\n    style: {\n      width: '100%',\n      height: dimensions.window.height,\n      flex: 1,\n      position: 'absolute',\n      zIndex: 50,\n      backgroundColor: 'rgba(16,16,16, 0.7)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1225,\n      columnNumber: 27\n    }\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      zIndex: 525,\n      display: 'flex',\n      alignSelf: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'white',\n      width: dimensions.window.width < 768 ? '100%' : 480,\n      height: dimensions.window.width < 768 ? '100%' : 'auto',\n      borderRadius: dimensions.window.width < 768 ? 0 : 20,\n      marginTop: dimensions.window.width < 768 ? 0 : 75,\n      padding: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1234,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      display: 'flex',\n      paddingBottom: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1247,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"../components/default-images/cues-logo-black-exclamation-hidden.jpg\"),\n    style: {\n      width: dimensions.window.height * 0.16 * 0.53456,\n      height: dimensions.window.height * 0.16 * 0.2\n    },\n    resizeMode: 'contain',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1248,\n      columnNumber: 15\n    }\n  })), React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      color: '#a2a2aa',\n      fontFamily: 'overpass',\n      paddingBottom: 25,\n      maxWidth: 500,\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1262,\n      columnNumber: 13\n    }\n  }, showForgotPassword ? PreferredLanguageText('temporaryPassword') : PreferredLanguageText('continueLeftOff')), React.createElement(View, {\n    style: {\n      maxWidth: 500,\n      backgroundColor: 'white',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1267,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#202025',\n      fontSize: 14,\n      paddingBottom: 5,\n      paddingTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1272,\n      columnNumber: 15\n    }\n  }, PreferredLanguageText('email')), React.createElement(TextInput, {\n    value: email,\n    placeholder: '',\n    onChangeText: function onChangeText(val) {\n      return setEmail(val);\n    },\n    placeholderTextColor: '#a2a2aa',\n    errorText: emailValidError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1275,\n      columnNumber: 15\n    }\n  }), showForgotPassword ? null : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1284,\n      columnNumber: 19\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#202025',\n      fontSize: 14,\n      paddingBottom: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1285,\n      columnNumber: 21\n    }\n  }, PreferredLanguageText('password')), React.createElement(TextInput, {\n    secureTextEntry: true,\n    value: password,\n    placeholder: '',\n    onChangeText: function onChangeText(val) {\n      return setPassword(val);\n    },\n    placeholderTextColor: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1288,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      paddingBottom: 10,\n      paddingTop: 40\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1297,\n      columnNumber: 15\n    }\n  }, React.createElement(TouchableOpacity, {\n    disabled: isSubmitDisabled,\n    onPress: function onPress() {\n      if (showForgotPassword) {\n        forgotPassword();\n      } else {\n        handleLogin();\n      }\n    },\n    style: {\n      backgroundColor: 'white',\n      overflow: 'hidden',\n      height: 35,\n      marginTop: 15,\n      width: '100%',\n      justifyContent: 'center',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1306,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      lineHeight: 35,\n      color: 'white',\n      fontSize: 12,\n      backgroundColor: '#3B64F8',\n      paddingHorizontal: 25,\n      fontFamily: 'inter',\n      height: 35,\n      width: 180,\n      borderRadius: 15,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1322,\n      columnNumber: 19\n    }\n  }, showForgotPassword ? PreferredLanguageText('reset') : PreferredLanguageText('login'))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setShowForgotPassword(!showForgotPassword);\n    },\n    style: {\n      backgroundColor: 'white',\n      overflow: 'hidden',\n      height: 35,\n      marginTop: 15,\n      width: '100%',\n      justifyContent: 'center',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1340,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      lineHeight: 35,\n      color: '#202025',\n      fontSize: 12,\n      backgroundColor: '#f4f4f6',\n      paddingHorizontal: 25,\n      fontFamily: 'inter',\n      height: 35,\n      width: 180,\n      borderRadius: 15,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1349,\n      columnNumber: 19\n    }\n  }, showForgotPassword ? PreferredLanguageText('back') : PreferredLanguageText('forgotPassword'))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      setShowLoginWindow(false);\n      Alert(alertText);\n    },\n    style: {\n      backgroundColor: 'white',\n      overflow: 'hidden',\n      height: 35,\n      marginTop: 15,\n      width: '100%',\n      justifyContent: 'center',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1367,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      lineHeight: 35,\n      color: '#202025',\n      fontSize: 12,\n      backgroundColor: '#f4f4f6',\n      paddingHorizontal: 25,\n      fontFamily: 'inter',\n      height: 35,\n      width: 180,\n      borderRadius: 15,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1379,\n      columnNumber: 19\n    }\n  }, PreferredLanguageText('skipForNow'))))), React.createElement(View, {\n    style: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      paddingLeft: 5,\n      paddingBottom: 5,\n      marginTop: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1397,\n      columnNumber: 13\n    }\n  }, React.createElement(LanguageSelect, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1398,\n      columnNumber: 15\n    }\n  })))) : null, React.createElement(View, {\n    style: {\n      width: dimensions.window.width < 1024 ? dimensions.window.width : dimensions.window.width * 0.3,\n      height: dimensions.window.height,\n      flexDirection: 'column',\n      backgroundColor: '#fff',\n      borderRightColor: '#eeeeee',\n      borderRightWidth: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1403,\n      columnNumber: 7\n    }\n  }, React.createElement(TopBar, {\n    key: JSON.stringify(channelFilterChoice) + JSON.stringify(filteredCues) + JSON.stringify(modalType) + JSON.stringify(filterChoice) + JSON.stringify(unreadDiscussionThreads) + JSON.stringify(unreadMessages) + JSON.stringify(meetingOn),\n    openChannels: function openChannels() {\n      return openModal('Channels');\n    },\n    cues: filteredCues,\n    filterChoice: filterChoice,\n    channelId: channelId,\n    channelFilterChoice: channelFilterChoice,\n    channelCreatedBy: channelCreatedBy,\n    loadData: function loadData() {\n      return _loadData();\n    },\n    setChannelFilterChoice: function setChannelFilterChoice(choice) {\n      return _setChannelFilterChoice(choice);\n    },\n    openDiscussion: function openDiscussion() {\n      return openModal('Discussion');\n    },\n    openSubscribers: function openSubscribers() {\n      return openModal('Subscribers');\n    },\n    openGrades: function openGrades() {\n      return openModal('Grades');\n    },\n    unsubscribe: function unsubscribe() {\n      return unsubscribeChannel();\n    },\n    openWalkthrough: function openWalkthrough() {\n      return openModal('Walkthrough');\n    },\n    deleteChannel: function deleteChannel() {\n      return _deleteChannel();\n    },\n    openCalendar: function openCalendar() {\n      return openModal('Calendar');\n    },\n    openMeeting: function openMeeting() {\n      return openModal('Meeting');\n    },\n    unreadDiscussionThreads: unreadDiscussionThreads,\n    unreadMessages: unreadMessages,\n    meetingOn: meetingOn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1411,\n      columnNumber: 9\n    }\n  }), reLoading ? React.createElement(View, {\n    style: [styles.activityContainer, styles.horizontal],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1434,\n      columnNumber: 23\n    }\n  }, React.createElement(ActivityIndicator, {\n    color: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1435,\n      columnNumber: 13\n    }\n  })) : React.createElement(View, {\n    style: [styles.activityContainer, styles.horizontal],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1437,\n      columnNumber: 15\n    }\n  }, React.createElement(CardsList, {\n    pageNumber: pageNumber,\n    fadeAnimation: fadeAnimation,\n    key: JSON.stringify(filterChoice) + JSON.stringify(channelId) + JSON.stringify(filteredCues) + JSON.stringify(channelFilterChoice),\n    cues: filteredCues,\n    channelId: channelId,\n    createdBy: channelCreatedBy,\n    filterChoice: filterChoice,\n    openUpdate: function openUpdate(index, key, pageNumber, _id, by, cId) {\n      return _openUpdate(index, key, pageNumber, _id, by, cId);\n    },\n    channelFilterChoice: channelFilterChoice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1438,\n      columnNumber: 15\n    }\n  })), React.createElement(BottomBar, {\n    openWalkthrough: function openWalkthrough() {\n      return openModal('Walkthrough');\n    },\n    openCalendar: function openCalendar() {\n      return openModal('Calendar');\n    },\n    openCreate: function openCreate() {\n      return openModal('Create');\n    },\n    openChannels: function openChannels() {\n      return openModal('Channels');\n    },\n    openProfile: function openProfile() {\n      return openModal('Profile');\n    },\n    filterChoice: filterChoice,\n    handleFilterChange: function handleFilterChange(choice) {\n      return _handleFilterChange(choice);\n    },\n    key: Math.random(),\n    customCategories: customCategories,\n    subscriptions: subscriptions,\n    setChannelId: function setChannelId(id) {\n      return _setChannelId(id);\n    },\n    setChannelCreatedBy: function setChannelCreatedBy(id) {\n      return _setChannelCreatedBy(id);\n    },\n    setChannelFilterChoice: function setChannelFilterChoice(choice) {\n      return _setChannelFilterChoice(choice);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1451,\n      columnNumber: 9\n    }\n  })), modalType === '' ? React.createElement(View, {\n    style: {\n      width: dimensions.window.width < 1024 ? 0 : dimensions.window.width * 0.7,\n      height: dimensions.window.height,\n      paddingTop: 10,\n      backgroundColor: '#fff',\n      position: dimensions.window.width < 1024 ? 'absolute' : 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1468,\n      columnNumber: 28\n    }\n  }) : React.createElement(View, {\n    style: {\n      width: dimensions.window.width < 1024 ? '100%' : dimensions.window.width * 0.7,\n      height: dimensions.window.height,\n      paddingTop: 0,\n      backgroundColor: '#fff',\n      position: dimensions.window.width < 1024 ? 'absolute' : 'relative'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1479,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white',\n      paddingHorizontal: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1488,\n      columnNumber: 13\n    }\n  }, modalContent), dimensions.window.width < 1024 ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _closeModal();\n    },\n    style: {\n      height: 50,\n      backgroundColor: '#fff',\n      borderTopWidth: 1,\n      borderColor: '#f4f4f6'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1493,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: {\n      flex: 1,\n      textAlign: 'center',\n      fontSize: 15,\n      lineHeight: 15,\n      marginTop: 15,\n      color: '#202025'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1496,\n      columnNumber: 19\n    }\n  }, React.createElement(Ionicons, {\n    name: \"chevron-back-outline\",\n    size: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1497,\n      columnNumber: 21\n    }\n  }), \" Back\")) : React.createElement(View, {\n    style: {\n      backgroundColor: '#f4f4f6',\n      height: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1500,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Home;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  activityContainer: {\n    borderTopWidth: 0,\n    borderBottomWidth: 0,\n    borderColor: '#eeeeee',\n    height: '64%',\n    width: '100%',\n    justifyContent: \"center\"\n  },\n  horizontal: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\"\n  },\n  input: {\n    width: '100%',\n    borderBottomColor: '#f4f4f6',\n    borderBottomWidth: 1,\n    fontSize: 15,\n    padding: 15,\n    paddingTop: 13,\n    paddingBottom: 13,\n    marginTop: 5,\n    marginBottom: 20\n  }\n});","map":{"version":3,"sources":["D:/p_projects/highlights-web/screens/Home.tsx"],"names":["React","useState","useCallback","useRef","useEffect","TextInput","Alert","BottomBar","CardsList","Text","TouchableOpacity","View","TopBar","Ionicons","Menu","Create","AsyncStorage","Update","uniqueNamesGenerator","colors","defaultCues","defaultRandomShuffleFrequency","defaultSleepInfo","Walkthrough","Channels","fetchAPI","createUser","getSubscriptions","getCues","unsubscribe","saveConfigToCloud","saveCuesToCloud","login","getCuesFromCloud","findUserById","resetPassword","totalUnreadDiscussionThreads","totalUnreadMessages","getMeetingStatus","Discussion","Subscribers","Profile","validateEmail","Grades","Calendar","Meeting","PreferredLanguageText","LanguageSelect","OneSignal","useOneSignalSetup","Home","props","window","Dimensions","get","screen","init","setInit","filterChoice","setFilterChoice","customCategories","setCustomCategories","subscriptions","setSubscriptions","cues","setCues","Date","sleepFrom","setSleepFrom","sleepTo","setSleepTo","randomShuffleFrequency","setRandomShuffleFrequency","reLoading","setReLoading","Animated","Value","fadeAnimation","sheetRef","updateModalIndex","setUpdateModalIndex","updateModalKey","setUpdateModalKey","modalType","setModalType","pageNumber","setPageNumber","channelId","setChannelId","cueId","setCueId","createdBy","setCreatedBy","channelCreatedBy","setChannelCreatedBy","channelFilterChoice","setChannelFilterChoice","showLoginWindow","setShowLoginWindow","email","setEmail","password","setPassword","Math","random","reopenUpdateWindow","setReopenUpdateWindow","showForgotPassword","setShowForgotPassword","isSubmitDisabled","setIsSubmitDisabled","saveDataInProgress","setSaveDataInProgress","dimensions","setDimensions","unreadDiscussionThreads","setUnreadDiscussionThreads","unreadMessages","setUnreadMessages","meetingOn","setMeetingOn","emailValidError","setEmailValidError","enterValidEmailError","alreadyUnsubscribedAlert","checkConnectionAlert","somethingWentWrongAlert","eraseContentLeaveChannelAlert","thisActionWillIrreversiblyAlert","eraseContentAndUnsubscrbeAlert","weHaveEmailedPasswordAlert","invalidCredentialsAlert","unableToRefreshCuesAlert","leaveChannelAlert","areYouSureUnsubscribeAlert","keepContentAndUnsubscribeAlert","toString","toLowerCase","onDimensionsChange","addEventListener","removeEventListener","getItem","u","parsedUser","JSON","parse","user","server","query","variables","userId","_id","then","res","data","threadStatus","messageStatus","channel","catch","err","console","log","refreshUnreadDiscussionCount","updateDiscussionNotidCounts","refreshUnreadMessagesCount","updateMessageNotifCounts","refreshMeetingStatus","undefined","storeMenu","setItem","loadNewChannelCues","unparsedCues","allCues","cue","findByUserId","receivedCues","map","item","trim","index","findIndex","__typename","push","unreadThreads","status","original","custom","customCategory","customC","Object","keys","sort","stringCues","stringify","timing","toValue","duration","useNativeDriver","start","permissions","notificationPermission","getNotificationPermission","currentState","registerForPushNotifications","getExternalUserId","externalUserId","setExternalUserId","unsubscribeChannel","text","style","onPress","mutate","mutation","keepContent","subscription","closeModal","loadData","deleteChannel","subCues","value","stringifiedCues","saveData","version","fO","clear","f","sF","sT","sC","sub","fullName","dictionaries","floor","displayName","notificationId","create","sU","SF","from","SFString","ST","to","STString","parsedSubscriptions","stringSub","stringSC","width","openModal","saveDataInCloud","loadDataFromCloud","handleLogin","r","error","e","id","findById","currentDraft","draft","parsedCues","allCuesToSave","key","cueInput","color","date","toISOString","gradeWeight","submission","endPlayAt","score","graded","submittedAt","comment","channelName","newIds","updatedCuesArray","c","updatedItem","find","i","oldId","newId","updatedCuesObj","updatedCues","length","initialize","notifyButton","enable","allowLocalhostAsSecureOrigin","handleFilterChange","choice","setValue","type","openUpdate","by","channId","reloadCueListAfterUpdate","forgotPassword","modalContent","option","cuesArray","filteredCues","cuesCopy","a","b","filter","channeId","alertText","styles","container","height","flex","position","zIndex","backgroundColor","display","alignSelf","justifyContent","borderRadius","marginTop","padding","flexDirection","paddingBottom","require","fontSize","fontFamily","maxWidth","textAlign","paddingTop","val","overflow","lineHeight","paddingHorizontal","textTransform","paddingLeft","borderRightColor","borderRightWidth","activityContainer","horizontal","cId","borderTopWidth","borderColor","StyleSheet","borderBottomWidth","input","borderBottomColor","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from 'react';\r\nimport {\r\n  StyleSheet, Animated, ActivityIndicator, Dimensions,\r\n  Image\r\n} from 'react-native';\r\nimport { TextInput } from \"../components/CustomTextInput\";\r\nimport Alert from '../components/Alert'\r\nimport BottomBar from '../components/BottomBar';\r\nimport CardsList from '../components/CardsList';\r\nimport { Text, TouchableOpacity, View } from '../components/Themed';\r\nimport TopBar from '../components/TopBar';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport Menu from '../components/Menu'\r\nimport Create from '../components/Create';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport Update from '../components/Update';\r\nimport { uniqueNamesGenerator, colors } from 'unique-names-generator'\r\nimport { defaultCues, defaultRandomShuffleFrequency, defaultSleepInfo } from '../helpers/DefaultData'\r\nimport Walkthrough from '../components/Walkthrough';\r\nimport Channels from '../components/Channels';\r\nimport { fetchAPI } from '../graphql/FetchAPI';\r\nimport { createUser, getSubscriptions, getCues, unsubscribe, saveConfigToCloud, saveCuesToCloud, login, getCuesFromCloud, findUserById, resetPassword, totalUnreadDiscussionThreads, totalUnreadMessages, getMeetingStatus } from '../graphql/QueriesAndMutations';\r\nimport Discussion from '../components/Discussion';\r\nimport Subscribers from '../components/Subscribers';\r\nimport Profile from '../components/Profile';\r\nimport { validateEmail } from '../helpers/emailCheck';\r\nimport Grades from '../components/Grades';\r\nimport Calendar from '../components/Calendar';\r\nimport Meeting from '../components/Meeting';\r\nimport { PreferredLanguageText, LanguageSelect } from '../helpers/LanguageContext';\r\n\r\n// Web Notification\r\nimport OneSignal, { useOneSignalSetup } from 'react-onesignal';\r\n\r\nconst Home: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n  const window = Dimensions.get(\"window\");\r\n  const screen = Dimensions.get(\"screen\");\r\n\r\n  const [init, setInit] = useState(false)\r\n  const [filterChoice, setFilterChoice] = useState('All')\r\n  const [customCategories, setCustomCategories] = useState<any[]>([])\r\n  const [subscriptions, setSubscriptions] = useState<any[]>([])\r\n  const [cues, setCues] = useState<any>({})\r\n  // not required\r\n  const [sleepFrom, setSleepFrom] = useState(new Date())\r\n  const [sleepTo, setSleepTo] = useState(new Date())\r\n  const [randomShuffleFrequency, setRandomShuffleFrequency] = useState('1-D')\r\n  // end of not required\r\n  const [reLoading, setReLoading] = useState(true)\r\n  const [fadeAnimation] = useState(new Animated.Value(0))\r\n  const sheetRef: any = useRef(null);\r\n  const [updateModalIndex, setUpdateModalIndex] = useState(0)\r\n  const [updateModalKey, setUpdateModalKey] = useState('local')\r\n  const [modalType, setModalType] = useState('')\r\n  const [pageNumber, setPageNumber] = useState(0)\r\n  const [channelId, setChannelId] = useState('')\r\n  const [cueId, setCueId] = useState('')\r\n  const [createdBy, setCreatedBy] = useState('')\r\n  const [channelCreatedBy, setChannelCreatedBy] = useState('')\r\n  const [channelFilterChoice, setChannelFilterChoice] = useState('All')\r\n  const [showLoginWindow, setShowLoginWindow] = useState(false)\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [reopenUpdateWindow, setReopenUpdateWindow] = useState(Math.random())\r\n  const [showForgotPassword, setShowForgotPassword] = useState(false)\r\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(true)\r\n  const [saveDataInProgress, setSaveDataInProgress] = useState(false)\r\n  const [dimensions, setDimensions] = useState({ window, screen });\r\n\r\n  // Notifications count for Top Bar\r\n  const [unreadDiscussionThreads, setUnreadDiscussionThreads] = useState(0)\r\n  const [unreadMessages, setUnreadMessages] = useState(0)\r\n  const [meetingOn, setMeetingOn] = useState(false)\r\n\r\n  // Login Validation\r\n  const [emailValidError, setEmailValidError] = useState(\"\");\r\n\r\n  const enterValidEmailError = PreferredLanguageText('enterValidEmail')\r\n  const alreadyUnsubscribedAlert = PreferredLanguageText('alreadyUnsubscribed')\r\n  const checkConnectionAlert = PreferredLanguageText('checkConnection')\r\n  const somethingWentWrongAlert = PreferredLanguageText('somethingWentWrongAlert')\r\n  const eraseContentLeaveChannelAlert = PreferredLanguageText('eraseContentLeaveChannel')\r\n  const thisActionWillIrreversiblyAlert = PreferredLanguageText('thisActionWillIrreversibly')\r\n  const eraseContentAndUnsubscrbeAlert = PreferredLanguageText('eraseContentAndUnsubscrbe')\r\n  const weHaveEmailedPasswordAlert = PreferredLanguageText('weHaveEmailedPassword')\r\n  const invalidCredentialsAlert = PreferredLanguageText('invalidCredentials')\r\n  const unableToRefreshCuesAlert = PreferredLanguageText('unableToRefreshCues')\r\n  const leaveChannelAlert = PreferredLanguageText('leaveChannel')\r\n  const areYouSureUnsubscribeAlert = PreferredLanguageText('areYouSureUnsubscribe')\r\n  const keepContentAndUnsubscribeAlert = PreferredLanguageText('keepContentAndUnsubscribe')\r\n\r\n  useEffect(() => {\r\n    if (email && !validateEmail(email.toString().toLowerCase())) {\r\n      setEmailValidError(enterValidEmailError);\r\n      return;\r\n    }\r\n\r\n    setEmailValidError(\"\");\r\n  }, [email]);\r\n\r\n  //   Validate Submit on Login state change\r\n  useEffect(() => {\r\n\r\n    // Login\r\n    if (\r\n      !showForgotPassword &&\r\n      email &&\r\n      password &&\r\n      !emailValidError\r\n    ) {\r\n      setIsSubmitDisabled(false);\r\n      return;\r\n    }\r\n\r\n    // \r\n    if (showForgotPassword && email && !emailValidError) {\r\n      setIsSubmitDisabled(false);\r\n      return;\r\n    }\r\n\r\n    setIsSubmitDisabled(true);\r\n  }, [\r\n    showForgotPassword,\r\n    email,\r\n    password,\r\n    emailValidError,\r\n  ]);\r\n\r\n  const onDimensionsChange = useCallback(({ window, screen }: any) => {\r\n    // window.location.reload()\r\n    setDimensions({ window, screen })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    Dimensions.addEventListener(\"change\", onDimensionsChange);\r\n    return () => {\r\n      Dimensions.removeEventListener(\"change\", onDimensionsChange);\r\n    };\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    (\r\n      async () => {\r\n        const u = await AsyncStorage.getItem('user')\r\n        if (u) {\r\n          const parsedUser: any = JSON.parse(u)\r\n          if (parsedUser.email && parsedUser.email !== '') {\r\n            // do nothing\r\n          } else {\r\n            setShowLoginWindow(true)\r\n          }\r\n        } else {\r\n          setShowLoginWindow(true)\r\n        }\r\n      }\r\n    )()\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    if (channelId !== '') {\r\n      (\r\n        async () => {\r\n          const u = await AsyncStorage.getItem('user')\r\n          if (u) {\r\n            const user = JSON.parse(u)\r\n\r\n            const server = fetchAPI('')\r\n            server.query({\r\n              query: totalUnreadDiscussionThreads,\r\n              variables: {\r\n                userId: user._id,\r\n                channelId\r\n              }\r\n            }).then(res => {\r\n              if (res.data.threadStatus.totalUnreadDiscussionThreads) {\r\n                setUnreadDiscussionThreads(res.data.threadStatus.totalUnreadDiscussionThreads)\r\n              }\r\n            })\r\n            server.query({\r\n              query: totalUnreadMessages,\r\n              variables: {\r\n                userId: user._id,\r\n                channelId\r\n              }\r\n            }).then(res => {\r\n              if (res.data.messageStatus.totalUnreadMessages) {\r\n                setUnreadMessages(res.data.messageStatus.totalUnreadMessages)\r\n              }\r\n            })\r\n            server.query({\r\n              query: getMeetingStatus,\r\n              variables: {\r\n                channelId\r\n              }\r\n            }).then(res => {\r\n              if (res.data && res.data.channel && res.data.channel.getMeetingStatus) {\r\n                setMeetingOn(true)\r\n              } else {\r\n                setMeetingOn(false)\r\n              }\r\n            })\r\n              .catch(err => console.log(err))\r\n          }\r\n        }\r\n      )()\r\n    }\r\n\r\n  }, [channelId, channelCreatedBy, email])\r\n\r\n  const refreshUnreadDiscussionCount = useCallback(async () => {\r\n    if (channelId !== '') {\r\n      const u = await AsyncStorage.getItem('user')\r\n      if (u) {\r\n        const user = JSON.parse(u)\r\n        updateDiscussionNotidCounts(user._id)\r\n      }\r\n    }\r\n\r\n  }, [channelId])\r\n\r\n  const refreshUnreadMessagesCount = useCallback(async () => {\r\n    if (channelId !== '') {\r\n      const u = await AsyncStorage.getItem('user')\r\n      if (u) {\r\n        const user = JSON.parse(u)\r\n        updateMessageNotifCounts(user._id)\r\n\r\n      }\r\n    }\r\n\r\n  }, [channelId])\r\n\r\n  const refreshMeetingStatus = useCallback(async () => {\r\n    if (channelId !== '') {\r\n      const server = fetchAPI('')\r\n      server.query({\r\n        query: getMeetingStatus,\r\n        variables: {\r\n          channelId\r\n        }\r\n      }).then(res => {\r\n        if (res.data && res.data.channel && res.data.channel.getMeetingStatus) {\r\n          setMeetingOn(true)\r\n        } else {\r\n          setMeetingOn(false)\r\n        }\r\n      })\r\n    }\r\n\r\n  }, [channelId])\r\n\r\n\r\n  const updateDiscussionNotidCounts = useCallback((userId) => {\r\n    const server = fetchAPI('')\r\n    server.query({\r\n      query: totalUnreadDiscussionThreads,\r\n      variables: {\r\n        userId,\r\n        channelId\r\n      }\r\n    }).then(res => {\r\n      if (res.data.threadStatus.totalUnreadDiscussionThreads !== undefined && res.data.threadStatus.totalUnreadDiscussionThreads !== null) {\r\n        setUnreadDiscussionThreads(res.data.threadStatus.totalUnreadDiscussionThreads)\r\n      }\r\n    })\r\n      .catch(err => console.log(err))\r\n  }, [channelId])\r\n\r\n  const updateMessageNotifCounts = useCallback((userId) => {\r\n    const server = fetchAPI('')\r\n    server.query({\r\n      query: totalUnreadMessages,\r\n      variables: {\r\n        userId,\r\n        channelId\r\n      }\r\n    }).then(res => {\r\n      if (res.data.messageStatus.totalUnreadMessages !== undefined && res.data.messageStatus.totalUnreadMessages !== null) {\r\n        setUnreadMessages(res.data.messageStatus.totalUnreadMessages)\r\n      }\r\n    })\r\n      .catch(err => console.log(err))\r\n  }, [channelId])\r\n\r\n\r\n\r\n  const storeMenu = useCallback(async () => {\r\n    try {\r\n      await AsyncStorage.setItem('sleepFrom', sleepFrom.toString())\r\n      await AsyncStorage.setItem('sleepTo', sleepTo.toString())\r\n      await AsyncStorage.setItem('randomShuffleFrequency', randomShuffleFrequency)\r\n    } catch (e) {\r\n      // error storing\r\n      console.log(e)\r\n    }\r\n  }, [randomShuffleFrequency, sleepTo, sleepFrom])\r\n\r\n  // imp\r\n  const loadNewChannelCues = useCallback(async () => {\r\n\r\n    let user = await AsyncStorage.getItem('user')\r\n    const unparsedCues = await AsyncStorage.getItem('cues')\r\n    if (user && unparsedCues) {\r\n      const allCues = JSON.parse(unparsedCues)\r\n      const parsedUser = JSON.parse(user)\r\n      const server = fetchAPI(parsedUser._id)\r\n\r\n      try {\r\n        const res = await server.query({\r\n          query: getCues,\r\n          variables: {\r\n            userId: parsedUser._id\r\n          }\r\n        })\r\n\r\n        if (res.data.cue.findByUserId) {\r\n          // Here we load all new Cues\r\n          // we update statuses for the cues that are already stored and add new cues to the list\r\n          // (cant directly replace the store because channel cues could be modified by the user)\r\n          const receivedCues = res.data.cue.findByUserId;\r\n          receivedCues.map((item: any) => {\r\n            const channelId = item.channelId.toString().trim();\r\n            let index = -1;\r\n            if (allCues[channelId]) {\r\n              index = allCues[channelId].findIndex((cue: any) => {\r\n                return cue._id.toString().trim() === item._id.toString().trim()\r\n              })\r\n            }\r\n            if (index === -1) {\r\n              let cue: any = {}\r\n              cue = {\r\n                ...item\r\n              }\r\n              delete cue.__typename\r\n              if (allCues[cue.channelId]) {\r\n                allCues[cue.channelId].push(cue)\r\n              } else {\r\n                allCues[cue.channelId] = [cue]\r\n              }\r\n            } else {\r\n              allCues[item.channelId][index].unreadThreads = item.unreadThreads ? item.unreadThreads : 0;\r\n              allCues[item.channelId][index].status = item.status;\r\n              if (!allCues[item.channelId][index].original) {\r\n                allCues[item.channelId][index].original = item.cue;\r\n              }\r\n            }\r\n          })\r\n          const custom: any = {}\r\n          setCues(allCues)\r\n          if (allCues['local']) {\r\n            allCues['local'].map((item: any) => {\r\n              if (item.customCategory !== \"\") {\r\n                if (!custom[item.customCategory]) {\r\n                  custom[item.customCategory] = 0\r\n                }\r\n              }\r\n            })\r\n            const customC: any[] = []\r\n            Object.keys(custom).map((item) => {\r\n              customC.push(item)\r\n            })\r\n            customC.sort()\r\n            setCustomCategories(customC)\r\n          }\r\n          const stringCues = JSON.stringify(allCues)\r\n          await AsyncStorage.setItem(\"cues\", stringCues)\r\n          Animated.timing(fadeAnimation, {\r\n            toValue: 1,\r\n            duration: 150,\r\n            useNativeDriver: true\r\n          }).start();\r\n          setReLoading(false)\r\n        }\r\n\r\n      } catch (err) {\r\n\r\n        Alert(unableToRefreshCuesAlert, checkConnectionAlert)\r\n        const custom: any = {}\r\n        setCues(allCues)\r\n        if (allCues['local']) {\r\n          allCues['local'].map((item: any) => {\r\n            if (item.customCategory !== \"\") {\r\n              if (!custom[item.customCategory]) {\r\n                custom[item.customCategory] = 0\r\n              }\r\n            }\r\n          })\r\n          const customC: any[] = []\r\n          Object.keys(custom).map((item) => {\r\n            customC.push(item)\r\n          })\r\n          customC.sort()\r\n          setCustomCategories(customC)\r\n        }\r\n        Animated.timing(fadeAnimation, {\r\n          toValue: 1,\r\n          duration: 150,\r\n          useNativeDriver: true\r\n        }).start();\r\n        setReLoading(false)\r\n      }\r\n    } else if (unparsedCues) {\r\n      const custom: any = {}\r\n      const allCues = JSON.parse(unparsedCues)\r\n      setCues(allCues)\r\n      if (allCues['local']) {\r\n        allCues['local'].map((item: any) => {\r\n          if (item.customCategory !== \"\") {\r\n            if (!custom[item.customCategory]) {\r\n              custom[item.customCategory] = 0\r\n            }\r\n          }\r\n        })\r\n        const customC: any[] = []\r\n        Object.keys(custom).map((item) => {\r\n          customC.push(item)\r\n        })\r\n        customC.sort()\r\n        setCustomCategories(customC)\r\n      }\r\n      Animated.timing(fadeAnimation, {\r\n        toValue: 1,\r\n        duration: 150,\r\n        useNativeDriver: true\r\n      }).start();\r\n      setReLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  useOneSignalSetup(async () => {\r\n\r\n    const permissions = OneSignal.notificationPermission;\r\n\r\n    // Check current permission state\r\n    const currentState = await OneSignal.getNotificationPermission();\r\n\r\n    if (currentState !== \"granted\") {\r\n      OneSignal.registerForPushNotifications();\r\n    } else {\r\n\r\n      // If permission granted and logged in then ensure user external id is added\r\n\r\n      const externalUserId = await OneSignal.getExternalUserId();\r\n\r\n      if (!externalUserId) {\r\n        let user = await AsyncStorage.getItem('user')\r\n\r\n        if (user) {\r\n          const parsedUser = JSON.parse(user);\r\n          if (parsedUser.email) {\r\n            await OneSignal.setExternalUserId(parsedUser._id)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const unsubscribeChannel = useCallback(() => {\r\n    Alert(\r\n      leaveChannelAlert,\r\n      areYouSureUnsubscribeAlert + filterChoice + \"?\",\r\n      [\r\n        {\r\n          text: \"Cancel\", style: \"cancel\"\r\n        },\r\n        {\r\n          text: keepContentAndUnsubscribeAlert, onPress: async () => {\r\n            let user = await AsyncStorage.getItem('user')\r\n            if (user) {\r\n              const parsedUser = JSON.parse(user)\r\n              const server = fetchAPI('')\r\n              server.mutate({\r\n                mutation: unsubscribe,\r\n                variables: {\r\n                  userId: parsedUser._id,\r\n                  channelId,\r\n                  keepContent: true\r\n                }\r\n              }).then(res => {\r\n                if (res.data.subscription && res.data.subscription.unsubscribe) {\r\n                  setChannelId('')\r\n                  setFilterChoice('All')\r\n                  closeModal()\r\n                  loadData()\r\n                } else {\r\n                  Alert(alreadyUnsubscribedAlert)\r\n                }\r\n              }).catch(err => {\r\n                Alert(somethingWentWrongAlert, checkConnectionAlert)\r\n              })\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    );\r\n  }, [channelId, filterChoice])\r\n\r\n  const deleteChannel = useCallback(() => {\r\n    Alert(\r\n      eraseContentLeaveChannelAlert,\r\n      thisActionWillIrreversiblyAlert + filterChoice + \".\",\r\n      [\r\n        {\r\n          text: \"Cancel\", style: \"cancel\"\r\n        },\r\n        {\r\n          text: eraseContentAndUnsubscrbeAlert, onPress: async () => {\r\n            let user = await AsyncStorage.getItem('user')\r\n            if (user) {\r\n              const parsedUser = JSON.parse(user)\r\n              const server = fetchAPI('')\r\n              server.mutate({\r\n                mutation: unsubscribe,\r\n                variables: {\r\n                  userId: parsedUser._id,\r\n                  channelId,\r\n                  keepContent: false\r\n                }\r\n              }).then(async res => {\r\n                if (res.data.subscription && res.data.subscription.unsubscribe) {\r\n                  let subCues: any = {}\r\n                  try {\r\n                    const value = await AsyncStorage.getItem('cues')\r\n                    if (value) {\r\n                      subCues = JSON.parse(value)\r\n                      if (subCues[channelId]) {\r\n                        delete subCues[channelId]\r\n                      }\r\n                      const stringifiedCues = JSON.stringify(subCues)\r\n                      await AsyncStorage.setItem('cues', stringifiedCues)\r\n                    }\r\n                  } catch (e) {\r\n                    return\r\n                  }\r\n                  setChannelId('')\r\n                  setFilterChoice('All')\r\n                  closeModal()\r\n                  loadData()\r\n                } else {\r\n                  Alert(alreadyUnsubscribedAlert)\r\n                }\r\n              }).catch(err => {\r\n                Alert(somethingWentWrongAlert, checkConnectionAlert)\r\n              })\r\n            }\r\n          }\r\n        },\r\n      ]\r\n    );\r\n  }, [channelId, filterChoice])\r\n\r\n  // imp\r\n  const loadData = useCallback(async (saveData?: boolean) => {\r\n    setReLoading(true)\r\n    try {\r\n\r\n      const version = 'v0.9'\r\n      const server = fetchAPI('')\r\n      const fO = await AsyncStorage.getItem(version)\r\n\r\n      // LOAD FIRST OPENED\r\n      if (fO === undefined || fO === null) {\r\n        try {\r\n          await AsyncStorage.clear()\r\n          await AsyncStorage.setItem(version, 'SET')\r\n        } catch (e) {\r\n        }\r\n      }\r\n\r\n      let u = await AsyncStorage.getItem('user')\r\n      const f = await AsyncStorage.getItem('randomShuffleFrequency')\r\n      const sF = await AsyncStorage.getItem('sleepFrom')\r\n      const sT = await AsyncStorage.getItem('sleepTo')\r\n      const sC = await AsyncStorage.getItem('cues')\r\n      const sub = await AsyncStorage.getItem('subscriptions')\r\n\r\n      // LOAD USER OR CREATE A NEW ONE IF NOT FOUND\r\n      if (!u) {\r\n        const fullName = uniqueNamesGenerator({\r\n          dictionaries: [colors]\r\n        }) + Math.floor(Math.random() * (999 - 100 + 1) + 100).toString();\r\n        const displayName = fullName\r\n        const notificationId = 'NOT_SET';\r\n        server.mutate({\r\n          mutation: createUser,\r\n          variables: {\r\n            fullName,\r\n            displayName,\r\n            notificationId\r\n          }\r\n        })\r\n          .then(async res => {\r\n            const u = res.data.user.create\r\n            if (u.__typename) {\r\n              delete u.__typename\r\n            }\r\n            const sU = JSON.stringify(u)\r\n            await AsyncStorage.setItem('user', sU)\r\n          })\r\n          .catch(err => {\r\n            // no message needed here\r\n          })\r\n        // OPEN LOGIN WINDOW\r\n      }\r\n      // LOAD RANDOM SHUFFLE FREQUENCY\r\n      if (f) {\r\n        setRandomShuffleFrequency(f)\r\n      } else {\r\n        setRandomShuffleFrequency(defaultRandomShuffleFrequency)\r\n        await AsyncStorage.setItem('randomShuffleFrequency', defaultRandomShuffleFrequency)\r\n      }\r\n      // LOAD SLEEP FROM\r\n      if (sF) {\r\n        setSleepFrom(new Date(sF))\r\n      } else {\r\n        const SF = defaultSleepInfo().from\r\n        setSleepFrom(SF)\r\n        const SFString = SF.toString()\r\n        await AsyncStorage.setItem('sleepFrom', SFString)\r\n      }\r\n      // LOAD SLEEP TO\r\n      if (sT) {\r\n        setSleepTo(new Date(sT))\r\n      } else {\r\n        const ST = defaultSleepInfo().to\r\n        setSleepTo(ST)\r\n        const STString = ST.toString()\r\n        await AsyncStorage.setItem('sleepTo', STString)\r\n      }\r\n      // LOAD SUBSCRIPTIONS\r\n      if (sub) {\r\n        const parsedSubscriptions = JSON.parse(sub)\r\n        if (u) {\r\n          const parsedUser = JSON.parse(u)\r\n          server.query({\r\n            query: getSubscriptions,\r\n            variables: {\r\n              userId: parsedUser._id\r\n            }\r\n          })\r\n            .then(async res => {\r\n              if (res.data.subscription.findByUserId) {\r\n                setSubscriptions(res.data.subscription.findByUserId)\r\n                const stringSub = JSON.stringify(res.data.subscription.findByUserId)\r\n                await AsyncStorage.setItem('subscriptions', stringSub)\r\n              } else {\r\n                setSubscriptions(parsedSubscriptions)\r\n              }\r\n            })\r\n            .catch(res => {\r\n              // no message needed here\r\n              // No internet connection, use existing subscription categories\r\n              setSubscriptions(parsedSubscriptions)\r\n            })\r\n        } else {\r\n          // no user, \r\n          setSubscriptions(parsedSubscriptions)\r\n        }\r\n      } else {\r\n        const stringSub = JSON.stringify(subscriptions)\r\n        await AsyncStorage.setItem('subscriptions', stringSub)\r\n      }\r\n      // LOAD CUES\r\n      if (sC) {\r\n        await loadNewChannelCues()\r\n      } else {\r\n        const custom: any = {}\r\n        let allCues: any = {}\r\n        allCues['local'] = [...defaultCues]\r\n        const stringSC = JSON.stringify(allCues)\r\n        await AsyncStorage.setItem('cues', stringSC)\r\n        allCues['local'].map((item: any) => {\r\n          if (item.customCategory !== \"\") {\r\n            if (!custom[item.customCategory]) {\r\n              custom[item.customCategory] = 0\r\n            }\r\n          }\r\n        })\r\n        const customC: any[] = []\r\n        Object.keys(custom).map((item) => {\r\n          customC.push(item)\r\n        })\r\n        customC.sort()\r\n        setCues(allCues)\r\n        setCustomCategories(customC)\r\n        // START ANIMATION\r\n        Animated.timing(fadeAnimation, {\r\n          toValue: 1,\r\n          duration: 150,\r\n          useNativeDriver: true\r\n        }).start();\r\n      }\r\n      // OPEN WALKTHROUGH IF FIRST TIME LOAD\r\n      if (!init && dimensions.window.width >= 1024) {\r\n        openModal('Calendar')\r\n      }\r\n      // HANDLE PROFILE\r\n      if (u) {\r\n        const parsedUser = JSON.parse(u)\r\n        if (parsedUser.email) {\r\n          if (init || saveData) {\r\n            await saveDataInCloud()\r\n          } else {\r\n            loadDataFromCloud()\r\n          }\r\n        }\r\n      }\r\n      // INITIALISED FIRST TIME\r\n      if (!init) {\r\n        setInit(true)\r\n      }\r\n      // LOADED\r\n      if (!sC) {\r\n        setReLoading(false)\r\n      }\r\n\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n  }, [fadeAnimation, init])\r\n\r\n  // Move to profile page\r\n  const handleLogin = useCallback(() => {\r\n    const server = fetchAPI('')\r\n    server.query({\r\n      query: login,\r\n      variables: {\r\n        email: email.toLowerCase(),\r\n        password\r\n      }\r\n    }).then(async (r: any) => {\r\n      if (r.data.user.login.user && !r.data.user.login.error) {\r\n        const u = r.data.user.login.user\r\n        if (u.__typename) {\r\n          delete u.__typename\r\n        }\r\n\r\n        const userId = u._id;\r\n\r\n        OneSignal.setExternalUserId(userId);\r\n\r\n        const sU = JSON.stringify(u)\r\n        await AsyncStorage.setItem('user', sU)\r\n        setShowLoginWindow(false)\r\n        loadDataFromCloud()\r\n      } else {\r\n        const { error } = r.data.user.login;\r\n        Alert(error);\r\n      }\r\n    }).catch(e => console.log(e))\r\n  }, [email, password])\r\n\r\n  // imp\r\n  const loadDataFromCloud = useCallback(async () => {\r\n    const u = await AsyncStorage.getItem('user')\r\n    if (u) {\r\n      const user = JSON.parse(u)\r\n      const server = fetchAPI(user._id)\r\n      // Get User info\r\n      server.query({\r\n        query: findUserById,\r\n        variables: {\r\n          id: user._id\r\n        }\r\n      }).then(async (res) => {\r\n        const u = res.data.user.findById;\r\n        if (u) {\r\n          // not used\r\n          setRandomShuffleFrequency(u.randomShuffleFrequency)\r\n          setSleepFrom(new Date(u.sleepFrom))\r\n          setSleepTo(new Date(u.sleepTo))\r\n          // end of use\r\n          await AsyncStorage.setItem('cueDraft', u.currentDraft)\r\n          delete u.currentDraft;\r\n          delete u.__typename\r\n          const sU = JSON.stringify(u)\r\n          await AsyncStorage.setItem('user', sU)\r\n        }\r\n      }).catch(err => console.log(err))\r\n      // Get user cues\r\n      server.query({\r\n        query: getCuesFromCloud,\r\n        variables: {\r\n          userId: user._id\r\n        }\r\n      }).then(async (res) => {\r\n        if (res.data.cue.getCuesFromCloud) {\r\n          const allCues: any = {}\r\n          res.data.cue.getCuesFromCloud.map((cue: any) => {\r\n            const channelId = cue.channelId && cue.channelId !== '' ? cue.channelId : \"local\"\r\n            delete cue.__typename\r\n            if (allCues[channelId]) {\r\n              allCues[channelId].push({ ...cue })\r\n            } else {\r\n              allCues[channelId] = [{ ...cue }]\r\n            }\r\n          })\r\n          const custom: any = {}\r\n          if (allCues[\"local\"]) {\r\n            allCues['local'].map((item: any) => {\r\n              if (item.customCategory !== \"\") {\r\n                if (!custom[item.customCategory]) {\r\n                  custom[item.customCategory] = 0\r\n                }\r\n              }\r\n            })\r\n          } else {\r\n            allCues[\"local\"] = []\r\n          }\r\n          const customC: any[] = []\r\n          Object.keys(custom).map((item) => {\r\n            customC.push(item)\r\n          })\r\n          customC.sort()\r\n          setCues(allCues)\r\n          setCustomCategories(customC)\r\n          const stringCues = JSON.stringify(allCues)\r\n          await AsyncStorage.setItem('cues', stringCues)\r\n        }\r\n      }).catch(err => console.log(err))\r\n      // Get subscription information\r\n      server.query({\r\n        query: getSubscriptions,\r\n        variables: {\r\n          userId: user._id\r\n        }\r\n      })\r\n        .then(async res => {\r\n          if (res.data.subscription.findByUserId) {\r\n            setSubscriptions(res.data.subscription.findByUserId)\r\n            const stringSub = JSON.stringify(res.data.subscription.findByUserId)\r\n            await AsyncStorage.setItem('subscriptions', stringSub)\r\n          }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n  }, [])\r\n\r\n  // imp\r\n  const saveDataInCloud = useCallback(async () => {\r\n\r\n    if (saveDataInProgress) return;\r\n\r\n    setSaveDataInProgress(true);\r\n\r\n    const draft = await AsyncStorage.getItem('cueDraft')\r\n    const f: any = await AsyncStorage.getItem('randomShuffleFrequency')\r\n    const sF: any = await AsyncStorage.getItem('sleepFrom')\r\n    const sT: any = await AsyncStorage.getItem('sleepTo')\r\n    const u: any = await AsyncStorage.getItem('user')\r\n    const parsedUser = JSON.parse(u)\r\n    const sC: any = await AsyncStorage.getItem('cues')\r\n    const parsedCues = JSON.parse(sC)\r\n    const sub: any = await AsyncStorage.getItem('subscriptions')\r\n    const parsedSubscriptions = JSON.parse(sub)\r\n\r\n    const allCuesToSave: any[] = []\r\n    const allCues: any[] = []\r\n\r\n    if (parsedCues !== {}) {\r\n      Object.keys(parsedCues).map((key) => {\r\n        parsedCues[key].map((cue: any) => {\r\n          const cueInput = {\r\n            ...cue,\r\n            _id: cue._id.toString(),\r\n            color: cue.color.toString(),\r\n            date: (new Date(cue.date)).toISOString(),\r\n            gradeWeight: cue.submission ? cue.gradeWeight.toString() : undefined,\r\n            endPlayAt: cue.endPlayAt && cue.endPlayAt !== '' ? (new Date(cue.endPlayAt)).toISOString() : '',\r\n          }\r\n          allCuesToSave.push({ ...cueInput })\r\n          // Deleting these because they should not be changed ...\r\n          // but dont delete if it is the person who has made the cue \r\n          // -> because those channel Cue changes are going to be propagated\r\n          delete cueInput.score;\r\n          // delete cueInput.deadline;\r\n          delete cueInput.graded;\r\n          delete cueInput.submittedAt;\r\n          // delete cueInput.gradeWeight;\r\n          // delete cueInput.submission;\r\n          delete cueInput.comment;\r\n          delete cueInput.unreadThreads;\r\n          // delete cueInput.createdBy;\r\n          // delete cueInput.original;\r\n          delete cueInput.status;\r\n          delete cueInput.channelName;\r\n          delete cueInput.__typename;\r\n          allCues.push(cueInput)\r\n        })\r\n      })\r\n    }\r\n\r\n    const server = fetchAPI('')\r\n    // UPDATE CUE CONFIG\r\n    server.mutate({\r\n      mutation: saveConfigToCloud,\r\n      variables: {\r\n        randomShuffleFrequency: f,\r\n        sleepFrom: sF,\r\n        sleepTo: sT,\r\n        currentDraft: draft ? draft : '',\r\n        subscriptions: parsedSubscriptions,\r\n        userId: parsedUser._id\r\n      }\r\n    }).then(res => {\r\n    }).catch(err => console.log(err))\r\n\r\n    // UPDATE CUES\r\n    server.mutate({\r\n      mutation: saveCuesToCloud,\r\n      variables: {\r\n        userId: parsedUser._id,\r\n        cues: allCues\r\n      }\r\n    }).then(async res => {\r\n      if (res.data.cue.saveCuesToCloud) {\r\n        const newIds: any = res.data.cue.saveCuesToCloud;\r\n        const updatedCuesArray: any[] = []\r\n        allCuesToSave.map((c: any) => {\r\n          const id = c._id;\r\n          const updatedItem = newIds.find((i: any) => {\r\n            return id.toString().trim() === i.oldId.toString().trim()\r\n          })\r\n          if (updatedItem) {\r\n            updatedCuesArray.push({\r\n              ...c,\r\n              _id: updatedItem.newId\r\n            })\r\n          } else {\r\n            updatedCuesArray.push(c)\r\n          }\r\n        })\r\n        const updatedCuesObj: any = {};\r\n        updatedCuesArray.map((c: any) => {\r\n          if (c.channelId && c.channelId !== '') {\r\n            if (updatedCuesObj[c.channelId]) {\r\n              updatedCuesObj[c.channelId].push(c)\r\n            } else {\r\n              updatedCuesObj[c.channelId] = [c]\r\n            }\r\n          } else {\r\n            if (updatedCuesObj[\"local\"]) {\r\n              updatedCuesObj[\"local\"].push(c)\r\n            } else {\r\n              updatedCuesObj[\"local\"] = [c]\r\n            }\r\n          }\r\n        });\r\n        const updatedCues = JSON.stringify(updatedCuesObj)\r\n        await AsyncStorage.setItem('cues', updatedCues)\r\n        if (newIds.length !== 0) {\r\n          setCues(updatedCuesObj)\r\n        }\r\n      }\r\n\r\n      setSaveDataInProgress(false)\r\n\r\n    }).catch(err => console.log(err))\r\n  }, [cues, setCues])\r\n\r\n  useEffect(() => {\r\n\r\n    OneSignal.initialize(\"51db5230-f2f3-491a-a5b9-e4fba0f23c76\", {\r\n      notifyButton: {\r\n        enable: false,\r\n      },\r\n      allowLocalhostAsSecureOrigin: true,\r\n    });\r\n\r\n    // Called when component is loaded\r\n    loadData()\r\n  }, [])\r\n\r\n  const handleFilterChange = useCallback((choice) => {\r\n    setPageNumber(0)\r\n    fadeAnimation.setValue(0)\r\n    Animated.timing(fadeAnimation, {\r\n      toValue: 1,\r\n      duration: 150,\r\n      useNativeDriver: true\r\n    }).start();\r\n    setFilterChoice(choice)\r\n  }, [fadeAnimation])\r\n\r\n  const openModal = useCallback((type) => {\r\n    setModalType(type)\r\n  }, [sheetRef, cues])\r\n\r\n  const openUpdate = useCallback((key, index, pageNumber, _id, by, channId) => {\r\n    setUpdateModalKey(key)\r\n    setUpdateModalIndex(index)\r\n    setPageNumber(pageNumber)\r\n    setChannelId(channId)\r\n    setCreatedBy(by)\r\n    setCueId(_id)\r\n    openModal('Update')\r\n  }, [])\r\n\r\n  const reloadCueListAfterUpdate = useCallback(async () => {\r\n    const unparsedCues = await AsyncStorage.getItem('cues')\r\n    const u = await AsyncStorage.getItem('user')\r\n    if (unparsedCues) {\r\n      const allCues = JSON.parse(unparsedCues)\r\n      const custom: any = {}\r\n      setCues(allCues)\r\n      if (allCues['local']) {\r\n        allCues['local'].map((item: any) => {\r\n          if (item.customCategory !== \"\") {\r\n            if (!custom[item.customCategory]) {\r\n              custom[item.customCategory] = 0\r\n            }\r\n          }\r\n        })\r\n        const customC: any[] = []\r\n        Object.keys(custom).map((item) => {\r\n          customC.push(item)\r\n        })\r\n        customC.sort()\r\n        setCustomCategories(customC)\r\n      }\r\n      Animated.timing(fadeAnimation, {\r\n        toValue: 1,\r\n        duration: 150,\r\n        useNativeDriver: true\r\n      }).start();\r\n    }\r\n    if (u) {\r\n      const user = JSON.parse(u)\r\n      if (user.email) {\r\n        await saveDataInCloud()\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  const forgotPassword = useCallback(() => {\r\n\r\n    const server = fetchAPI('')\r\n    server.mutate({\r\n      mutation: resetPassword,\r\n      variables: {\r\n        email\r\n      }\r\n    }).then(res => {\r\n      if (res.data && res.data.user.resetPassword) {\r\n        Alert(weHaveEmailedPasswordAlert)\r\n        setShowForgotPassword(false)\r\n      } else {\r\n        Alert(invalidCredentialsAlert);\r\n      }\r\n    })\r\n  }, [email])\r\n\r\n  const closeModal = useCallback(() => {\r\n    setCueId('')\r\n    setModalType('')\r\n    setCreatedBy('')\r\n    setChannelFilterChoice('All')\r\n    if (modalType === 'Create' || modalType === 'Update') {\r\n      fadeAnimation.setValue(0)\r\n      if (modalType === 'Update' && filterChoice === 'All-Channels') {\r\n        setChannelId('')\r\n      }\r\n    }\r\n    loadData(true)\r\n  }, [sheetRef, fadeAnimation, modalType, filterChoice])\r\n\r\n  const modalContent = modalType === 'Menu' ? <Menu\r\n    sleepFrom={sleepFrom}\r\n    sleepTo={sleepTo}\r\n    randomShuffleFrequency={randomShuffleFrequency}\r\n    setRandomShuffleFrequency={(option: any) => {\r\n      setRandomShuffleFrequency(option)\r\n      storeMenu()\r\n    }}\r\n    setSleepFrom={(date: any) => {\r\n      setSleepFrom(date)\r\n      storeMenu()\r\n    }}\r\n    setSleepTo={(date: any) => {\r\n      setSleepTo(date)\r\n      storeMenu()\r\n    }}\r\n  /> :\r\n    (modalType === 'Create' ? <Create\r\n      key={JSON.stringify(customCategories)}\r\n      customCategories={customCategories}\r\n      closeModal={() => {\r\n        closeModal()\r\n        setPageNumber(0)\r\n      }}\r\n    />\r\n      :\r\n      (modalType === 'Update' ? <Update\r\n        key={cueId.toString()}\r\n        customCategories={customCategories}\r\n        cue={cues[updateModalKey][updateModalIndex]}\r\n        cueIndex={updateModalIndex}\r\n        cueKey={updateModalKey}\r\n        closeModal={() => closeModal()}\r\n        cueId={cueId}\r\n        createdBy={createdBy}\r\n        channelId={channelId}\r\n        filterChoice={filterChoice}\r\n        channelCreatedBy={channelCreatedBy}\r\n        reloadCueListAfterUpdate={() => reloadCueListAfterUpdate()}\r\n        reopenUpdateWindow={reopenUpdateWindow}\r\n      />\r\n        :\r\n        (modalType === 'Walkthrough' ? <Walkthrough\r\n        />\r\n          : (\r\n            modalType === 'Channels' ? <Channels\r\n              closeModal={() => closeModal()}\r\n            /> : (\r\n\r\n              modalType === 'Discussion' ? <Discussion\r\n                closeModal={() => closeModal()}\r\n                channelId={channelId}\r\n                filterChoice={filterChoice}\r\n                channelCreatedBy={channelCreatedBy}\r\n                refreshUnreadDiscussionCount={() => refreshUnreadDiscussionCount()}\r\n              />\r\n                : (\r\n                  modalType === 'Subscribers' ? <Subscribers\r\n                    closeModal={() => closeModal()}\r\n                    channelId={channelId}\r\n                    channelCreatedBy={channelCreatedBy}\r\n                    filterChoice={filterChoice}\r\n                    refreshUnreadMessagesCount={() => refreshUnreadMessagesCount()}\r\n                  /> :\r\n                    (\r\n                      modalType === 'Profile' ? <Profile\r\n                        closeModal={() => closeModal()}\r\n                        saveDataInCloud={async () => await saveDataInCloud()}\r\n                        reOpenProfile={() => {\r\n                          setModalType('')\r\n                          openModal('Profile')\r\n                        }}\r\n                        reloadData={() => {\r\n                          loadData()\r\n                          openModal('Walkthrough')\r\n                        }}\r\n                      /> :\r\n                        (\r\n                          modalType === 'Grades' ? <Grades\r\n                            closeModal={() => closeModal()}\r\n                            channelId={channelId}\r\n                            channelCreatedBy={channelCreatedBy}\r\n                            filterChoice={filterChoice}\r\n                          />\r\n                            : (\r\n                              modalType === 'Calendar' ? <Calendar cues={cues} />\r\n                                : (\r\n                                  modalType === 'Meeting' ? <Meeting\r\n                                    channelId={channelId}\r\n                                    channelName={filterChoice}\r\n                                    channelCreatedBy={channelCreatedBy}\r\n                                    refreshMeetingStatus={refreshMeetingStatus}\r\n                                  />\r\n                                    : null\r\n                                )\r\n                            )\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n\r\n  const cuesArray: any[] = []\r\n  let filteredCues: any[] = []\r\n  if (cues !== {}) {\r\n    Object.keys(cues).map((key) => {\r\n      cues[key].map((cue: any, index: number) => {\r\n        cuesArray.push({\r\n          ...cue,\r\n          key,\r\n          index\r\n        })\r\n      })\r\n    })\r\n  }\r\n  const cuesCopy = cuesArray.sort((a: any, b: any) => {\r\n    if (a.color < b.color) {\r\n      return -1;\r\n    }\r\n    if (a.color > b.color) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  })\r\n\r\n  if (filterChoice === 'All') {\r\n    filteredCues = cuesCopy.filter((item) => {\r\n      return !item.channelId || item.channelId === ''\r\n    })\r\n  } else if (filterChoice === 'All-Channels') {\r\n    filteredCues = cuesCopy.filter((item) => {\r\n      return item.channelId && item.channeId !== ''\r\n    })\r\n  } else if (channelId !== '') {\r\n    filteredCues = cuesCopy.filter((item) => {\r\n      return item.channelName === filterChoice\r\n    })\r\n  } else {\r\n    filteredCues = cuesCopy.filter((item) => {\r\n      return item.customCategory === filterChoice\r\n    })\r\n  }\r\n\r\n  if (!init) {\r\n    return null;\r\n  }\r\n\r\n  const alertText = PreferredLanguageText('savedLocally');\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {\r\n        showLoginWindow ? <View style={{\r\n          width: '100%',\r\n          height: dimensions.window.height,\r\n          flex: 1,\r\n          position: 'absolute',\r\n          zIndex: 50,\r\n          backgroundColor: 'rgba(16,16,16, 0.7)'\r\n        }}\r\n        >\r\n          <View style={{\r\n            position: 'absolute',\r\n            zIndex: 525,\r\n            display: 'flex',\r\n            alignSelf: 'center',\r\n            justifyContent: 'center',\r\n            backgroundColor: 'white',\r\n            width: dimensions.window.width < 768 ? '100%' : 480,\r\n            height: dimensions.window.width < 768 ? '100%' : 'auto',\r\n            borderRadius: dimensions.window.width < 768 ? 0 : 20,\r\n            marginTop: dimensions.window.width < 768 ? 0 : 75,\r\n            padding: 40\r\n          }}>\r\n            <View style={{ flexDirection: 'row', justifyContent: 'center', display: 'flex', paddingBottom: 50 }}>\r\n              <Image\r\n                source={require('../components/default-images/cues-logo-black-exclamation-hidden.jpg')}\r\n                style={{\r\n                  width: dimensions.window.height * 0.16 * 0.53456,\r\n                  height: dimensions.window.height * 0.16 * 0.2\r\n                }}\r\n                resizeMode={'contain'}\r\n              />\r\n            </View>\r\n            {/* <Text style={{ fontSize: 22, color: '#202025', fontFamily: 'inter', paddingBottom: 15, maxWidth: 500, textAlign: 'center' }}>\r\n              {\r\n                showForgotPassword ? '' : PreferredLanguageText('login')\r\n              }\r\n            </Text> */}\r\n            <Text style={{ fontSize: 18, color: '#a2a2aa', fontFamily: 'overpass', paddingBottom: 25, maxWidth: 500, textAlign: 'center' }}>\r\n              {\r\n                showForgotPassword ? PreferredLanguageText('temporaryPassword') : PreferredLanguageText('continueLeftOff')\r\n              }\r\n            </Text>\r\n            <View style={{\r\n              maxWidth: 500,\r\n              backgroundColor: 'white',\r\n              justifyContent: 'center'\r\n            }}>\r\n              <Text style={{ color: '#202025', fontSize: 14, paddingBottom: 5, paddingTop: 10 }}>\r\n                {PreferredLanguageText('email')}\r\n              </Text>\r\n              <TextInput\r\n                value={email}\r\n                placeholder={''}\r\n                onChangeText={(val: any) => setEmail(val)}\r\n                placeholderTextColor={'#a2a2aa'}\r\n                errorText={emailValidError}\r\n              />\r\n              {\r\n                showForgotPassword ? null :\r\n                  <View>\r\n                    <Text style={{ color: '#202025', fontSize: 14, paddingBottom: 5 }}>\r\n                      {PreferredLanguageText('password')}\r\n                    </Text>\r\n                    <TextInput\r\n                      secureTextEntry={true}\r\n                      value={password}\r\n                      placeholder={''}\r\n                      onChangeText={(val: any) => setPassword(val)}\r\n                      placeholderTextColor={'#a2a2aa'}\r\n                    />\r\n                  </View>\r\n              }\r\n              <View\r\n                style={{\r\n                  flex: 1,\r\n                  justifyContent: 'center',\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  paddingBottom: 10,\r\n                  paddingTop: 40\r\n                }}>\r\n                <TouchableOpacity\r\n                  disabled={isSubmitDisabled}\r\n                  onPress={() => {\r\n                    if (showForgotPassword) {\r\n                      forgotPassword()\r\n                    } else {\r\n                      handleLogin()\r\n                    }\r\n                  }}\r\n                  style={{\r\n                    backgroundColor: 'white',\r\n                    overflow: 'hidden',\r\n                    height: 35,\r\n                    marginTop: 15,\r\n                    width: '100%', justifyContent: 'center', flexDirection: 'row'\r\n                  }}>\r\n                  <Text style={{\r\n                    textAlign: 'center',\r\n                    lineHeight: 35,\r\n                    color: 'white',\r\n                    fontSize: 12,\r\n                    backgroundColor: '#3B64F8',\r\n                    paddingHorizontal: 25,\r\n                    fontFamily: 'inter',\r\n                    height: 35,\r\n                    width: 180,\r\n                    borderRadius: 15,\r\n                    textTransform: 'uppercase'\r\n                  }}>\r\n                    {\r\n                      showForgotPassword ? PreferredLanguageText('reset') : PreferredLanguageText('login')\r\n                    }\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  onPress={() => setShowForgotPassword(!showForgotPassword)}\r\n                  style={{\r\n                    backgroundColor: 'white',\r\n                    overflow: 'hidden',\r\n                    height: 35,\r\n                    marginTop: 15,\r\n                    width: '100%', justifyContent: 'center', flexDirection: 'row'\r\n                  }}>\r\n                  <Text style={{\r\n                    textAlign: 'center',\r\n                    lineHeight: 35,\r\n                    color: '#202025',\r\n                    fontSize: 12,\r\n                    backgroundColor: '#f4f4f6',\r\n                    paddingHorizontal: 25,\r\n                    fontFamily: 'inter',\r\n                    height: 35,\r\n                    width: 180,\r\n                    borderRadius: 15,\r\n                    textTransform: 'uppercase'\r\n                  }}>\r\n                    {\r\n                      showForgotPassword ? PreferredLanguageText('back') : PreferredLanguageText('forgotPassword')\r\n                    }\r\n                  </Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    setShowLoginWindow(false)\r\n                    Alert(alertText);\r\n                  }}\r\n                  style={{\r\n                    backgroundColor: 'white',\r\n                    overflow: 'hidden',\r\n                    height: 35,\r\n                    marginTop: 15,\r\n                    width: '100%', justifyContent: 'center', flexDirection: 'row'\r\n                  }}>\r\n                  <Text style={{\r\n                    textAlign: 'center',\r\n                    lineHeight: 35,\r\n                    color: '#202025',\r\n                    fontSize: 12,\r\n                    backgroundColor: '#f4f4f6',\r\n                    paddingHorizontal: 25,\r\n                    fontFamily: 'inter',\r\n                    height: 35,\r\n                    width: 180,\r\n                    borderRadius: 15,\r\n                    textTransform: 'uppercase'\r\n                  }}>\r\n                    {PreferredLanguageText('skipForNow')}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n            <View style={{ display: \"flex\", justifyContent: \"flex-start\", paddingLeft: 5, paddingBottom: 5, marginTop: 20 }}>\r\n              <LanguageSelect />\r\n            </View>\r\n          </View>\r\n        </View> : null\r\n      }\r\n      <View style={{\r\n        width: dimensions.window.width < 1024 ? dimensions.window.width : dimensions.window.width * 0.3,\r\n        height: dimensions.window.height,\r\n        flexDirection: 'column',\r\n        backgroundColor: '#fff',\r\n        borderRightColor: '#eeeeee',\r\n        borderRightWidth: 1,\r\n      }}>\r\n        <TopBar\r\n          key={JSON.stringify(channelFilterChoice) + JSON.stringify(filteredCues) + JSON.stringify(modalType) + JSON.stringify(filterChoice) + JSON.stringify(unreadDiscussionThreads) + JSON.stringify(unreadMessages) + JSON.stringify(meetingOn)}\r\n          openChannels={() => openModal('Channels')}\r\n          cues={filteredCues}\r\n          filterChoice={filterChoice}\r\n          channelId={channelId}\r\n          channelFilterChoice={channelFilterChoice}\r\n          channelCreatedBy={channelCreatedBy}\r\n          loadData={() => loadData()}\r\n          setChannelFilterChoice={(choice: any) => setChannelFilterChoice(choice)}\r\n          openDiscussion={() => openModal('Discussion')}\r\n          openSubscribers={() => openModal('Subscribers')}\r\n          openGrades={() => openModal('Grades')}\r\n          unsubscribe={() => unsubscribeChannel()}\r\n          openWalkthrough={() => openModal('Walkthrough')}\r\n          deleteChannel={() => deleteChannel()}\r\n          openCalendar={() => openModal('Calendar')}\r\n          openMeeting={() => openModal('Meeting')}\r\n          unreadDiscussionThreads={unreadDiscussionThreads}\r\n          unreadMessages={unreadMessages}\r\n          meetingOn={meetingOn}\r\n        />\r\n        {\r\n          reLoading ? <View style={[styles.activityContainer, styles.horizontal]}>\r\n            <ActivityIndicator color={'#a2a2aa'} />\r\n          </View>\r\n            : <View style={[styles.activityContainer, styles.horizontal]}>\r\n              <CardsList\r\n                pageNumber={pageNumber}\r\n                fadeAnimation={fadeAnimation}\r\n                key={JSON.stringify(filterChoice) + JSON.stringify(channelId) + JSON.stringify(filteredCues) + JSON.stringify(channelFilterChoice)}\r\n                cues={filteredCues}\r\n                channelId={channelId}\r\n                createdBy={channelCreatedBy}\r\n                filterChoice={filterChoice}\r\n                openUpdate={(index: any, key: any, pageNumber: any, _id: any, by: any, cId: any) => openUpdate(index, key, pageNumber, _id, by, cId)}\r\n                channelFilterChoice={channelFilterChoice}\r\n              />\r\n            </View>\r\n        }\r\n        <BottomBar\r\n          openWalkthrough={() => openModal('Walkthrough')}\r\n          openCalendar={() => openModal('Calendar')}\r\n          openCreate={() => openModal('Create')}\r\n          openChannels={() => openModal('Channels')}\r\n          openProfile={() => openModal('Profile')}\r\n          filterChoice={filterChoice}\r\n          handleFilterChange={(choice: any) => handleFilterChange(choice)}\r\n          key={Math.random()}\r\n          customCategories={customCategories}\r\n          subscriptions={subscriptions}\r\n          setChannelId={(id: string) => setChannelId(id)}\r\n          setChannelCreatedBy={(id: any) => setChannelCreatedBy(id)}\r\n          setChannelFilterChoice={(choice: string) => setChannelFilterChoice(choice)}\r\n        />\r\n      </View >\r\n      {\r\n        modalType === '' ? <View\r\n          style={{\r\n            width: dimensions.window.width < 1024 ? 0 : dimensions.window.width * 0.7,\r\n            height: dimensions.window.height,\r\n            // paddingHorizontal: dimensions.window.width < 1024 ? 0 : 30,\r\n            paddingTop: 10,\r\n            // backgroundColor: '#f4f4f6',\r\n            backgroundColor: '#fff',\r\n            position: dimensions.window.width < 1024 ? 'absolute' : 'relative'\r\n          }}\r\n        /> :\r\n          <View style={{\r\n            width: dimensions.window.width < 1024 ? '100%' : dimensions.window.width * 0.7,\r\n            height: dimensions.window.height,\r\n            // paddingHorizontal: dimensions.window.width < 1024 ? 0 : 30,\r\n            paddingTop: 0,\r\n            // backgroundColor: '#f4f4f6',\r\n            backgroundColor: '#fff',\r\n            position: dimensions.window.width < 1024 ? 'absolute' : 'relative'\r\n          }}>\r\n            <View style={{ flex: 1, backgroundColor: 'white', paddingHorizontal: 5 }}>\r\n              {modalContent}\r\n            </View>\r\n            {\r\n              dimensions.window.width < 1024 ?\r\n                <TouchableOpacity\r\n                  onPress={() => closeModal()}\r\n                  style={{ height: 50, backgroundColor: '#fff', borderTopWidth: 1, borderColor: '#f4f4f6' }}>\r\n                  <Text style={{ flex: 1, textAlign: 'center', fontSize: 15, lineHeight: 15, marginTop: 15, color: '#202025' }}>\r\n                    <Ionicons name='chevron-back-outline' size={15} /> Back\r\n                  </Text>\r\n                </TouchableOpacity> :\r\n                <View style={{ backgroundColor: '#f4f4f6', height: 0 }} />\r\n            }\r\n          </View>\r\n      }\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default Home\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row'\r\n  },\r\n  activityContainer: {\r\n    borderTopWidth: 0,\r\n    borderBottomWidth: 0,\r\n    borderColor: '#eeeeee',\r\n    height: '64%',\r\n    width: '100%',\r\n    justifyContent: \"center\",\r\n  },\r\n  horizontal: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\"\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    borderBottomColor: '#f4f4f6',\r\n    borderBottomWidth: 1,\r\n    fontSize: 15,\r\n    padding: 15,\r\n    paddingTop: 13,\r\n    paddingBottom: 13,\r\n    marginTop: 5,\r\n    marginBottom: 20\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}