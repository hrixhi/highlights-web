{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\SubscriberCard.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, View, TouchableOpacity } from \"./Themed\";\nimport _ from 'lodash';\nimport { Ionicons } from '@expo/vector-icons';\n\nvar SubscriberCard = function SubscriberCard(props) {\n  var styleObject = styles(props.status);\n  var displayName = props.subscriber.displayName ? props.subscriber.displayName : '';\n  var fullName = props.subscriber.fullName ? props.subscriber.fullName : '';\n  return React.createElement(View, {\n    style: styleObject.swiper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    disabled: props.disabled,\n    onPress: function onPress() {\n      return props.onPress();\n    },\n    key: 'textPage',\n    style: styleObject.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: '#f4f4f6',\n      width: '100%',\n      flexDirection: 'row',\n      display: 'flex',\n      height: '44%',\n      minHeight: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    ellipsizeMode: 'tail',\n    numberOfLines: 1,\n    style: styleObject.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, displayName), fullName === 'submitted' || fullName === 'graded' || props.chat ? React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      backgroundColor: '#f4f4f6'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, props.subscriber.unreadMessages !== undefined && props.subscriber !== null && props.subscriber.unreadMessages !== 0 ? React.createElement(Text, {\n    style: {\n      width: 20,\n      height: 20,\n      borderRadius: 10,\n      backgroundColor: '#d91d56',\n      textAlign: 'center',\n      zIndex: 150,\n      marginLeft: 10,\n      marginTop: 5,\n      color: 'white',\n      lineHeight: 20,\n      fontSize: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 41\n    }\n  }, props.subscriber.unreadMessages) : null, props.hideChevron ? null : React.createElement(Ionicons, {\n    name: \"chevron-forward-outline\",\n    color: \"#a2a2aa\",\n    size: 20,\n    style: {\n      marginTop: 3,\n      marginLeft: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 64\n    }\n  })) : null), React.createElement(View, {\n    style: styleObject.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    ellipsizeMode: 'tail',\n    numberOfLines: 1,\n    style: styleObject.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, fullName))));\n};\n\nexport default React.memo(SubscriberCard, function (prev, next) {\n  return _.isEqual(_objectSpread({}, prev.subscriber), _objectSpread({}, next.subscriber));\n});\n\nvar styles = function styles(status) {\n  return StyleSheet.create({\n    swiper: {\n      height: '100%',\n      width: '100%',\n      maxWidth: 500,\n      borderRadius: 15,\n      overflow: 'hidden',\n      backgroundColor: 'white'\n    },\n    card: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 15,\n      padding: 13,\n      backgroundColor: '#f4f4f6'\n    },\n    text: {\n      display: 'flex',\n      flexDirection: 'column',\n      flex: 1,\n      backgroundColor: '#f4f4f6'\n    },\n    titleArrow: {\n      fontFamily: 'inter',\n      fontSize: 13,\n      paddingTop: 5,\n      color: '#202025',\n      marginLeft: 10\n    },\n    title: {\n      fontFamily: 'inter',\n      fontSize: 13,\n      width: '100%',\n      paddingTop: 5,\n      color: '#202025'\n    },\n    description: {\n      fontSize: 13,\n      color: '#a2a2aa'\n    }\n  });\n};","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/SubscriberCard.tsx"],"names":["React","Text","View","TouchableOpacity","_","Ionicons","SubscriberCard","props","styleObject","styles","status","displayName","subscriber","fullName","swiper","disabled","onPress","card","backgroundColor","width","flexDirection","display","height","minHeight","title","chat","unreadMessages","undefined","borderRadius","textAlign","zIndex","marginLeft","marginTop","color","lineHeight","fontSize","hideChevron","text","description","memo","prev","next","isEqual","StyleSheet","create","maxWidth","overflow","padding","flex","titleArrow","fontFamily","paddingTop"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,gBAArB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,IAAMC,cAAiE,GAAG,SAApEA,cAAoE,CAACC,KAAD,EAAgB;AAEtF,MAAMC,WAAW,GAAGC,MAAM,CAACF,KAAK,CAACG,MAAP,CAA1B;AACA,MAAMC,WAAW,GAAGJ,KAAK,CAACK,UAAN,CAAiBD,WAAjB,GAA+BJ,KAAK,CAACK,UAAN,CAAiBD,WAAhD,GAA8D,EAAlF;AACA,MAAME,QAAQ,GAAGN,KAAK,CAACK,UAAN,CAAiBC,QAAjB,GAA4BN,KAAK,CAACK,UAAN,CAAiBC,QAA7C,GAAwD,EAAzE;AAEA,SACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEL,WAAW,CAACM,MADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,gBAAD;AACI,IAAA,QAAQ,EAAEP,KAAK,CAACQ,QADpB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMR,KAAK,CAACS,OAAN,EAAN;AAAA,KAFb;AAGI,IAAA,GAAG,EAAE,UAHT;AAII,IAAA,KAAK,EAAER,WAAW,CAACS,IAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,KAAK,EAAE,MAArC;AAA6CC,MAAAA,aAAa,EAAE,KAA5D;AAAmEC,MAAAA,OAAO,EAAE,MAA5E;AAAoFC,MAAAA,MAAM,EAAE,KAA5F;AAAmGC,MAAAA,SAAS,EAAE;AAA9G,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAE,MAArB;AACI,IAAA,aAAa,EAAE,CADnB;AAEI,IAAA,KAAK,EAAEf,WAAW,CAACgB,KAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKb,WAHL,CADJ,EAOQE,QAAQ,KAAK,WAAb,IAA4BA,QAAQ,KAAK,QAAzC,IAAqDN,KAAK,CAACkB,IAA3D,GACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEL,MAAAA,aAAa,EAAE,KAAjB;AAAwBF,MAAAA,eAAe,EAAE;AAAzC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQX,KAAK,CAACK,UAAN,CAAiBc,cAAjB,KAAoCC,SAApC,IACOpB,KAAK,CAACK,UAAN,KAAqB,IAD5B,IAEOL,KAAK,CAACK,UAAN,CAAiBc,cAAjB,KAAoC,CAF3C,GAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTP,MAAAA,KAAK,EAAE,EADE;AAETG,MAAAA,MAAM,EAAE,EAFC;AAGTM,MAAAA,YAAY,EAAE,EAHL;AAITV,MAAAA,eAAe,EAAE,SAJR;AAKTW,MAAAA,SAAS,EAAE,QALF;AAMTC,MAAAA,MAAM,EAAE,GANC;AAOTC,MAAAA,UAAU,EAAE,EAPH;AAQTC,MAAAA,SAAS,EAAE,CARF;AASTC,MAAAA,KAAK,EAAE,OATE;AASOC,MAAAA,UAAU,EAAE,EATnB;AASuBC,MAAAA,QAAQ,EAAE;AATjC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWK5B,KAAK,CAACK,UAAN,CAAiBc,cAXtB,CAJJ,GAgBc,IAlBtB,EAqBQnB,KAAK,CAAC6B,WAAN,GAAoB,IAApB,GAA2B,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,yBAAf;AAAyC,IAAA,KAAK,EAAC,SAA/C;AAAyD,IAAA,IAAI,EAAE,EAA/D;AAAmE,IAAA,KAAK,EAAE;AAAEJ,MAAAA,SAAS,EAAE,CAAb;AAAgBD,MAAAA,UAAU,EAAE;AAA5B,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBnC,CADJ,GAyBM,IAhCd,CALJ,EAwCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvB,WAAW,CAAC6B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAE,MAArB;AACI,IAAA,aAAa,EAAE,CADnB;AAEI,IAAA,KAAK,EAAE7B,WAAW,CAAC8B,WAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKzB,QAHL,CADJ,CAxCJ,CAHJ,CADJ;AAsDH,CA5DD;;AA8DA,eAAeb,KAAK,CAACuC,IAAN,CAAWjC,cAAX,EAA2B,UAACkC,IAAD,EAAOC,IAAP,EAAgB;AACtD,SAAOrC,CAAC,CAACsC,OAAF,mBAAeF,IAAI,CAAC5B,UAApB,qBAAuC6B,IAAI,CAAC7B,UAA5C,EAAP;AACH,CAFc,CAAf;;AAIA,IAAMH,MAAW,GAAG,SAAdA,MAAc,CAACC,MAAD;AAAA,SAAiBiC,UAAU,CAACC,MAAX,CAAkB;AACnD9B,IAAAA,MAAM,EAAE;AACJQ,MAAAA,MAAM,EAAE,MADJ;AAEJH,MAAAA,KAAK,EAAE,MAFH;AAGJ0B,MAAAA,QAAQ,EAAE,GAHN;AAIJjB,MAAAA,YAAY,EAAE,EAJV;AAKJkB,MAAAA,QAAQ,EAAE,QALN;AAMJ5B,MAAAA,eAAe,EAAE;AANb,KAD2C;AASnDD,IAAAA,IAAI,EAAE;AACFK,MAAAA,MAAM,EAAE,MADN;AAEFH,MAAAA,KAAK,EAAE,MAFL;AAGFS,MAAAA,YAAY,EAAE,EAHZ;AAIFmB,MAAAA,OAAO,EAAE,EAJP;AAKF7B,MAAAA,eAAe,EAAE;AALf,KAT6C;AAgBnDmB,IAAAA,IAAI,EAAE;AACFhB,MAAAA,OAAO,EAAE,MADP;AAEFD,MAAAA,aAAa,EAAE,QAFb;AAGF4B,MAAAA,IAAI,EAAE,CAHJ;AAIF9B,MAAAA,eAAe,EAAE;AAJf,KAhB6C;AAsBnD+B,IAAAA,UAAU,EAAE;AACRC,MAAAA,UAAU,EAAE,OADJ;AAERf,MAAAA,QAAQ,EAAE,EAFF;AAGRgB,MAAAA,UAAU,EAAE,CAHJ;AAIRlB,MAAAA,KAAK,EAAE,SAJC;AAKRF,MAAAA,UAAU,EAAE;AALJ,KAtBuC;AA6BnDP,IAAAA,KAAK,EAAE;AACH0B,MAAAA,UAAU,EAAE,OADT;AAEHf,MAAAA,QAAQ,EAAE,EAFP;AAGHhB,MAAAA,KAAK,EAAE,MAHJ;AAIHgC,MAAAA,UAAU,EAAE,CAJT;AAKHlB,MAAAA,KAAK,EAAE;AALJ,KA7B4C;AAoCnDK,IAAAA,WAAW,EAAE;AACTH,MAAAA,QAAQ,EAAE,EADD;AAETF,MAAAA,KAAK,EAAE;AAFE;AApCsC,GAAlB,CAAjB;AAAA,CAApB","sourcesContent":["import React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { Text, View, TouchableOpacity } from './Themed';\r\nimport _ from 'lodash'\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst SubscriberCard: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const styleObject = styles(props.status)\r\n    const displayName = props.subscriber.displayName ? props.subscriber.displayName : ''\r\n    const fullName = props.subscriber.fullName ? props.subscriber.fullName : ''\r\n\r\n    return (\r\n        <View\r\n            style={styleObject.swiper}\r\n        >\r\n            <TouchableOpacity\r\n                disabled={props.disabled}\r\n                onPress={() => props.onPress()}\r\n                key={'textPage'}\r\n                style={styleObject.card}>\r\n                <View style={{ backgroundColor: '#f4f4f6', width: '100%', flexDirection: 'row', display: 'flex', height: '44%', minHeight: 25 }}>\r\n                    <Text ellipsizeMode={'tail'}\r\n                        numberOfLines={1}\r\n                        style={styleObject.title}>\r\n                        {displayName}\r\n                    </Text>\r\n                    {\r\n                        fullName === 'submitted' || fullName === 'graded' || props.chat ?\r\n                            <View style={{ flexDirection: 'row', backgroundColor: '#f4f4f6' }}>\r\n                                {\r\n                                    props.subscriber.unreadMessages !== undefined\r\n                                        && props.subscriber !== null\r\n                                        && props.subscriber.unreadMessages !== 0\r\n                                        ?\r\n                                        <Text style={{\r\n                                            width: 20,\r\n                                            height: 20,\r\n                                            borderRadius: 10,\r\n                                            backgroundColor: '#d91d56',\r\n                                            textAlign: 'center',\r\n                                            zIndex: 150,\r\n                                            marginLeft: 10,\r\n                                            marginTop: 5,\r\n                                            color: 'white', lineHeight: 20, fontSize: 10\r\n                                        }}>\r\n                                            {props.subscriber.unreadMessages}\r\n                                        </Text> : null\r\n                                }\r\n                                {\r\n                                    props.hideChevron ? null : <Ionicons name=\"chevron-forward-outline\" color=\"#a2a2aa\" size={20} style={{ marginTop: 3, marginLeft: 10 }} />\r\n                                }\r\n                            </View>\r\n                            : null\r\n                    }\r\n                </View>\r\n                <View style={styleObject.text}>\r\n                    <Text ellipsizeMode={'tail'}\r\n                        numberOfLines={1}\r\n                        style={styleObject.description}>\r\n                        {fullName}\r\n                    </Text>\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default React.memo(SubscriberCard, (prev, next) => {\r\n    return _.isEqual({ ...prev.subscriber }, { ...next.subscriber })\r\n})\r\n\r\nconst styles: any = (status: any) => StyleSheet.create({\r\n    swiper: {\r\n        height: '100%',\r\n        width: '100%',\r\n        maxWidth: 500,\r\n        borderRadius: 15,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white'\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        width: '100%',\r\n        borderRadius: 15,\r\n        padding: 13,\r\n        backgroundColor: '#f4f4f6',\r\n    },\r\n    text: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 1,\r\n        backgroundColor: '#f4f4f6',\r\n    },\r\n    titleArrow: {\r\n        fontFamily: 'inter',\r\n        fontSize: 13,\r\n        paddingTop: 5,\r\n        color: '#202025',\r\n        marginLeft: 10\r\n    },\r\n    title: {\r\n        fontFamily: 'inter',\r\n        fontSize: 13,\r\n        width: '100%',\r\n        paddingTop: 5,\r\n        color: '#202025'\r\n    },\r\n    description: {\r\n        fontSize: 13,\r\n        color: '#a2a2aa',\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}