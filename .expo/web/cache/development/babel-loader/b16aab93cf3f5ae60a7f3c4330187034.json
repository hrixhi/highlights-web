{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\Profile.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Text, View } from \"./Themed\";\nimport ProfileControls from \"./ProfileControls\";\nimport { LanguageSelect } from \"../helpers/LanguageContext\";\n\nvar Profile = function Profile(props) {\n  var _useState = useState(new Animated.Value(0)),\n      _useState2 = _slicedToArray(_useState, 1),\n      modalAnimation = _useState2[0];\n\n  useEffect(function () {\n    Animated.timing(modalAnimation, {\n      toValue: 1,\n      duration: 150,\n      useNativeDriver: true\n    }).start();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      width: '100%',\n      backgroundColor: 'white',\n      borderTopRightRadius: 0,\n      borderTopLeftRadius: 0\n    },\n    onTouchMove: function onTouchMove() {\n      return Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: {\n      width: '100%',\n      paddingHorizontal: Dimensions.get('window').width < 1024 ? 20 : 0,\n      backgroundColor: 'white',\n      opacity: modalAnimation\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      height: 15,\n      paddingBottom: 25,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }), React.createElement(ProfileControls, {\n    saveDataInCloud: function saveDataInCloud() {\n      return props.saveDataInCloud();\n    },\n    reOpenProfile: function reOpenProfile() {\n      return props.reOpenProfile();\n    },\n    closeModal: function closeModal() {\n      return props.closeModal();\n    },\n    reloadData: function reloadData() {\n      return props.reloadData();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      paddingBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, React.createElement(LanguageSelect, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Profile;","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/Profile.tsx"],"names":["React","useState","useEffect","Text","View","ProfileControls","LanguageSelect","Profile","props","Animated","Value","modalAnimation","timing","toValue","duration","useNativeDriver","start","width","backgroundColor","borderTopRightRadius","borderTopLeftRadius","Keyboard","dismiss","paddingHorizontal","Dimensions","get","opacity","textAlign","height","paddingBottom","saveDataInCloud","reOpenProfile","closeModal","reloadData","flexDirection","justifyContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,IAAT,EAAeC,IAAf;AACA,OAAOC,eAAP;AACA,SAASC,cAAT;;AAEA,IAAMC,OAA0D,GAAG,SAA7DA,OAA6D,CAACC,KAAD,EAAgB;AAAA,kBAEtDP,QAAQ,CAAC,IAAIQ,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAF8C;AAAA;AAAA,MAExEC,cAFwE;;AAI/ET,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,QAAQ,CAACG,MAAT,CAAgBD,cAAhB,EAAgC;AAC5BE,MAAAA,OAAO,EAAE,CADmB;AAE5BC,MAAAA,QAAQ,EAAE,GAFkB;AAG5BC,MAAAA,eAAe,EAAE;AAHW,KAAhC,EAIGC,KAJH;AAKH,GANQ,EAMN,EANM,CAAT;AAQA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTC,MAAAA,KAAK,EAAE,MADE;AAETC,MAAAA,eAAe,EAAE,OAFR;AAGTC,MAAAA,oBAAoB,EAAE,CAHb;AAITC,MAAAA,mBAAmB,EAAE;AAJZ,KAAb;AAMI,IAAA,WAAW,EAAE;AAAA,aAAMC,QAAQ,CAACC,OAAT,EAAN;AAAA,KANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQI,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE;AAClBL,MAAAA,KAAK,EAAE,MADW;AAElBM,MAAAA,iBAAiB,EAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBR,KAAzB,GAAiC,IAAjC,GAAwC,EAAxC,GAA6C,CAF9C;AAGlBC,MAAAA,eAAe,EAAE,OAHC;AAIlBQ,MAAAA,OAAO,EAAEf;AAJS,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE,MAAT;AAAiBU,MAAAA,SAAS,EAAE,QAA5B;AAAsCC,MAAAA,MAAM,EAAE,EAA9C;AAAkDC,MAAAA,aAAa,EAAE,EAAjE;AAAqEX,MAAAA,eAAe,EAAE;AAAtF,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAUI,oBAAC,eAAD;AACI,IAAA,eAAe,EAAE;AAAA,aAAMV,KAAK,CAACsB,eAAN,EAAN;AAAA,KADrB;AAEI,IAAA,aAAa,EAAE;AAAA,aAAMtB,KAAK,CAACuB,aAAN,EAAN;AAAA,KAFnB;AAGI,IAAA,UAAU,EAAE;AAAA,aAAMvB,KAAK,CAACwB,UAAN,EAAN;AAAA,KAHhB;AAII,IAAA,UAAU,EAAE;AAAA,aAAMxB,KAAK,CAACyB,UAAN,EAAN;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAgBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE,KAAjB;AAAwBC,MAAAA,cAAc,EAAE,QAAxC;AAAkDN,MAAAA,aAAa,EAAE;AAAjE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAhBJ,CARJ,CADJ;AA+BH,CA3CD;;AA6CA,eAAetB,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Animated, Dimensions, Keyboard } from 'react-native';\r\nimport { Text, View } from './Themed';\r\nimport ProfileControls from './ProfileControls';\r\nimport { LanguageSelect } from '../helpers/LanguageContext';\r\n\r\nconst Profile: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const [modalAnimation] = useState(new Animated.Value(0))\r\n\r\n    useEffect(() => {\r\n        Animated.timing(modalAnimation, {\r\n            toValue: 1,\r\n            duration: 150,\r\n            useNativeDriver: true\r\n        }).start();\r\n    }, [])\r\n\r\n    return (\r\n        <View style={{\r\n            width: '100%',\r\n            backgroundColor: 'white',\r\n            borderTopRightRadius: 0,\r\n            borderTopLeftRadius: 0,\r\n        }}\r\n            onTouchMove={() => Keyboard.dismiss()}\r\n        >\r\n            <Animated.View style={{\r\n                width: '100%',\r\n                paddingHorizontal: Dimensions.get('window').width < 1024 ? 20 : 0,\r\n                backgroundColor: 'white',\r\n                opacity: modalAnimation,\r\n                // paddingLeft: 20\r\n            }}>\r\n                <Text style={{ width: '100%', textAlign: 'center', height: 15, paddingBottom: 25, backgroundColor: 'white' }}>\r\n                    {/* <Ionicons name='chevron-down' size={20} color={'#e0e0e0'} /> */}\r\n                </Text>\r\n                <ProfileControls\r\n                    saveDataInCloud={() => props.saveDataInCloud()}\r\n                    reOpenProfile={() => props.reOpenProfile()}\r\n                    closeModal={() => props.closeModal()}\r\n                    reloadData={() => props.reloadData()}\r\n                />\r\n                <View style={{ flexDirection: 'row', justifyContent: 'center', paddingBottom: 20 }}>\r\n                    <LanguageSelect />\r\n                </View>\r\n            </Animated.View>\r\n        </View >\r\n    );\r\n}\r\n\r\nexport default Profile;"]},"metadata":{},"sourceType":"module"}