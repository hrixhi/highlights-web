{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\CardsList.tsx\";\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"../components/Alert\";\nimport { Text, View } from \"../components/Themed\";\nimport Card from \"./Card\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { PreferredLanguageText } from \"../helpers/LanguageContext\";\n\nvar CardsList = function CardsList(props) {\n  var window = Dimensions.get(\"window\");\n  var screen = Dimensions.get(\"screen\");\n\n  var _useState = useState({\n    window: window,\n    screen: screen\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      dimensions = _useState2[0],\n      setDimensions = _useState2[1];\n\n  var unparsedCues = JSON.parse(JSON.stringify(props.cues));\n\n  var _useState3 = useState(unparsedCues.reverse()),\n      _useState4 = _slicedToArray(_useState3, 1),\n      cues = _useState4[0];\n\n  var _useState5 = useState(props.channelFilterChoice),\n      _useState6 = _slicedToArray(_useState5, 1),\n      filterChoice = _useState6[0];\n\n  var filteredCues = [];\n\n  if (filterChoice === 'All') {\n    filteredCues = cues;\n  } else {\n    filteredCues = cues.filter(function (cue) {\n      return cue.customCategory === filterChoice;\n    });\n  }\n\n  var styles = styleObject(props.channelId);\n  var clickPlusAndSelectAlert = PreferredLanguageText('clickPlusAndSelect');\n  var noChannelCuesAlert = useCallback(function _callee() {\n    var u, user;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(props.channelId && props.channelId !== '')) {\n              _context.next = 5;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n          case 3:\n            u = _context.sent;\n\n            if (u) {\n              user = JSON.parse(u);\n\n              if (user._id.toString().trim() === props.createdBy.toString().trim()) {\n                if (cues.length === 0) {\n                  Alert(clickPlusAndSelectAlert);\n                }\n              }\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [props.channelId, props.createdBy, cues]);\n  var onDimensionsChange = useCallback(function (_ref) {\n    var window = _ref.window,\n        screen = _ref.screen;\n    setDimensions({\n      window: window,\n      screen: screen\n    });\n  }, []);\n  useEffect(function () {\n    Dimensions.addEventListener(\"change\", onDimensionsChange);\n    return function () {\n      Dimensions.removeEventListener(\"change\", onDimensionsChange);\n    };\n  }, []);\n  useEffect(function () {\n    noChannelCuesAlert();\n  }, []);\n  return React.createElement(Animated.View, {\n    style: {\n      borderColor: '#f4f4f6',\n      height: dimensions.window.height * 0.64,\n      opacity: props.fadeAnimation,\n      width: dimensions.window.width < 1024 ? dimensions.window.width : dimensions.window.width * 0.3,\n      paddingHorizontal: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    horizontal: false,\n    contentContainerStyle: {\n      width: dimensions.window.width < 1024 ? dimensions.window.width - 50 : dimensions.window.width * 0.3 - 50,\n      height: dimensions.window.width < 1024 ? '100%' : dimensions.window.height * 0.7 - 2\n    },\n    style: {\n      paddingBottom: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, filteredCues.map(function (cue, index) {\n    return React.createElement(View, {\n      style: {\n        height: 70,\n        marginBottom: 15,\n        maxWidth: 500\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 32\n      }\n    }, React.createElement(Card, {\n      fadeAnimation: props.fadeAnimation,\n      updateModal: function updateModal() {\n        return props.openUpdate(filteredCues[index].key, filteredCues[index].index, 0, filteredCues[index]._id, filteredCues[index].createdBy ? filteredCues[index].createdBy : '', filteredCues[index].channelId ? filteredCues[index].channelId : '');\n      },\n      cue: filteredCues[index],\n      channelId: props.channelId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }));\n  }), filteredCues.length === 0 ? React.createElement(Text, {\n    style: {\n      fontSize: 22,\n      color: '#a2a2aa',\n      textAlign: 'center',\n      fontFamily: 'inter'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 49\n    }\n  }, PreferredLanguageText('noCuesCreated')) : null, React.createElement(View, {\n    style: {\n      height: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default CardsList;\n\nvar styleObject = function styleObject(channelId) {\n  return StyleSheet.create({\n    screen: {\n      height: '100%',\n      width: Dimensions.get('window').width < 1024 ? Dimensions.get('window').width : Dimensions.get('window').width * 0.3 - 36\n    },\n    margin: {\n      height: '2.5%'\n    },\n    marginSmall: {\n      height: '1.25%'\n    },\n    page: {\n      flexDirection: 'column'\n    },\n    badge: {\n      position: 'absolute',\n      alignSelf: 'flex-end',\n      width: 20,\n      height: 20,\n      marginTop: -2,\n      borderRadius: 10,\n      backgroundColor: '#d91d56',\n      textAlign: 'center',\n      zIndex: 50\n    },\n    blueBadge: {\n      position: 'absolute',\n      alignSelf: 'flex-end',\n      width: 20,\n      marginRight: 25,\n      height: 20,\n      marginTop: -2,\n      borderRadius: 10,\n      backgroundColor: '#3B64F8',\n      textAlign: 'center',\n      zIndex: 50\n    }\n  });\n};","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/CardsList.tsx"],"names":["React","useCallback","useEffect","useState","Alert","Text","View","Card","AsyncStorage","ScrollView","PreferredLanguageText","CardsList","props","window","Dimensions","get","screen","dimensions","setDimensions","unparsedCues","JSON","parse","stringify","cues","reverse","channelFilterChoice","filterChoice","filteredCues","filter","cue","customCategory","styles","styleObject","channelId","clickPlusAndSelectAlert","noChannelCuesAlert","getItem","u","user","_id","toString","trim","createdBy","length","onDimensionsChange","addEventListener","removeEventListener","borderColor","height","opacity","fadeAnimation","width","paddingHorizontal","paddingBottom","map","index","marginBottom","maxWidth","openUpdate","key","fontSize","color","textAlign","fontFamily","StyleSheet","create","margin","marginSmall","page","flexDirection","badge","position","alignSelf","marginTop","borderRadius","backgroundColor","zIndex","blueBadge","marginRight"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { StyleSheet, Animated, Dimensions } from 'react-native';\r\nimport Alert from '../components/Alert'\r\nimport { Text, View } from '../components/Themed';\r\nimport Card from './Card'\r\nimport _ from 'lodash'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { PreferredLanguageText } from '../helpers/LanguageContext';\r\n\r\nconst CardsList: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const window = Dimensions.get(\"window\");\r\n    const screen = Dimensions.get(\"screen\");\r\n\r\n    const [dimensions, setDimensions] = useState({ window, screen });\r\n\r\n    const unparsedCues: any[] = JSON.parse(JSON.stringify(props.cues))\r\n    const [cues] = useState<any[]>(unparsedCues.reverse())\r\n    const [filterChoice] = useState(props.channelFilterChoice)\r\n    let filteredCues: any[] = []\r\n    if (filterChoice === 'All') {\r\n        filteredCues = cues\r\n    } else {\r\n        filteredCues = cues.filter((cue) => {\r\n            return cue.customCategory === filterChoice\r\n        })\r\n    }\r\n    const styles = styleObject(props.channelId)\r\n\r\n    const clickPlusAndSelectAlert = PreferredLanguageText('clickPlusAndSelect');\r\n\r\n    const noChannelCuesAlert = useCallback(async () => {\r\n        if (props.channelId && props.channelId !== '') {\r\n            const u = await AsyncStorage.getItem(\"user\")\r\n            if (u) {\r\n                const user = JSON.parse(u)\r\n                if (user._id.toString().trim() === props.createdBy.toString().trim()) {\r\n                    if (cues.length === 0) {\r\n                        Alert(clickPlusAndSelectAlert)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [props.channelId, props.createdBy, cues])\r\n\r\n    const onDimensionsChange = useCallback(({ window, screen }: any) => {\r\n        // window.location.reload()\r\n        setDimensions({ window, screen })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        Dimensions.addEventListener(\"change\", onDimensionsChange);\r\n        return () => {\r\n            Dimensions.removeEventListener(\"change\", onDimensionsChange);\r\n        };\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        noChannelCuesAlert()\r\n    }, [])\r\n\r\n    return (\r\n        <Animated.View style={{\r\n            borderColor: '#f4f4f6',\r\n            // borderBottomWidth: 2,\r\n            // borderTopWidth: 1,\r\n            height: ((dimensions.window.height) * 0.64),\r\n            opacity: props.fadeAnimation,\r\n            width: dimensions.window.width < 1024 ? dimensions.window.width : dimensions.window.width * 0.3,\r\n            paddingHorizontal: 25,\r\n            // paddingTop: 15\r\n        }}>\r\n            <ScrollView\r\n                showsVerticalScrollIndicator={false}\r\n                horizontal={false}\r\n                contentContainerStyle={{\r\n                    width: dimensions.window.width < 1024 ? dimensions.window.width - 50 : (dimensions.window.width * 0.3 - 50),\r\n                    height: dimensions.window.width < 1024 ? '100%' : (((dimensions.window.height) * 0.7) - 2),\r\n                }}\r\n                style={{ paddingBottom: 15 }}\r\n            >\r\n                {/* <View style={styles.marginSmall} /> */}\r\n                {\r\n                    filteredCues.map((cue: any, index: number) => {\r\n                        return <View style={{ height: 70, marginBottom: 15, maxWidth: 500 }} key={index}>\r\n                            <Card\r\n                                fadeAnimation={props.fadeAnimation}\r\n                                updateModal={() => props.openUpdate(\r\n                                    filteredCues[index].key,\r\n                                    filteredCues[index].index,\r\n                                    0,\r\n                                    filteredCues[index]._id,\r\n                                    (filteredCues[index].createdBy ? filteredCues[index].createdBy : ''),\r\n                                    (filteredCues[index].channelId ? filteredCues[index].channelId : '')\r\n                                )}\r\n                                cue={filteredCues[index]}\r\n                                channelId={props.channelId}\r\n                            />\r\n                        </View>\r\n                    })\r\n                }\r\n                {\r\n                    filteredCues.length === 0 ? <Text style={{ fontSize: 22, color: '#a2a2aa', textAlign: 'center', fontFamily: 'inter' }}>\r\n                        {PreferredLanguageText('noCuesCreated')}\r\n                    </Text> : null\r\n                }\r\n                <View style={{ height: 15 }} />\r\n            </ScrollView>\r\n        </Animated.View >\r\n    );\r\n}\r\n\r\nexport default CardsList;\r\n\r\n// export default React.memo(CardsList, (prev, next) => {\r\n//     return _.isEqual(prev.cues, next.cues)\r\n// })\r\n\r\nconst styleObject = (channelId: any) => {\r\n    return StyleSheet.create({\r\n        screen: {\r\n            height: '100%',\r\n            width: Dimensions.get('window').width < 1024 ? Dimensions.get('window').width : Dimensions.get('window').width * 0.3 - 36\r\n        },\r\n        margin: {\r\n            height: '2.5%'\r\n        },\r\n        marginSmall: {\r\n            height: '1.25%'\r\n        },\r\n        page: {\r\n            flexDirection: 'column',\r\n        },\r\n        badge: {\r\n            position: 'absolute',\r\n            alignSelf: 'flex-end',\r\n            width: 20,\r\n            height: 20,\r\n            marginTop: -2,\r\n            borderRadius: 10,\r\n            backgroundColor: '#d91d56',\r\n            textAlign: 'center',\r\n            zIndex: 50\r\n        },\r\n        blueBadge: {\r\n            position: 'absolute',\r\n            alignSelf: 'flex-end',\r\n            width: 20,\r\n            marginRight: 25,\r\n            height: 20,\r\n            marginTop: -2,\r\n            borderRadius: 10,\r\n            backgroundColor: '#3B64F8',\r\n            textAlign: 'center',\r\n            zIndex: 50\r\n        },\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}