{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\Webview.tsx\";\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { WebView } from \"react-native-webview\";\n\nvar Webview = function Webview(props) {\n  var ref = useRef();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      intervalKey = _useState2[0],\n      setIntervalKey = _useState2[1];\n\n  var _useState3 = useState(Math.random()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      key = _useState4[0],\n      setKey = _useState4[1];\n\n  useEffect(function () {\n    var id = setInterval(function () {\n      setKey(Math.random());\n    }, 3000);\n    setIntervalKey(id);\n  }, []);\n  return React.createElement(WebView, {\n    key: key,\n    onLoad: function onLoad(syntheticEvent) {\n      clearInterval(intervalKey);\n    },\n    ref: ref,\n    style: {\n      flex: 1\n    },\n    scrollEnabled: true,\n    javaScriptEnabled: true,\n    domStorageEnabled: true,\n    startInLoadingState: true,\n    allowsFullscreenVideo: true,\n    allowFileAccessFromFileURLs: true,\n    allowUniversalAccessFromFileURLs: true,\n    source: {\n      uri: 'https://docs.google.com/viewer?url=' + encodeURI(props.url) + '&embedded=true'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default Webview;","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/Webview.tsx"],"names":["React","useEffect","useRef","useState","WebView","Webview","props","ref","intervalKey","setIntervalKey","Math","random","key","setKey","id","setInterval","syntheticEvent","clearInterval","flex","uri","encodeURI","url"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,OAAT,QAAwB,sBAAxB;;AAEA,IAAMC,OAA0D,GAAG,SAA7DA,OAA6D,CAACC,KAAD,EAAgB;AAE/E,MAAMC,GAAQ,GAAGL,MAAM,EAAvB;;AAF+E,kBAGzCC,QAAQ,CAAC,CAAD,CAHiC;AAAA;AAAA,MAGxEK,WAHwE;AAAA,MAG3DC,cAH2D;;AAAA,mBAIzDN,QAAQ,CAACO,IAAI,CAACC,MAAL,EAAD,CAJiD;AAAA;AAAA,MAIxEC,GAJwE;AAAA,MAInEC,MAJmE;;AAM/EZ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMa,EAAE,GAAGC,WAAW,CAAC,YAAM;AACzBF,MAAAA,MAAM,CAACH,IAAI,CAACC,MAAL,EAAD,CAAN;AACH,KAFqB,EAEnB,IAFmB,CAAtB;AAGAF,IAAAA,cAAc,CAACK,EAAD,CAAd;AACH,GALQ,EAKN,EALM,CAAT;AAOA,SACI,oBAAC,OAAD;AACI,IAAA,GAAG,EAAEF,GADT;AAEI,IAAA,MAAM,EAAE,gBAACI,cAAD,EAAoB;AACxBC,MAAAA,aAAa,CAACT,WAAD,CAAb;AACH,KAJL;AAKI,IAAA,GAAG,EAAED,GALT;AAMI,IAAA,KAAK,EAAE;AAAEW,MAAAA,IAAI,EAAE;AAAR,KANX;AAOI,IAAA,aAAa,EAAE,IAPnB;AAQI,IAAA,iBAAiB,EAAE,IARvB;AASI,IAAA,iBAAiB,EAAE,IATvB;AAUI,IAAA,mBAAmB,EAAE,IAVzB;AAWI,IAAA,qBAAqB,EAAE,IAX3B;AAYI,IAAA,2BAA2B,EAAE,IAZjC;AAaI,IAAA,gCAAgC,EAAE,IAbtC;AAcI,IAAA,MAAM,EAAE;AACJC,MAAAA,GAAG,EAAE,wCAAwCC,SAAS,CAACd,KAAK,CAACe,GAAP,CAAjD,GAA+D;AADhE,KAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAoBH,CAjCD;;AAmCA,eAAehB,OAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { WebView } from \"react-native-webview\";\r\n\r\nconst Webview: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const ref: any = useRef()\r\n    const [intervalKey, setIntervalKey] = useState(0)\r\n    const [key, setKey] = useState(Math.random())\r\n\r\n    useEffect(() => {\r\n        const id = setInterval(() => {\r\n            setKey(Math.random())\r\n        }, 3000)\r\n        setIntervalKey(id)\r\n    }, [])\r\n\r\n    return (\r\n        <WebView\r\n            key={key}\r\n            onLoad={(syntheticEvent) => {\r\n                clearInterval(intervalKey)\r\n            }}\r\n            ref={ref}\r\n            style={{ flex: 1 }}\r\n            scrollEnabled={true}\r\n            javaScriptEnabled={true}\r\n            domStorageEnabled={true}\r\n            startInLoadingState={true}\r\n            allowsFullscreenVideo={true}\r\n            allowFileAccessFromFileURLs={true}\r\n            allowUniversalAccessFromFileURLs={true}\r\n            source={{\r\n                uri: 'https://docs.google.com/viewer?url=' + encodeURI(props.url) + '&embedded=true'\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Webview"]},"metadata":{},"sourceType":"module"}