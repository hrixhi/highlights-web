{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\Menu.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Picker } from '@react-native-picker/picker';\nimport { Text, View } from \"../components/Themed\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Datetime from 'react-datetime';\nimport { shuffleFrequencyOptions } from \"../helpers/FrequencyOptions\";\n\nvar Menu = function Menu(props) {\n  var _useState = useState(new Animated.Value(0)),\n      _useState2 = _slicedToArray(_useState, 1),\n      modalAnimation = _useState2[0];\n\n  useEffect(function () {\n    Animated.timing(modalAnimation, {\n      toValue: 1,\n      duration: 150,\n      useNativeDriver: true\n    }).start();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'white',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0,\n      paddingTop: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: {\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'white',\n      display: 'flex',\n      flexDirection: 'column',\n      opacity: modalAnimation\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      width: '100%',\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '100%',\n      justifyContent: 'center',\n      backgroundColor: 'white',\n      width: '50%',\n      paddingRight: 7.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, \"Remind \", React.createElement(Ionicons, {\n    name: \"shuffle-outline\",\n    size: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 40\n    }\n  }), \" every\")), React.createElement(View, {\n    style: {\n      height: '100%',\n      justifyContent: 'center',\n      backgroundColor: 'white',\n      width: '50%',\n      paddingLeft: 7.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, React.createElement(Picker, {\n    style: styles.picker,\n    itemStyle: {\n      width: 110,\n      fontSize: 15\n    },\n    selectedValue: props.randomShuffleFrequency,\n    onValueChange: function onValueChange(itemValue) {\n      return props.setRandomShuffleFrequency(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, shuffleFrequencyOptions.map(function (item, index) {\n    return React.createElement(Picker.Item, {\n      color: props.randomShuffleFrequency === item.value ? '#3B64F8' : \"#202025\",\n      label: item.label,\n      value: item.value,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 48\n      }\n    });\n  }))))), React.createElement(View, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      paddingTop: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      width: '100%',\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: '#a2a2aa',\n      textAlign: 'right',\n      paddingHorizontal: 10,\n      paddingLeft: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }, React.createElement(Ionicons, {\n    name: \"bed-outline\",\n    size: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }), \"  from\"), React.createElement(Datetime, {\n    value: props.sleepFrom,\n    initialViewMode: 'time',\n    dateFormat: false,\n    onChange: function onChange(event) {\n      var date = new Date(event);\n      props.setSleepFrom(date);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: '#a2a2aa',\n      textAlign: 'center',\n      paddingHorizontal: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, \"to\"), React.createElement(Datetime, {\n    dateFormat: false,\n    value: props.sleepTo,\n    initialViewMode: 'time',\n    onChange: function onChange(event) {\n      var date = new Date(event);\n      props.setSleepTo(event);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default Menu;\nvar styles = StyleSheet.create({\n  row: {\n    width: '100%',\n    height: '50%',\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  col1: {\n    width: '50%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    paddingRight: 7.5\n  },\n  col2: {\n    width: '50%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    paddingLeft: 7.5\n  },\n  picker: {\n    display: 'flex',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    overflow: 'hidden',\n    fontSize: 12,\n    textAlign: 'center',\n    border: 'none',\n    width: 100\n  },\n  timePicker: {\n    width: 200,\n    fontSize: 15\n  },\n  text: {\n    fontSize: 15,\n    color: '#a2a2aa',\n    textAlign: 'right'\n  }\n});","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/Menu.tsx"],"names":["React","useState","useEffect","Picker","Text","View","Ionicons","Datetime","shuffleFrequencyOptions","Menu","props","Animated","Value","modalAnimation","timing","toValue","duration","useNativeDriver","start","width","height","backgroundColor","borderTopLeftRadius","borderTopRightRadius","paddingTop","display","flexDirection","opacity","justifyContent","paddingRight","styles","text","paddingLeft","picker","fontSize","randomShuffleFrequency","itemValue","setRandomShuffleFrequency","map","item","index","value","label","color","textAlign","paddingHorizontal","sleepFrom","event","date","Date","setSleepFrom","sleepTo","setSleepTo","StyleSheet","create","row","col1","col2","overflow","border","timePicker"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { StyleSheet, Animated } from 'react-native';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { Text, View } from '../components/Themed';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport Datetime from 'react-datetime';\r\nimport { shuffleFrequencyOptions } from '../helpers/FrequencyOptions';\r\n\r\nconst Menu: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const [modalAnimation] = useState(new Animated.Value(0))\r\n\r\n    useEffect(() => {\r\n        Animated.timing(modalAnimation, {\r\n            toValue: 1,\r\n            duration: 150,\r\n            useNativeDriver: true\r\n        }).start();\r\n    }, [])\r\n\r\n    return (\r\n        <View style={{\r\n            width: '100%', height: '100%', backgroundColor: 'white',\r\n            borderTopLeftRadius: 0,\r\n            borderTopRightRadius: 0,\r\n            paddingTop: 200\r\n        }}>\r\n            <Animated.View style={{\r\n                width: '100%',\r\n                height: '100%',\r\n                backgroundColor: 'white',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                opacity: modalAnimation,\r\n            }}>\r\n                <View style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                }}>\r\n                    <View style={{\r\n                        backgroundColor: 'white',\r\n                        width: '100%',\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center'\r\n                    }}>\r\n                        <View style={{ height: '100%', justifyContent: 'center', backgroundColor: 'white', width: '50%', paddingRight: 7.5 }}>\r\n                            <Text style={styles.text}>\r\n                                Remind <Ionicons name='shuffle-outline' size={15} /> every\r\n                        </Text>\r\n                        </View>\r\n                        <View style={{ height: '100%', justifyContent: 'center', backgroundColor: 'white', width: '50%', paddingLeft: 7.5 }}>\r\n                            <Picker\r\n                                style={styles.picker}\r\n                                itemStyle={{\r\n                                    width: 110,\r\n                                    fontSize: 15\r\n                                }}\r\n                                selectedValue={props.randomShuffleFrequency}\r\n                                onValueChange={(itemValue: any) =>\r\n                                    props.setRandomShuffleFrequency(itemValue)\r\n                                }\r\n                            >\r\n                                {\r\n                                    shuffleFrequencyOptions.map((item: any, index: number) => {\r\n                                        return <Picker.Item\r\n                                            color={props.randomShuffleFrequency === item.value ? '#3B64F8' : \"#202025\"}\r\n                                            label={item.label}\r\n                                            value={item.value}\r\n                                            key={index}\r\n                                        />\r\n                                    })\r\n                                }\r\n                            </Picker>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n                <View style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    paddingTop: 50\r\n                }}>\r\n                    <View style={{\r\n                        backgroundColor: 'white',\r\n                        width: '100%',\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'center'\r\n                    }}>\r\n                        <Text style={{\r\n                            fontSize: 15,\r\n                            color: '#a2a2aa',\r\n                            textAlign: 'right',\r\n                            paddingHorizontal: 10,\r\n                            paddingLeft: 0\r\n                        }}>\r\n                            <Ionicons name='bed-outline' size={15} />  from\r\n                    </Text>\r\n                        <Datetime\r\n                            value={props.sleepFrom}\r\n                            initialViewMode={'time'}\r\n                            dateFormat={false}\r\n                            onChange={(event: any) => {\r\n                                const date = new Date(event)\r\n                                props.setSleepFrom(date)\r\n                            }}\r\n                        />\r\n                        <Text style={{\r\n                            fontSize: 15,\r\n                            color: '#a2a2aa',\r\n                            textAlign: 'center',\r\n                            paddingHorizontal: 10\r\n                        }}>\r\n                            to\r\n                    </Text>\r\n                        <Datetime\r\n                            dateFormat={false}\r\n                            value={props.sleepTo}\r\n                            initialViewMode={'time'}\r\n                            onChange={(event: any) => {\r\n                                const date = new Date(event)\r\n                                props.setSleepTo(event)\r\n                            }}\r\n                        />\r\n                    </View>\r\n                </View>\r\n            </Animated.View>\r\n        </View >\r\n    );\r\n}\r\n\r\nexport default Menu\r\n\r\nconst styles = StyleSheet.create({\r\n    row: {\r\n        width: '100%',\r\n        height: '50%',\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    col1: {\r\n        width: '50%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'white',\r\n        paddingRight: 7.5\r\n    },\r\n    col2: {\r\n        width: '50%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'white',\r\n        paddingLeft: 7.5\r\n    },\r\n    picker: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'white',\r\n        overflow: 'hidden',\r\n        fontSize: 12,\r\n        textAlign: 'center',\r\n        border: 'none',\r\n        width: 100\r\n    },\r\n    timePicker: {\r\n        width: 200,\r\n        fontSize: 15,\r\n        // height: 45,\r\n        // color: '#202025'\r\n    },\r\n    text: {\r\n        fontSize: 15,\r\n        color: '#a2a2aa',\r\n        textAlign: 'right',\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}