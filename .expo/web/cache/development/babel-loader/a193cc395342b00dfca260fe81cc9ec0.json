{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\TopBar.tsx\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { View, Text, TouchableOpacity } from \"../components/Themed\";\nimport { Ionicons } from '@expo/vector-icons';\nimport _ from 'lodash';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { fetchAPI } from \"../graphql/FetchAPI\";\nimport { doesChannelNameExist, getMeetingStatus, getOrganisation, updateChannel } from \"../graphql/QueriesAndMutations\";\nimport alert from \"./Alert\";\n\nvar TopBar = function TopBar(props) {\n  var styles = styleObject(props.channelId);\n  var unparsedCues = JSON.parse(JSON.stringify(props.cues));\n\n  var _useState = useState(unparsedCues.reverse()),\n      _useState2 = _slicedToArray(_useState, 1),\n      cues = _useState2[0];\n\n  var _useState3 = useState(props.channelFilterChoice),\n      _useState4 = _slicedToArray(_useState3, 1),\n      filterChoice = _useState4[0];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      channelCategories = _useState6[0],\n      setChannelCategories = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      meetingOn = _useState8[0],\n      setMeetingOn = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isOwner = _useState10[0],\n      setIsOwner = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      school = _useState12[0],\n      setSchool = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      showNavrachanaLogo = _useState14[0],\n      setShowNavrachanaLogo = _useState14[1];\n\n  var editChannelInfo = useCallback(function () {\n    var name = prompt('Update Channel Name', props.filterChoice);\n    var password = prompt('Update Channel Password (Optional)');\n\n    if (!name || name === '') {\n      alert(\"Enter channel name.\");\n      return;\n    }\n\n    var server = fetchAPI(\"\");\n    server.query({\n      query: doesChannelNameExist,\n      variables: {\n        name: name\n      }\n    }).then(function (res) {\n      if (res.data && (res.data.channel.doesChannelNameExist !== true || name.trim() === props.filterChoice.trim())) {\n        server.mutate({\n          mutation: updateChannel,\n          variables: {\n            name: name.trim(),\n            password: password,\n            channelId: props.channelId\n          }\n        }).then(function (res) {\n          if (res.data && res.data.channel.update) {\n            props.loadData();\n            alert(\"Channel updated!\");\n          } else {\n            alert(\"Something went wrong.\");\n          }\n        }).catch(function (err) {\n          alert(\"Something went wrong.\");\n        });\n      } else {\n        alert(\"Channel name in use.\");\n      }\n    }).catch(function (err) {\n      alert(\"Something went wrong.\");\n    });\n  }, [props.filterChoice, props.loadData]);\n  useEffect(function () {\n    (function _callee() {\n      var u, user, server;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n            case 2:\n              u = _context.sent;\n\n              if (u) {\n                user = JSON.parse(u);\n\n                if (user.email === 'hrishi@cuesapp.co') {\n                  setShowNavrachanaLogo(true);\n                }\n\n                server = fetchAPI('');\n                server.query({\n                  query: getOrganisation,\n                  variables: {\n                    userId: user._id\n                  }\n                }).then(function (res) {\n                  if (res.data && res.data.school.findByUserId) {\n                    setSchool(res.data.school.findByUserId);\n                  }\n                });\n\n                if (props.channelId !== '') {\n                  if (user._id.toString().trim() === props.channelCreatedBy.toString().trim()) {\n                    setIsOwner(true);\n                  }\n\n                  server.query({\n                    query: getMeetingStatus,\n                    variables: {\n                      channelId: props.channelId\n                    }\n                  }).then(function (res) {\n                    if (res.data && res.data.channel && res.data.channel.getMeetingStatus) {\n                      setMeetingOn(true);\n                    } else {\n                      setMeetingOn(false);\n                    }\n                  }).catch(function (err) {\n                    return console.log(err);\n                  });\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n\n    var custom = {};\n    var cat = [];\n    cues.map(function (cue) {\n      if (cue.customCategory && cue.customCategory !== '' && !custom[cue.customCategory]) {\n        custom[cue.customCategory] = 'category';\n      }\n    });\n    Object.keys(custom).map(function (key) {\n      cat.push(key);\n    });\n    setChannelCategories(cat);\n  }, [cues, props.channelCreatedBy]);\n  return React.createElement(View, {\n    style: styles.topbar,\n    key: Math.random(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      height: Dimensions.get('window').height * 0.15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      height: '45%',\n      flexDirection: 'row',\n      display: 'flex',\n      paddingHorizontal: 25,\n      paddingTop: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return Linking.openURL('http://www.cuesapp.co');\n    },\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: school && school.logo && school.logo !== '' ? school.logo : require(\"./default-images/cues-logo-black-exclamation-hidden.jpg\"),\n    style: {\n      width: school && school.logo && school.logo !== '' ? Dimensions.get('window').height * 0.07 : Dimensions.get('window').height * 0.07,\n      height: school && school.logo && school.logo !== '' ? Dimensions.get('window').height * 0.05 : Dimensions.get('window').height * 0.03\n    },\n    resizeMode: 'contain',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    key: JSON.stringify(cues),\n    style: {\n      flex: 1,\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, props.channelId !== '' ? React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      flex: 1,\n      justifyContent: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      marginRight: 15\n    },\n    onPress: function onPress() {\n      return props.openMeeting();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: styles.channelText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 41\n    }\n  }, React.createElement(Ionicons, {\n    name: \"videocam-outline\",\n    size: 21,\n    color: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 45\n    }\n  }), props.meetingOn ? React.createElement(View, {\n    style: styles.badge,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 53\n    }\n  }) : null), React.createElement(Text, {\n    style: {\n      fontSize: 9,\n      color: '#a2a2aa',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 41\n    }\n  }, \"Lectures\")), React.createElement(TouchableOpacity, {\n    style: {\n      marginRight: 15\n    },\n    onPress: function onPress() {\n      return props.openSubscribers();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: styles.channelText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 41\n    }\n  }, React.createElement(Ionicons, {\n    name: \"mail-outline\",\n    size: 21,\n    color: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 45\n    }\n  }), props.unreadMessages !== 0 ? React.createElement(View, {\n    style: styles.badge,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 53\n    }\n  }) : null), React.createElement(Text, {\n    style: {\n      fontSize: 9,\n      color: '#a2a2aa',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 41\n    }\n  }, \"Inbox\")), React.createElement(TouchableOpacity, {\n    style: {\n      marginRight: 15\n    },\n    onPress: function onPress() {\n      return props.openDiscussion();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: styles.channelText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 41\n    }\n  }, React.createElement(Ionicons, {\n    name: \"chatbubble-ellipses-outline\",\n    size: 20,\n    color: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 45\n    }\n  }), props.unreadDiscussionThreads !== 0 ? React.createElement(View, {\n    style: styles.badge,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 53\n    }\n  }) : null), React.createElement(Text, {\n    style: {\n      fontSize: 9,\n      color: '#a2a2aa',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 41\n    }\n  }, \"Discussion\")), React.createElement(TouchableOpacity, {\n    style: {\n      marginRight: isOwner ? 15 : 0\n    },\n    onPress: function onPress() {\n      return props.openGrades();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: styles.channelText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 41\n    }\n  }, React.createElement(Ionicons, {\n    name: \"stats-chart-outline\",\n    size: 19,\n    color: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 45\n    }\n  })), React.createElement(Text, {\n    style: {\n      fontSize: 9,\n      color: '#a2a2aa',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 41\n    }\n  }, \"Grades\")), isOwner ? React.createElement(TouchableOpacity, {\n    style: {\n      marginRight: 0\n    },\n    onPress: function onPress() {\n      return editChannelInfo();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: styles.channelText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 49\n    }\n  }, React.createElement(Ionicons, {\n    name: \"settings-outline\",\n    size: 19,\n    color: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 53\n    }\n  })), React.createElement(Text, {\n    style: {\n      fontSize: 9,\n      color: '#a2a2aa',\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 49\n    }\n  }, \"Settings\")) : null) : React.createElement(View, {\n    style: {\n      height: 34\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 33\n    }\n  }))), React.createElement(View, {\n    key: JSON.stringify(cues) + JSON.stringify(filterChoice),\n    style: {\n      width: '100%',\n      height: '55%',\n      flexDirection: 'column',\n      paddingTop: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }), React.createElement(ScrollView, {\n    style: {\n      width: '98.5%',\n      paddingLeft: 20\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: filterChoice === 'All' ? styles.subOutline : styles.sub,\n    onPress: function onPress() {\n      return props.setChannelFilterChoice('All');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#a2a2aa',\n      lineHeight: 20,\n      fontSize: 13\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 29\n    }\n  }, \"All\")), channelCategories.map(function (category) {\n    return React.createElement(TouchableOpacity, {\n      key: Math.random(),\n      style: filterChoice === category ? styles.subOutline : styles.sub,\n      onPress: function onPress() {\n        return props.setChannelFilterChoice(category);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 40\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#a2a2aa',\n        lineHeight: 20,\n        fontSize: 13\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 37\n      }\n    }, category));\n  })))));\n};\n\nexport default React.memo(TopBar, function (prev, next) {\n  return _.isEqual(prev.cues, next.cues) && _.isEqual(prev.channelFilterChoice, next.channelFilterChoice);\n});\n\nvar styleObject = function styleObject(channelId) {\n  return StyleSheet.create({\n    topbar: {\n      height: '18%',\n      width: '100%',\n      flexDirection: 'column',\n      display: 'flex',\n      borderTopRightRadius: 0,\n      borderTopLeftRadius: 0,\n      paddingTop: 25,\n      maxWidth: 550\n    },\n    badge: {\n      position: 'absolute',\n      alignSelf: 'flex-end',\n      width: 7,\n      height: 7,\n      marginRight: -2,\n      marginTop: 0,\n      borderRadius: 15,\n      backgroundColor: '#d91d56',\n      textAlign: 'center',\n      zIndex: 50\n    },\n    text: {\n      textAlign: 'right',\n      color: '#202025',\n      fontSize: 15,\n      paddingRight: 15\n    },\n    subOutline: {\n      fontSize: 15,\n      color: '#a2a2aa',\n      height: 22,\n      paddingHorizontal: 10,\n      lineHeight: 20,\n      borderRadius: 10,\n      borderColor: '#a2a2aa',\n      borderWidth: 1\n    },\n    sub: {\n      fontSize: 15,\n      color: '#a2a2aa',\n      height: 22,\n      paddingHorizontal: 10,\n      lineHeight: 20\n    },\n    channelText: {\n      lineHeight: 21,\n      textAlign: 'center'\n    }\n  });\n};","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/TopBar.tsx"],"names":["React","useState","useEffect","useCallback","View","Text","TouchableOpacity","Ionicons","_","AsyncStorage","fetchAPI","doesChannelNameExist","getMeetingStatus","getOrganisation","updateChannel","alert","TopBar","props","styles","styleObject","channelId","unparsedCues","JSON","parse","stringify","cues","reverse","channelFilterChoice","filterChoice","channelCategories","setChannelCategories","meetingOn","setMeetingOn","isOwner","setIsOwner","school","setSchool","showNavrachanaLogo","setShowNavrachanaLogo","editChannelInfo","name","prompt","password","server","query","variables","then","res","data","channel","trim","mutate","mutation","update","loadData","catch","err","getItem","u","user","email","userId","_id","findByUserId","toString","channelCreatedBy","console","log","custom","cat","map","cue","customCategory","Object","keys","key","push","topbar","Math","random","width","height","Dimensions","get","flexDirection","display","paddingHorizontal","paddingTop","Linking","openURL","backgroundColor","logo","require","flex","justifyContent","marginRight","openMeeting","channelText","badge","fontSize","color","textAlign","openSubscribers","unreadMessages","openDiscussion","unreadDiscussionThreads","openGrades","paddingLeft","subOutline","sub","setChannelFilterChoice","lineHeight","category","memo","prev","next","isEqual","StyleSheet","create","borderTopRightRadius","borderTopLeftRadius","maxWidth","position","alignSelf","marginTop","borderRadius","zIndex","text","paddingRight","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { StyleSheet, Image, ScrollView, Dimensions, Linking } from 'react-native';\r\nimport { View, Text, TouchableOpacity } from '../components/Themed';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport _ from 'lodash'\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { fetchAPI } from '../graphql/FetchAPI';\r\nimport { doesChannelNameExist, getMeetingStatus, getOrganisation, totalUnreadDiscussionThreads, totalUnreadMessages, updateChannel } from '../graphql/QueriesAndMutations';\r\nimport alert from './Alert';\r\n\r\nconst TopBar: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const styles: any = styleObject(props.channelId)\r\n    const unparsedCues: any[] = JSON.parse(JSON.stringify(props.cues))\r\n    const [cues] = useState<any[]>(unparsedCues.reverse())\r\n    const [filterChoice] = useState(props.channelFilterChoice)\r\n    const [channelCategories, setChannelCategories] = useState([])\r\n    const [meetingOn, setMeetingOn] = useState(false)\r\n    const [isOwner, setIsOwner] = useState(false)\r\n    const [school, setSchool] = useState<any>(null)\r\n\r\n    // NAVRACHANA HARD CODE\r\n    const [showNavrachanaLogo, setShowNavrachanaLogo] = useState(false)\r\n\r\n    const editChannelInfo = useCallback(() => {\r\n        const name = prompt('Update Channel Name', props.filterChoice)\r\n        const password = prompt('Update Channel Password (Optional)')\r\n        if (!name || name === '') {\r\n            alert(\"Enter channel name.\")\r\n            return;\r\n        }\r\n        const server = fetchAPI(\"\")\r\n        server.query({\r\n            query: doesChannelNameExist,\r\n            variables: {\r\n                name\r\n            }\r\n        }).then(res => {\r\n            if (res.data && (res.data.channel.doesChannelNameExist !== true || name.trim() === props.filterChoice.trim())) {\r\n                server.mutate({\r\n                    mutation: updateChannel,\r\n                    variables: {\r\n                        name: name.trim(),\r\n                        password,\r\n                        channelId: props.channelId\r\n                    }\r\n                }).then(res => {\r\n                    if (res.data && res.data.channel.update) {\r\n                        props.loadData()\r\n                        alert(\"Channel updated!\")\r\n                    } else {\r\n                        alert(\"Something went wrong.\")\r\n                    }\r\n                }).catch(err => {\r\n                    alert(\"Something went wrong.\")\r\n                })\r\n            } else {\r\n                alert(\"Channel name in use.\")\r\n            }\r\n        }).catch(err => {\r\n            alert(\"Something went wrong.\")\r\n        })\r\n    }, [props.filterChoice, props.loadData])\r\n\r\n    useEffect(() => {\r\n        (\r\n            async () => {\r\n                const u = await AsyncStorage.getItem('user')\r\n                if (u) {\r\n                    const user = JSON.parse(u)\r\n                    if (user.email === 'hrishi@cuesapp.co') {\r\n                        setShowNavrachanaLogo(true)\r\n                    }\r\n                    const server = fetchAPI('')\r\n                    server.query({\r\n                        query: getOrganisation,\r\n                        variables: {\r\n                            userId: user._id\r\n                        }\r\n                    }).then(res => {\r\n                        if (res.data && res.data.school.findByUserId) {\r\n                            setSchool(res.data.school.findByUserId)\r\n                        }\r\n                    })\r\n                    if (props.channelId !== '') {\r\n                        if (user._id.toString().trim() === props.channelCreatedBy.toString().trim()) {\r\n                            setIsOwner(true)\r\n                        }\r\n                        server.query({\r\n                            query: getMeetingStatus,\r\n                            variables: {\r\n                                channelId: props.channelId\r\n                            }\r\n                        }).then(res => {\r\n                            if (res.data && res.data.channel && res.data.channel.getMeetingStatus) {\r\n                                setMeetingOn(true)\r\n                            } else {\r\n                                setMeetingOn(false)\r\n                            }\r\n                        }).catch(err => console.log(err))\r\n                    }\r\n                }\r\n            }\r\n        )()\r\n        const custom: any = {}\r\n        const cat: any = []\r\n        cues.map((cue) => {\r\n            if (cue.customCategory && cue.customCategory !== '' && !custom[cue.customCategory]) {\r\n                custom[cue.customCategory] = 'category'\r\n            }\r\n        })\r\n        Object.keys(custom).map(key => {\r\n            cat.push(key)\r\n        })\r\n        setChannelCategories(cat)\r\n    }, [cues, props.channelCreatedBy])\r\n\r\n    return (\r\n        <View style={styles.topbar} key={Math.random()}>\r\n            {/* <View style={{ width: '80%', height: Dimensions.get('window').height * 0.15 * 0.1, alignSelf: 'center' }} /> */}\r\n            <View style={{ width: '100%', height: Dimensions.get('window').height * 0.15 }}>\r\n                <View style={{\r\n                    height: '45%',\r\n                    flexDirection: 'row',\r\n                    display: 'flex',\r\n                    paddingHorizontal: 25,\r\n                    paddingTop: 5\r\n                }}>\r\n                    <TouchableOpacity\r\n                        onPress={() => Linking.openURL('http://www.cuesapp.co')}\r\n                        style={{ backgroundColor: 'white' }}>\r\n                        {/* NAVRACHANA HARD CODE */}\r\n                        <Image\r\n                            source={\r\n                                // showNavrachanaLogo\r\n                                // ? 'https://cues-files.s3.amazonaws.com/media/png/1624424962493_logo.png' :\r\n                                school && school.logo && school.logo !== ''\r\n                                    ? school.logo\r\n                                    : require('./default-images/cues-logo-black-exclamation-hidden.jpg')\r\n                            }\r\n                            style={{\r\n                                // width: Dimensions.get('window').height * (showNavrachanaLogo ? 0.11 : 0.14) * 0.53456,\r\n                                // height: Dimensions.get('window').height * (showNavrachanaLogo ? 0.22 : 0.14) * 0.2\r\n                                width: school && school.logo && school.logo !== '' ? Dimensions.get('window').height * 0.07 : Dimensions.get('window').height * 0.07,\r\n                                height: school && school.logo && school.logo !== '' ? Dimensions.get('window').height * 0.05 : Dimensions.get('window').height * 0.03\r\n                            }}\r\n                            resizeMode={'contain'}\r\n                        />\r\n                    </TouchableOpacity>\r\n                    <View\r\n                        key={JSON.stringify(cues)}\r\n                        style={{\r\n                            flex: 1, flexDirection: 'row'\r\n                        }}>\r\n                        {\r\n                            props.channelId !== '' ?\r\n                                <View style={{ flexDirection: 'row', flex: 1, justifyContent: 'flex-end' }}>\r\n                                    <TouchableOpacity\r\n                                        style={{ marginRight: 15 }}\r\n                                        onPress={() => props.openMeeting()}>\r\n                                        <Text style={styles.channelText}>\r\n                                            <Ionicons\r\n                                                name='videocam-outline' size={21} color={'#a2a2aa'} />\r\n                                            {\r\n                                                props.meetingOn ?\r\n                                                    <View style={styles.badge} /> : null\r\n                                            }\r\n                                        </Text>\r\n                                        <Text style={{ fontSize: 9, color: '#a2a2aa', textAlign: 'center' }}>\r\n                                            Lectures\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                    <TouchableOpacity\r\n                                        style={{ marginRight: 15 }}\r\n                                        onPress={() => props.openSubscribers()}>\r\n                                        <Text style={styles.channelText}>\r\n                                            <Ionicons name='mail-outline' size={21} color={'#a2a2aa'} />\r\n                                            {\r\n                                                props.unreadMessages !== 0 ?\r\n                                                    <View style={styles.badge} /> : null\r\n                                            }\r\n                                        </Text>\r\n                                        <Text style={{ fontSize: 9, color: '#a2a2aa', textAlign: 'center' }}>\r\n                                            Inbox\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                    <TouchableOpacity\r\n                                        style={{ marginRight: 15 }}\r\n                                        onPress={() => props.openDiscussion()}>\r\n                                        <Text style={styles.channelText}>\r\n                                            <Ionicons name='chatbubble-ellipses-outline' size={20} color={'#a2a2aa'} />\r\n                                            {\r\n                                                props.unreadDiscussionThreads !== 0 ?\r\n                                                    <View style={styles.badge} /> : null\r\n                                            }\r\n                                        </Text>\r\n                                        <Text style={{ fontSize: 9, color: '#a2a2aa', textAlign: 'center' }}>\r\n                                            Discussion\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                    <TouchableOpacity\r\n                                        style={{ marginRight: isOwner ? 15 : 0 }}\r\n                                        onPress={() => props.openGrades()}>\r\n                                        <Text style={styles.channelText}>\r\n                                            <Ionicons name='stats-chart-outline' size={19} color={'#a2a2aa'} />\r\n                                        </Text>\r\n                                        <Text style={{ fontSize: 9, color: '#a2a2aa', textAlign: 'center' }}>\r\n                                            Grades\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                    {\r\n                                        isOwner ?\r\n                                            <TouchableOpacity\r\n                                                style={{ marginRight: 0 }}\r\n                                                onPress={() => editChannelInfo()}>\r\n                                                <Text style={styles.channelText}>\r\n                                                    <Ionicons name='settings-outline' size={19} color={'#a2a2aa'} />\r\n                                                </Text>\r\n                                                <Text style={{ fontSize: 9, color: '#a2a2aa', textAlign: 'center' }}>\r\n                                                    Settings\r\n                                                </Text>\r\n                                            </TouchableOpacity> : null\r\n                                    }\r\n                                </View> :\r\n                                <View style={{ height: 34 }} />\r\n                        }\r\n                    </View>\r\n                </View>\r\n                <View\r\n                    key={JSON.stringify(cues) + JSON.stringify(filterChoice)}\r\n                    style={{\r\n                        width: '100%', height: '55%', flexDirection: 'column',\r\n                        paddingTop: 2\r\n                    }}>\r\n                    <View style={{ flex: 1 }} />\r\n                    {/* <View>\r\n                        <Text\r\n                            style={{\r\n                                // paddingTop: 5,\r\n                                paddingLeft: 5,\r\n                                paddingBottom: 4,\r\n                                fontSize: 8,\r\n                                color: '#a2a2aa'\r\n                            }}>\r\n                            {props.channelId && props.channelId !== '' ? props.filterChoice : 'My Cues'}\r\n                        </Text>\r\n                    </View> */}\r\n                    <ScrollView style={{\r\n                        width: '98.5%',\r\n                        paddingLeft: 20,\r\n                    }} horizontal={true}\r\n                        showsHorizontalScrollIndicator={false}\r\n                    >\r\n                        <TouchableOpacity\r\n                            style={filterChoice === 'All' ? styles.subOutline : styles.sub}\r\n                            onPress={() => props.setChannelFilterChoice('All')}>\r\n                            <Text\r\n                                style={{ color: '#a2a2aa', lineHeight: 20, fontSize: 13 }}\r\n                            >\r\n                                All\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                        {\r\n                            channelCategories.map((category: string) => {\r\n                                return <TouchableOpacity\r\n                                    key={Math.random()}\r\n                                    style={filterChoice === category ? styles.subOutline : styles.sub}\r\n                                    onPress={() => props.setChannelFilterChoice(category)}>\r\n                                    <Text\r\n                                        style={{ color: '#a2a2aa', lineHeight: 20, fontSize: 13 }}>\r\n                                        {category}\r\n                                    </Text>\r\n                                </TouchableOpacity>\r\n                            })\r\n                        }\r\n                    </ScrollView>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(TopBar, (prev, next) => {\r\n    return _.isEqual(prev.cues, next.cues) && _.isEqual(prev.channelFilterChoice, next.channelFilterChoice)\r\n})\r\n\r\nconst styleObject: any = (channelId: any) => StyleSheet.create({\r\n    topbar: {\r\n        height: '18%',\r\n        width: '100%',\r\n        flexDirection: 'column',\r\n        display: 'flex',\r\n        borderTopRightRadius: 0,\r\n        borderTopLeftRadius: 0,\r\n        paddingTop: 25,\r\n        maxWidth: 550\r\n    },\r\n    badge: {\r\n        position: 'absolute',\r\n        alignSelf: 'flex-end',\r\n        width: 7,\r\n        height: 7,\r\n        marginRight: -2,\r\n        marginTop: 0,\r\n        borderRadius: 15,\r\n        backgroundColor: '#d91d56',\r\n        textAlign: 'center',\r\n        zIndex: 50\r\n    },\r\n    text: {\r\n        textAlign: 'right',\r\n        color: '#202025',\r\n        fontSize: 15,\r\n        paddingRight: 15\r\n    },\r\n    subOutline: {\r\n        fontSize: 15,\r\n        color: '#a2a2aa',\r\n        height: 22,\r\n        paddingHorizontal: 10,\r\n        lineHeight: 20,\r\n        borderRadius: 10,\r\n        borderColor: '#a2a2aa',\r\n        borderWidth: 1\r\n    },\r\n    sub: {\r\n        fontSize: 15,\r\n        color: '#a2a2aa',\r\n        height: 22,\r\n        paddingHorizontal: 10,\r\n        lineHeight: 20\r\n    },\r\n    channelText: {\r\n        // paddingTop: 1\r\n        lineHeight: 21,\r\n        textAlign: 'center'\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}