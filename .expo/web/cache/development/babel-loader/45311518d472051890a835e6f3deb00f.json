{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\App.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useCallback, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport useCachedResources from \"./hooks/useCachedResources\";\nimport useColorScheme from \"./hooks/useColorScheme\";\nimport Navigation from \"./navigation/Navigator\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport \"react-datetime/css/react-datetime.css\";\nimport { LanguageProvider } from \"./helpers/LanguageContext\";\nexport default function App() {\n  var isLoadingComplete = useCachedResources();\n  var colorScheme = useColorScheme();\n  var longerSplashScreen = useCallback(function _callee() {\n    var a, b;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SplashScreen.preventAutoHideAsync());\n\n          case 2:\n            a = new Date();\n            b = new Date();\n\n            while (b - a < 1000) {\n              b = new Date();\n            }\n\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(SplashScreen.hideAsync());\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  useEffect(function () {\n    longerSplashScreen();\n  }, []);\n\n  if (!isLoadingComplete) {\n    return null;\n  } else {\n    return React.createElement(SafeAreaProvider, {\n      style: styles.font,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, React.createElement(LanguageProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, React.createElement(Navigation, {\n      colorScheme: colorScheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    })), React.createElement(StatusBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nvar styles = StyleSheet.create({\n  font: {\n    maxHeight: '100%'\n  }\n});","map":{"version":3,"sources":["D:/p_projects/highlights-web/App.tsx"],"names":["StatusBar","React","useCallback","useEffect","SafeAreaProvider","useCachedResources","useColorScheme","Navigation","SplashScreen","LanguageProvider","App","isLoadingComplete","colorScheme","longerSplashScreen","preventAutoHideAsync","a","Date","b","hideAsync","styles","font","StyleSheet","create","maxHeight"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;;AAEA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AACA,OAAO,uCAAP;AACA,SAASC,gBAAT;AAIA,eAAe,SAASC,GAAT,GAAe;AAE5B,MAAMC,iBAAiB,GAAGN,kBAAkB,EAA5C;AACA,MAAMO,WAAW,GAAGN,cAAc,EAAlC;AAEA,MAAMO,kBAAkB,GAAGX,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC/BM,YAAY,CAACM,oBAAb,EAD+B;;AAAA;AAE/BC,YAAAA,CAF+B,GAEtB,IAAIC,IAAJ,EAFsB;AAGjCC,YAAAA,CAHiC,GAGxB,IAAID,IAAJ,EAHwB;;AAIrC,mBAAQC,CAAC,GAAGF,CAAL,GAAU,IAAjB,EAAuB;AACrBE,cAAAA,CAAC,GAAG,IAAID,IAAJ,EAAJ;AACD;;AANoC;AAAA,6CAO/BR,YAAY,CAACU,SAAb,EAP+B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAQnC,EARmC,CAAtC;AAUAf,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAI,CAACF,iBAAL,EAAwB;AACtB,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WACE,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAEQ,MAAM,CAACC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,WAAW,EAAER,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD;AACF;AAED,IAAMO,MAAW,GAAGE,UAAU,CAACC,MAAX,CAAkB;AACpCF,EAAAA,IAAI,EAAE;AACJG,IAAAA,SAAS,EAAE;AADP;AAD8B,CAAlB,CAApB","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport { StyleSheet } from 'react-native'\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport useCachedResources from './hooks/useCachedResources';\r\nimport useColorScheme from './hooks/useColorScheme';\r\nimport Navigation from './navigation/Navigator';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nimport \"react-datetime/css/react-datetime.css\"\r\nimport { LanguageProvider } from \"./helpers/LanguageContext\";\r\n// import {DragDropContextProvider} from 'react-dnd';\r\n// import HTML5Backend from 'react-dnd-html5-backend';\r\n\r\nexport default function App() {\r\n\r\n  const isLoadingComplete = useCachedResources();\r\n  const colorScheme = useColorScheme();\r\n\r\n  const longerSplashScreen = useCallback(async () => {\r\n    await SplashScreen.preventAutoHideAsync();\r\n    const a: any = new Date()\r\n    let b: any = new Date()\r\n    while ((b - a) < 1000) {\r\n      b = new Date()\r\n    }\r\n    await SplashScreen.hideAsync()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    longerSplashScreen()\r\n  }, [])\r\n\r\n  if (!isLoadingComplete) {\r\n    return null;\r\n  } else {\r\n    return (\r\n      <SafeAreaProvider style={styles.font}>\r\n        {/* <DragDropContextProvider backend={HTML5Backend}> */}\r\n        <LanguageProvider>\r\n          <Navigation colorScheme={colorScheme} />\r\n        </LanguageProvider>\r\n        {/* </DragDropContextProvider> */}\r\n        <StatusBar />\r\n      </SafeAreaProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles: any = StyleSheet.create({\r\n  font: {\r\n    maxHeight: '100%',\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}