{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\SubscribersList.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { View, Text, TouchableOpacity } from \"./Themed\";\nimport _ from 'lodash';\nimport { Ionicons } from '@expo/vector-icons';\nimport SubscriberCard from \"./SubscriberCard\";\nimport { RichEditor } from \"react-native-pell-rich-editor\";\nimport { fetchAPI } from \"../graphql/FetchAPI\";\nimport { editPersonalMeeting, findUserById, getMessages, getPersonalMeetingLink, getPersonalMeetingLinkStatus, inviteByEmail, isSubInactive, makeSubActive, makeSubInactive, markMessagesAsRead, submitGrade, unsubscribe, getQuiz, gradeQuiz } from \"../graphql/QueriesAndMutations\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Alert from \"./Alert\";\nimport NewMessage from \"./NewMessage\";\nimport MessageCard from \"./MessageCard\";\nimport { validateEmail } from \"../helpers/emailCheck\";\nimport Select from 'react-select';\nimport { PreferredLanguageText } from \"../helpers/LanguageContext\";\nimport ReactPlayer from 'react-player';\nimport moment from \"moment\";\nimport alert from \"./Alert\";\nimport Webview from \"./Webview\";\nimport QuizGrading from \"./QuizGrading\";\n\nvar SubscribersList = function SubscribersList(props) {\n  var _useState = useState('All'),\n      _useState2 = _slicedToArray(_useState, 2),\n      filterChoice = _useState2[0],\n      setFilterChoice = _useState2[1];\n\n  var unparsedSubs = JSON.parse(JSON.stringify(props.subscribers));\n\n  var _useState3 = useState(unparsedSubs.reverse()),\n      _useState4 = _slicedToArray(_useState3, 1),\n      subscribers = _useState4[0];\n\n  var categories = ['All', 'Read', 'Delivered', 'Not Delivered'];\n  var categoriesLanguageMap = {\n    All: 'all',\n    Read: 'read',\n    Delivered: 'delivered',\n    \"Not Delivered\": 'notDelivered',\n    \"Submitted\": 'submitted',\n    \"Graded\": \"graded\"\n  };\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      showSubmission = _useState6[0],\n      setShowSubmission = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      showAddUsers = _useState8[0],\n      setShowAddUsers = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isOwner = _useState10[0],\n      setIsOwner = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      submission = _useState12[0],\n      setSubmission = _useState12[1];\n\n  var _useState13 = useState(\"0\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      score = _useState14[0],\n      setScore = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      graded = _useState16[0],\n      setGraded = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      status = _useState18[0],\n      setStatus = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      userId = _useState20[0],\n      setUserId = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      messages = _useState22[0],\n      setMessages = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      showChat = _useState24[0],\n      setShowChat = _useState24[1];\n\n  var _useState25 = useState([]),\n      _useState26 = _slicedToArray(_useState25, 2),\n      users = _useState26[0],\n      setUsers = _useState26[1];\n\n  var _useState27 = useState(''),\n      _useState28 = _slicedToArray(_useState27, 2),\n      emails = _useState28[0],\n      setEmails = _useState28[1];\n\n  var _useState29 = useState(false),\n      _useState30 = _slicedToArray(_useState29, 2),\n      showNewGroup = _useState30[0],\n      setShowNewGroup = _useState30[1];\n\n  var RichText = useRef();\n\n  var _useState31 = useState([]),\n      _useState32 = _slicedToArray(_useState31, 2),\n      selected = _useState32[0],\n      setSelected = _useState32[1];\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      expandMenu = _useState34[0],\n      setExpandMenu = _useState34[1];\n\n  var _useState35 = useState(''),\n      _useState36 = _slicedToArray(_useState35, 2),\n      comment = _useState36[0],\n      setComment = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      isQuiz = _useState38[0],\n      setIsQuiz = _useState38[1];\n\n  var _useState39 = useState({}),\n      _useState40 = _slicedToArray(_useState39, 2),\n      quizSolutions = _useState40[0],\n      setQuizSolutions = _useState40[1];\n\n  var _useState41 = useState(false),\n      _useState42 = _slicedToArray(_useState41, 2),\n      imported = _useState42[0],\n      setImported = _useState42[1];\n\n  var _useState43 = useState(''),\n      _useState44 = _slicedToArray(_useState43, 2),\n      url = _useState44[0],\n      setUrl = _useState44[1];\n\n  var _useState45 = useState(''),\n      _useState46 = _slicedToArray(_useState45, 2),\n      type = _useState46[0],\n      setType = _useState46[1];\n\n  var _useState47 = useState(''),\n      _useState48 = _slicedToArray(_useState47, 2),\n      title = _useState48[0],\n      setTitle = _useState48[1];\n\n  var _useState49 = useState({}),\n      _useState50 = _slicedToArray(_useState49, 2),\n      loadedChatWithUser = _useState50[0],\n      setLoadedChatWithUser = _useState50[1];\n\n  var _useState51 = useState(false),\n      _useState52 = _slicedToArray(_useState51, 2),\n      isLoadedUserInactive = _useState52[0],\n      setIsLoadedUserInactive = _useState52[1];\n\n  var _useState53 = useState({}),\n      _useState54 = _slicedToArray(_useState53, 2),\n      user = _useState54[0],\n      setUser = _useState54[1];\n\n  var _useState55 = useState(false),\n      _useState56 = _slicedToArray(_useState55, 2),\n      meetingOn = _useState56[0],\n      setMeetingOn = _useState56[1];\n\n  var _useState57 = useState(''),\n      _useState58 = _slicedToArray(_useState57, 2),\n      meetingLink = _useState58[0],\n      setMeetingLink = _useState58[1];\n\n  var _useState59 = useState(false),\n      _useState60 = _slicedToArray(_useState59, 2),\n      loading = _useState60[0],\n      setLoading = _useState60[1];\n\n  var _useState61 = useState([]),\n      _useState62 = _slicedToArray(_useState61, 2),\n      problems = _useState62[0],\n      setProblems = _useState62[1];\n\n  var _useState63 = useState(''),\n      _useState64 = _slicedToArray(_useState63, 2),\n      submittedAt = _useState64[0],\n      setSubmittedAt = _useState64[1];\n\n  var _useState65 = useState(false),\n      _useState66 = _slicedToArray(_useState65, 2),\n      isV0Quiz = _useState66[0],\n      setIsV0Quiz = _useState66[1];\n\n  var usersAddedAlert = PreferredLanguageText('usersAdded');\n  var emailInviteSentAlert = PreferredLanguageText('emailInviteSent');\n  var unableToLoadMessagesAlert = PreferredLanguageText('unableToLoadMessages');\n  var checkConnectionAlert = PreferredLanguageText('checkConnection');\n  var somethingWentWrongAlert = PreferredLanguageText('somethingWentWrong');\n  var userSubscriptionActivatedAlert = PreferredLanguageText('userSubscriptionActivated');\n  var userSubscriptionInactivatedAlert = PreferredLanguageText('userSubscriptionInactivated');\n  var userRemovedAlert = PreferredLanguageText('userRemoved');\n  var alreadyUnsubscribedAlert = PreferredLanguageText('alreadyUnsubscribed');\n\n  if (props.cue && props.cue.submission) {\n    categories.push('Submitted');\n    categories.push('Graded');\n  }\n\n  var styles = styleObject();\n  var filteredSubscribers = [];\n\n  switch (filterChoice) {\n    case 'All':\n      filteredSubscribers = subscribers;\n      break;\n\n    case 'Read':\n      filteredSubscribers = subscribers.filter(function (item) {\n        return item.fullName === 'read';\n      });\n      break;\n\n    case 'Delivered':\n      filteredSubscribers = subscribers.filter(function (item) {\n        return item.fullName === 'delivered';\n      });\n      break;\n\n    case 'Not Delivered':\n      filteredSubscribers = subscribers.filter(function (item) {\n        return item.fullName === 'not-delivered';\n      });\n      break;\n\n    case 'Graded':\n      filteredSubscribers = subscribers.filter(function (item) {\n        return item.fullName === 'graded';\n      });\n      break;\n\n    case 'Submitted':\n      filteredSubscribers = subscribers.filter(function (item) {\n        return item.fullName === 'submitted';\n      });\n      break;\n\n    default:\n      filteredSubscribers = subscribers;\n      break;\n  }\n\n  var windowHeight = Dimensions.get('window').width < 1024 ? Dimensions.get('window').height - 30 : Dimensions.get('window').height;\n  var key = JSON.stringify(filteredSubscribers);\n  var options = filteredSubscribers.map(function (sub) {\n    return {\n      value: sub._id,\n      label: sub.displayName\n    };\n  });\n  var group = selected.map(function (s) {\n    return s.value;\n  });\n  console.log(props);\n  useEffect(function () {\n    if (submission[0] === '{' && submission[submission.length - 1] === '}') {\n      console.log(submission);\n      var obj = JSON.parse(submission);\n\n      if (obj.solutions) {\n        setIsQuiz(true);\n        setQuizSolutions(obj);\n      } else {\n        setImported(true);\n        setUrl(obj.url);\n        setType(obj.type);\n        setTitle(obj.title);\n      }\n    } else {\n      setImported(false);\n      setUrl('');\n      setType('');\n      setTitle('');\n    }\n  }, [submission]);\n  useEffect(function () {\n    if (quizSolutions) {\n      if (quizSolutions.problemScores) {\n        setIsV0Quiz(false);\n      } else {\n        setIsV0Quiz(true);\n      }\n    }\n  }, [quizSolutions]);\n  useEffect(function () {\n    if (isQuiz) {\n      var obj = JSON.parse(props.cue.original);\n      console.log(obj);\n      setLoading(true);\n\n      if (obj.quizId) {\n        var server = fetchAPI(\"\");\n        server.query({\n          query: getQuiz,\n          variables: {\n            quizId: obj.quizId\n          }\n        }).then(function (res) {\n          console.log(res.data);\n\n          if (res.data && res.data.quiz.getQuiz) {\n            console.log(res.data.quiz.getQuiz.problems);\n            setProblems(res.data.quiz.getQuiz.problems);\n            setLoading(false);\n          }\n        });\n      }\n    }\n  }, [isQuiz]);\n  var onChange = useCallback(function (value) {\n    setSelected(value);\n  }, [subscribers]);\n  var handleGradeSubmit = useCallback(function () {\n    if (Number.isNaN(Number(score))) {\n      return;\n    }\n\n    var server = fetchAPI('');\n    server.mutate({\n      mutation: submitGrade,\n      variables: {\n        cueId: props.cueId,\n        userId: userId,\n        score: score,\n        comment: comment\n      }\n    }).then(function (res) {\n      if (res.data.cue.submitGrade) {\n        props.reload();\n        setShowSubmission(false);\n      }\n    });\n  }, [score, userId, props.cueId, comment]);\n  useEffect(function () {\n    (function _callee() {\n      var u, _user;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n            case 2:\n              u = _context.sent;\n\n              if (u) {\n                _user = JSON.parse(u);\n                setUser(_user);\n\n                if (_user._id && props.channelCreatedBy && _user._id.toString().trim() === props.channelCreatedBy.toString().trim()) {\n                  setIsOwner(true);\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, [props.channelCreatedBy]);\n  useEffect(function () {\n    if (users && users.length > 0) {\n      var server = fetchAPI('');\n      server.query({\n        query: getPersonalMeetingLinkStatus,\n        variables: {\n          users: users\n        }\n      }).then(function (res) {\n        if (res.data && res.data.channel.getPersonalMeetingLinkStatus) {\n          setMeetingOn(true);\n          getMeetingLink();\n        }\n      });\n    }\n  }, [users]);\n  var getMeetingLink = useCallback(function () {\n    var server = fetchAPI('');\n    server.query({\n      query: getPersonalMeetingLink,\n      variables: {\n        userId: user._id,\n        users: users\n      }\n    }).then(function (res) {\n      if (res.data && res.data.channel.getPersonalMeetingLink && res.data.channel.getPersonalMeetingLink !== 'error') {\n        setMeetingLink(res.data.channel.getPersonalMeetingLink);\n      }\n    }).catch(function (err) {\n      console.log(err);\n      alert('Something went wrong');\n    });\n  }, [users, user]);\n  var updateMeetingStatus = useCallback(function () {\n    var server = fetchAPI('');\n    server.mutate({\n      mutation: editPersonalMeeting,\n      variables: {\n        users: users,\n        channelId: props.channelId,\n        meetingOn: !meetingOn\n      }\n    }).then(function (res) {\n      if (res.data && res.data.channel.editPersonalMeeting) {\n        if (!meetingOn) {\n          getMeetingLink();\n        }\n\n        setMeetingOn(!meetingOn);\n      } else {\n        console.log(res);\n        alert('Something went wrong');\n      }\n    }).catch(function (err) {\n      console.log(err);\n      alert('Something went wrong');\n    });\n  }, [users, props.channelId, meetingOn, getMeetingLink]);\n  var showError = useCallback(function () {\n    alert('Meeting is inactive.');\n  }, []);\n  var submitEmails = useCallback(function _callee2() {\n    var lowerCaseEmails, parsedEmails, unparsedEmails, server;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            lowerCaseEmails = emails.toLowerCase();\n            parsedEmails = [];\n            unparsedEmails = lowerCaseEmails.split('\\n');\n            unparsedEmails.map(function (email) {\n              if (validateEmail(email)) {\n                parsedEmails.push(email);\n              }\n            });\n\n            if (!(parsedEmails.length === 0)) {\n              _context2.next = 6;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            server = fetchAPI('');\n            server.mutate({\n              mutation: inviteByEmail,\n              variables: {\n                emails: parsedEmails,\n                channelId: props.channelId\n              }\n            }).then(function (res) {\n              if (res.data.user.inviteByEmail) {\n                setEmails('');\n                Alert(usersAddedAlert, emailInviteSentAlert);\n                props.reload();\n              }\n            }).catch(function (err) {\n              console.log(err);\n            });\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [emails, props.channelId]);\n  var loadChat = useCallback(function _callee3(userId, groupId) {\n    var u, parsedUser, server;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            u = _context3.sent;\n\n            if (u) {\n              parsedUser = JSON.parse(u);\n              setUsers([parsedUser._id, userId]);\n              setMeetingOn(false);\n              server = fetchAPI('');\n              server.query({\n                query: getMessages,\n                variables: {\n                  users: [parsedUser._id, userId]\n                }\n              }).then(function (res) {\n                setMessages(res.data.message.getMessagesThread);\n                setShowChat(true);\n              }).catch(function (err) {\n                Alert(unableToLoadMessagesAlert, checkConnectionAlert);\n              });\n              server.mutate({\n                mutation: markMessagesAsRead,\n                variables: {\n                  userId: parsedUser._id,\n                  groupId: groupId\n                }\n              }).then(function (res) {\n                props.refreshUnreadMessagesCount();\n              }).catch(function (e) {\n                return console.log(e);\n              });\n              server.query({\n                query: findUserById,\n                variables: {\n                  id: userId\n                }\n              }).then(function (res) {\n                if (res.data && res.data.user.findById) {\n                  setLoadedChatWithUser(res.data.user.findById);\n                  server.query({\n                    query: isSubInactive,\n                    variables: {\n                      userId: res.data.user.findById._id,\n                      channelId: props.channelId\n                    }\n                  }).then(function (res2) {\n                    if (res2.data && res2.data.subscription.isSubInactive) {\n                      setIsLoadedUserInactive(true);\n                    }\n                  }).catch(function (err) {\n                    return console.log(err);\n                  });\n                }\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [props.channelId]);\n  var loadGroupChat = useCallback(function _callee4(groupUsers, groupId) {\n    var u, parsedUser, server;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            u = _context4.sent;\n\n            if (u) {\n              parsedUser = JSON.parse(u);\n              setUsers(groupUsers);\n              setMeetingOn(false);\n              server = fetchAPI('');\n              server.query({\n                query: getMessages,\n                variables: {\n                  users: groupUsers\n                }\n              }).then(function (res) {\n                setMessages(res.data.message.getMessagesThread);\n                setShowChat(true);\n              }).catch(function (err) {\n                Alert(unableToLoadMessagesAlert, checkConnectionAlert);\n              });\n              server.mutate({\n                mutation: markMessagesAsRead,\n                variables: {\n                  userId: parsedUser._id,\n                  groupId: groupId\n                }\n              }).then(function (res) {\n                return console.log(res);\n              }).catch(function (e) {\n                return console.log(e);\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  var handleDelete = useCallback(function () {\n    Alert(\"Remove user from channel?\", \"\", [{\n      text: \"Cancel\",\n      style: \"cancel\",\n      onPress: function onPress() {\n        return;\n      }\n    }, {\n      text: \"Okay\",\n      onPress: function onPress() {\n        var server;\n        return _regeneratorRuntime.async(function onPress$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                server = fetchAPI('');\n                server.mutate({\n                  mutation: unsubscribe,\n                  variables: {\n                    userId: loadedChatWithUser._id,\n                    channelId: props.channelId,\n                    keepContent: false\n                  }\n                }).then(function _callee5(res) {\n                  return _regeneratorRuntime.async(function _callee5$(_context5) {\n                    while (1) {\n                      switch (_context5.prev = _context5.next) {\n                        case 0:\n                          if (res.data.subscription && res.data.subscription.unsubscribe) {\n                            Alert(userRemovedAlert);\n                            props.reload();\n                            setShowChat(false);\n                            setIsLoadedUserInactive(false);\n                            setLoadedChatWithUser({});\n                          } else {\n                            Alert(alreadyUnsubscribedAlert);\n                          }\n\n                        case 1:\n                        case \"end\":\n                          return _context5.stop();\n                      }\n                    }\n                  }, null, null, null, Promise);\n                }).catch(function (err) {\n                  Alert(somethingWentWrongAlert, checkConnectionAlert);\n                });\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }]);\n  }, [loadedChatWithUser, props.channelId, props.reload]);\n  var handleSubStatusChange = useCallback(function () {\n    var alertMessage = isLoadedUserInactive ? \"Make user active?\" : \"Make user inactive?\";\n    Alert(alertMessage, \"\", [{\n      text: \"Cancel\",\n      style: \"cancel\",\n      onPress: function onPress() {\n        return;\n      }\n    }, {\n      text: \"Okay\",\n      onPress: function onPress() {\n        var server;\n        return _regeneratorRuntime.async(function onPress$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                server = fetchAPI('');\n                server.mutate({\n                  mutation: isLoadedUserInactive ? makeSubActive : makeSubInactive,\n                  variables: {\n                    userId: loadedChatWithUser._id,\n                    channelId: props.channelId\n                  }\n                }).then(function (res) {\n                  if (isLoadedUserInactive) {\n                    if (res.data && res.data.subscription.makeActive) {\n                      Alert(userSubscriptionActivatedAlert);\n                      props.reload();\n                      setShowChat(false);\n                      setIsLoadedUserInactive(false);\n                      setLoadedChatWithUser({});\n                    }\n                  } else {\n                    if (res.data && res.data.subscription.makeInactive) {\n                      Alert(userSubscriptionInactivatedAlert);\n                      props.reload();\n                      setShowChat(false);\n                      setIsLoadedUserInactive(false);\n                      setLoadedChatWithUser({});\n                    }\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }]);\n  }, [isLoadedUserInactive, loadedChatWithUser, props.channelId]);\n\n  var onGradeQuiz = function onGradeQuiz(problemScores, score) {\n    var server = fetchAPI(\"\");\n    server.mutate({\n      mutation: gradeQuiz,\n      variables: {\n        cueId: props.cueId,\n        userId: userId,\n        score: score,\n        problemScores: problemScores\n      }\n    }).then(function (res) {\n      if (res.data && res.data.cue.gradeQuiz) {\n        props.reload();\n        setShowSubmission(false);\n      }\n    });\n  };\n\n  var renderQuizSubmissions = function renderQuizSubmissions() {\n    var initiatedAt = quizSolutions.initiatedAt,\n        solutions = quizSolutions.solutions;\n    return React.createElement(View, {\n      style: {\n        width: '100%',\n        marginLeft: '5%',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 17\n      }\n    }, initiatedAt ? React.createElement(Text, {\n      style: {\n        width: '100%',\n        height: 15,\n        paddingBottom: 25\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 28\n      }\n    }, \"Quiz initiated at \", moment(new Date(initiatedAt)).format('MMMM Do YYYY, h:mm a')) : null, React.createElement(Text, {\n      style: {\n        width: '100%',\n        height: 15,\n        marginTop: '20px',\n        paddingBottom: 25,\n        fontWeight: 'bold'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 13\n      }\n    }, \"Selected Answers:\"), React.createElement(View, {\n      style: {\n        marginTop: '20px',\n        display: 'flex',\n        flexDirection: \"column\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 13\n      }\n    }, solutions.map(function (solution, index) {\n      if (solution.selected) {\n        var answers = solution.selected;\n        var selectedAnswers = answers.filter(function (ans) {\n          return ans.isSelected;\n        });\n        var selectedAnswersString = [];\n        selectedAnswers.forEach(function (ans) {\n          selectedAnswersString.push(ans.options);\n        });\n        return React.createElement(Text, {\n          style: {\n            width: '100%',\n            height: 15,\n            marginTop: '10px',\n            paddingBottom: 25\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 33\n          }\n        }, \"Problem \", index + 1, \" : \", selectedAnswersString.join(\", \"));\n      } else {\n        return React.createElement(Text, {\n          style: {\n            width: '100%',\n            height: 15,\n            marginTop: '10px',\n            paddingBottom: 25\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 33\n          }\n        }, \"Problem \", index + 1, \" : \", solution.response);\n      }\n    })));\n  };\n\n  return React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      width: '100%',\n      minHeight: windowHeight - 200,\n      paddingHorizontal: 20,\n      borderTopRightRadius: 0,\n      borderTopLeftRadius: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 9\n    }\n  }, props.cueId ? null : React.createElement(Text, {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      height: 15,\n      paddingBottom: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 38\n    }\n  }), showSubmission || showChat || showAddUsers || showNewGroup ? React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      paddingBottom: 15,\n      maxWidth: 600\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 588,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 25\n    }\n  }, React.createElement(TouchableOpacity, {\n    key: Math.random(),\n    style: {\n      backgroundColor: 'white'\n    },\n    onPress: function onPress() {\n      if (showChat) {\n        setShowChat(false);\n        setIsLoadedUserInactive(false);\n        setLoadedChatWithUser({});\n        setUsers([]);\n        props.reload();\n      } else {\n        setShowSubmission(false);\n        setStatus(\"\");\n        setScore(\"0\");\n        setUserId(\"\");\n      }\n\n      setShowAddUsers(false);\n      setShowNewGroup(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      lineHeight: 23\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 33\n    }\n  }, React.createElement(Ionicons, {\n    name: \"chevron-back-outline\",\n    size: 23,\n    color: '#202025',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 37\n    }\n  }))), loadedChatWithUser && loadedChatWithUser !== {} && !showNewGroup && !showAddUsers && users.length < 3 && !showSubmission ? React.createElement(View, {\n    style: {\n      marginHorizontal: 20,\n      paddingTop: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 41\n    }\n  }, loadedChatWithUser.displayName, \", \", loadedChatWithUser.fullName, \" \", loadedChatWithUser.email ? \"(\" + loadedChatWithUser.email + \")\" : '')) : null), isOwner && !props.cueId && !showAddUsers && !showNewGroup && !showSubmission && users.length < 3 ? React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      flex: 1,\n      paddingLeft: 43\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 35\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleDelete();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#a2a2aa',\n      fontSize: 11,\n      lineHeight: 30,\n      textAlign: 'right',\n      paddingRight: 10,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 41\n    }\n  }, PreferredLanguageText('removeFromChannel')))) : null, showChat ? React.createElement(View, {\n    style: {\n      flexDirection: Dimensions.get('window').width < 768 ? 'column' : 'row',\n      flex: 1,\n      paddingLeft: 43\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 40\n    }\n  }, isOwner ? React.createElement(View, {\n    style: {\n      marginBottom: 25,\n      backgroundColor: 'white',\n      minWidth: '40%,'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 41\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 673,\n      columnNumber: 45\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      height: 40,\n      marginTop: 20,\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 49\n    }\n  }, React.createElement(Switch, {\n    value: meetingOn,\n    onValueChange: function onValueChange() {\n      return updateMeetingStatus();\n    },\n    style: {\n      height: 20,\n      marginRight: 20\n    },\n    trackColor: {\n      false: '#f4f4f6',\n      true: '#3B64F8'\n    },\n    activeThumbColor: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 53\n    }\n  }), React.createElement(View, {\n    style: {\n      width: '100%',\n      backgroundColor: 'white',\n      paddingTop: 3\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 53\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 15,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 57\n    }\n  }, \"Meeting\"))), React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa',\n      paddingTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 49\n    }\n  }, \"Restart switch if you cannot join.\"))) : null, React.createElement(View, {\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 33\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      if (meetingOn) {\n        window.open(meetingLink, '_blank');\n      } else {\n        showError();\n      }\n    },\n    style: {\n      backgroundColor: 'white',\n      overflow: 'hidden',\n      height: 35,\n      marginTop: 15,\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      lineHeight: 35,\n      color: meetingOn ? '#fff' : '#202025',\n      fontSize: 12,\n      backgroundColor: meetingOn ? '#3B64F8' : '#f4f4f6',\n      paddingHorizontal: 25,\n      fontFamily: 'inter',\n      height: 35,\n      width: 175,\n      borderRadius: 15,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 41\n    }\n  }, \"Join Meeting\")), React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa',\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 37\n    }\n  }, \"Enabled only when meeting in session.\"))) : null) : React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      flexDirection: 'row',\n      paddingBottom: 25,\n      maxWidth: 500\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 21\n    }\n  }, props.cueId ? null : React.createElement(Text, {\n    ellipsizeMode: \"tail\",\n    style: {\n      fontSize: 11,\n      paddingBottom: 20,\n      textTransform: \"uppercase\",\n      flex: 1,\n      lineHeight: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 33\n    }\n  }, PreferredLanguageText('inbox')), !props.cueId && isOwner ? React.createElement(TouchableOpacity, {\n    key: Math.random(),\n    style: {\n      backgroundColor: 'white'\n    },\n    onPress: function onPress() {\n      return setShowNewGroup(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 763,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      textAlign: 'right',\n      lineHeight: 23,\n      marginRight: 20,\n      color: '#a2a2aa',\n      fontSize: 11\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 37\n    }\n  }, \"NEW GROUP\")) : null, isOwner && !props.cueId ? React.createElement(TouchableOpacity, {\n    key: Math.random(),\n    style: {\n      backgroundColor: 'white'\n    },\n    onPress: function onPress() {\n      return setShowAddUsers(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      textAlign: 'right',\n      lineHeight: 23,\n      marginRight: 20,\n      color: '#a2a2aa',\n      fontSize: 11\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 37\n    }\n  }, \"ADD USERS\")) : null), !showAddUsers ? subscribers.length === 0 ? React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      color: '#a2a2aa',\n      fontSize: 22,\n      paddingTop: 100,\n      paddingHorizontal: 5,\n      fontFamily: 'inter',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 25\n    }\n  }, props.cueId ? PreferredLanguageText('noStatuses') : PreferredLanguageText('noStudents'))) : React.createElement(View, {\n    style: {\n      width: '100%',\n      backgroundColor: 'white',\n      flex: 1\n    },\n    key: key,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 21\n    }\n  }, !showSubmission ? showChat ? React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    keyboardDismissMode: 'on-drag',\n    style: {\n      flex: 1,\n      paddingTop: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 41\n    }\n  }, messages.length === 0 ? React.createElement(Text, {\n    style: {\n      width: '100%',\n      color: '#a2a2aa',\n      fontSize: 22,\n      paddingVertical: 100,\n      paddingHorizontal: 5,\n      fontFamily: 'inter',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 53\n    }\n  }, PreferredLanguageText('noMessages')) : null, messages.map(function (message) {\n    return React.createElement(View, {\n      style: {\n        width: '100%',\n        maxWidth: 500,\n        paddingBottom: 15,\n        backgroundColor: 'white'\n      },\n      key: Math.random(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 60\n      }\n    }, React.createElement(MessageCard, {\n      user: user,\n      message: message,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 57\n      }\n    }));\n  }), React.createElement(View, {\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 45\n    }\n  }, React.createElement(NewMessage, {\n    cueId: props.cueId,\n    channelId: props.channelId,\n    parentId: null,\n    users: users,\n    back: function back() {\n      props.reload();\n      setShowChat(false);\n      setIsLoadedUserInactive(false);\n      setLoadedChatWithUser({});\n    },\n    placeholder: PreferredLanguageText('message') + \"...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 49\n    }\n  }))) : showNewGroup ? React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    keyboardDismissMode: 'on-drag',\n    style: {\n      flex: 1,\n      paddingTop: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    ellipsizeMode: \"tail\",\n    style: {\n      color: '#a2a2aa',\n      fontSize: 15,\n      flex: 1,\n      lineHeight: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 53\n    }\n  }, PreferredLanguageText('newGroup')), React.createElement(View, {\n    style: {\n      maxHeight: 175,\n      flexDirection: 'column',\n      marginTop: 25,\n      overflow: 'scroll',\n      marginBottom: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 53\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '90%',\n      padding: 5,\n      height: expandMenu ? 175 : 'auto',\n      maxWidth: 500\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 57\n    }\n  }, React.createElement(Select, {\n    placeholder: \"Share with\",\n    styles: {\n      menu: function menu(provided, state) {\n        return _objectSpread(_objectSpread({}, provided), {}, {\n          zIndex: 9999,\n          overflow: 'scroll',\n          height: 125,\n          display: 'flex',\n          margin: 5,\n          width: '97%',\n          boxShadow: 'none'\n        });\n      },\n      option: function option(provided, state) {\n        return _objectSpread(_objectSpread({}, provided), {}, {\n          fontFamily: 'overpass',\n          color: '#a2a2aa',\n          fontSize: 10,\n          height: 25,\n          width: '97%'\n        });\n      },\n      input: function input(styles) {\n        return {\n          width: '100%',\n          border: 'none',\n          borderWidth: 0,\n          fontSize: 12\n        };\n      },\n      placeholder: function placeholder(styles) {\n        return _objectSpread(_objectSpread({}, styles), {}, {\n          fontFamily: 'overpass',\n          color: '#a2a2aa',\n          fontSize: 12\n        });\n      },\n      multiValueLabel: function multiValueLabel(styles, _ref) {\n        var data = _ref.data;\n        return _objectSpread(_objectSpread({}, styles), {}, {\n          color: '#202025',\n          fontFamily: 'overpass'\n        });\n      },\n      multiValue: function multiValue(styles, _ref2) {\n        var data = _ref2.data;\n        return _objectSpread(_objectSpread({}, styles), {}, {\n          backgroundColor: '#f4f4f6',\n          fontFamily: 'overpass'\n        });\n      }\n    },\n    value: selected,\n    isMulti: true,\n    onMenuOpen: function onMenuOpen() {\n      return setExpandMenu(true);\n    },\n    onMenuClose: function onMenuClose() {\n      return setExpandMenu(false);\n    },\n    name: \"Share with\",\n    className: \"basic-multi-select\",\n    classNamePrefix: \"select\",\n    onChange: onChange,\n    options: options,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 61\n    }\n  }))), React.createElement(View, {\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 53\n    }\n  }, React.createElement(NewMessage, {\n    cueId: props.cueId,\n    channelId: props.channelId,\n    parentId: null,\n    users: group,\n    addUserId: true,\n    back: function back() {\n      props.reload();\n      setShowChat(false);\n      setIsLoadedUserInactive(false);\n      setLoadedChatWithUser({});\n      setShowNewGroup(false);\n    },\n    placeholder: PreferredLanguageText('message') + \"...\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 57\n    }\n  }))) : React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    horizontal: false,\n    key: filterChoice + key,\n    contentContainerStyle: {\n      width: '100%',\n      height: props.cueId ? windowHeight - 150 : '100%',\n      marginBottom: props.cueId ? 20 : 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 948,\n      columnNumber: 51\n    }\n  }, !props.cueId || props.cueId === '' ? React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      borderBottomWidth: 1,\n      borderBottomColor: '#f4f4f6',\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 61\n    }\n  }, props.groups.length > 0 ? props.groups.map(function (group, index) {\n    var displayName = '';\n    console.log(group);\n    group.userNames.map(function (u) {\n      displayName += u.displayName + ', ';\n    });\n    return React.createElement(View, {\n      style: styles.col,\n      key: filterChoice + key + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 80\n      }\n    }, React.createElement(SubscriberCard, {\n      chat: !props.cueId || props.cueId === '' ? true : false,\n      fadeAnimation: props.fadeAnimation,\n      subscriber: {\n        displayName: displayName,\n        fullName: 'Team',\n        unreadMessages: group.unreadMessages\n      },\n      onPress: function onPress() {\n        loadGroupChat(group.users, group._id);\n      },\n      status: !props.cueId ? false : true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 967,\n        columnNumber: 77\n      }\n    }));\n  }) : React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 981,\n      columnNumber: 75\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      color: '#a2a2aa',\n      fontSize: 22,\n      paddingHorizontal: 50,\n      paddingBottom: 100,\n      paddingTop: 50,\n      fontFamily: 'inter',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 73\n    }\n  }, PreferredLanguageText('noGroups')))) : null, filteredSubscribers.map(function (subscriber, index) {\n    return React.createElement(View, {\n      style: styles.col,\n      key: filterChoice + key + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 68\n      }\n    }, React.createElement(SubscriberCard, {\n      chat: !props.cueId || props.cueId === '' ? true : false,\n      fadeAnimation: props.fadeAnimation,\n      subscriber: subscriber,\n      onPress: function onPress() {\n        if (props.cueId && props.cueId !== null) {\n          if (subscriber.fullName === 'submitted' || subscriber.fullName === 'graded') {\n            setSubmission(subscriber.submission);\n            setSubmittedAt(subscriber.submittedAt);\n            setShowSubmission(true);\n            setStatus(subscriber.fullName);\n            setScore(subscriber.score);\n            setGraded(subscriber.graded);\n            setComment(subscriber.comment);\n            setUserId(subscriber.userId);\n          }\n        } else {\n          console.log(subscriber);\n          loadChat(subscriber._id, subscriber.groupId);\n        }\n      },\n      status: !props.cueId ? false : true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 993,\n        columnNumber: 65\n      }\n    }));\n  })) : isQuiz && !isV0Quiz ? React.createElement(QuizGrading, {\n    loading: loading,\n    problems: problems,\n    solutions: quizSolutions,\n    partiallyGraded: !graded,\n    onGradeQuiz: onGradeQuiz,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1023,\n      columnNumber: 37\n    }\n  }) : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1031,\n      columnNumber: 33\n    }\n  }, React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    keyboardDismissMode: 'on-drag',\n    contentContainerStyle: {\n      height: windowHeight - 132\n    },\n    style: {\n      flex: 1,\n      paddingTop: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1032,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: {\n      width: Dimensions.get('window').width < 1024 ? '100%' : '60%',\n      alignSelf: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1039,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#202025',\n      fontSize: 14,\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1042,\n      columnNumber: 45\n    }\n  }, PreferredLanguageText('score')), React.createElement(TextInput, {\n    value: score,\n    style: styles.input,\n    placeholder: '0-100',\n    onChangeText: function onChangeText(val) {\n      return setScore(val);\n    },\n    placeholderTextColor: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1045,\n      columnNumber: 45\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: '#202025',\n      fontSize: 14,\n      paddingVertical: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1052,\n      columnNumber: 45\n    }\n  }, PreferredLanguageText('comment')), React.createElement(TextInput, {\n    value: comment,\n    style: {\n      height: 200,\n      backgroundColor: '#f4f4f6',\n      borderRadius: 10,\n      fontSize: 15,\n      padding: 15,\n      paddingTop: 13,\n      paddingBottom: 13,\n      marginTop: 5,\n      marginBottom: 20\n    },\n    placeholder: 'Optional',\n    onChangeText: function onChangeText(val) {\n      return setComment(val);\n    },\n    placeholderTextColor: '#a2a2aa',\n    multiline: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 45\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: 'white',\n      justifyContent: 'center',\n      display: 'flex',\n      flexDirection: 'row',\n      marginTop: 25,\n      marginBottom: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1073,\n      columnNumber: 45\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleGradeSubmit();\n    },\n    style: {\n      backgroundColor: 'white',\n      borderRadius: 15,\n      overflow: 'hidden',\n      height: 35\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1083,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      lineHeight: 35,\n      color: 'white',\n      fontSize: 12,\n      backgroundColor: '#3B64F8',\n      paddingHorizontal: 25,\n      fontFamily: 'inter',\n      height: 35\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1091,\n      columnNumber: 53\n    }\n  }, status === 'graded' ? 'REGRADE' : 'ENTER GRADE')))), React.createElement(Text, {\n    style: {\n      color: '#202025',\n      fontSize: 14,\n      paddingBottom: 25,\n      marginLeft: '5%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1106,\n      columnNumber: 41\n    }\n  }, PreferredLanguageText('viewSubmission')), imported && !isQuiz ? React.createElement(View, {\n    style: {\n      width: '40%',\n      alignSelf: 'flex-start',\n      marginLeft: '10%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1111,\n      columnNumber: 49\n    }\n  }, React.createElement(TextInput, {\n    editable: false,\n    value: title,\n    style: styles.input,\n    placeholder: 'Title',\n    onChangeText: function onChangeText(val) {\n      return setTitle(val);\n    },\n    placeholderTextColor: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1112,\n      columnNumber: 53\n    }\n  })) : null, isQuiz && Object.keys(quizSolutions).length > 0 ? renderQuizSubmissions() : null, !imported && !isQuiz ? React.createElement(RichEditor, {\n    disabled: true,\n    key: Math.random(),\n    containerStyle: {\n      backgroundColor: '#f4f4f6',\n      padding: 3,\n      paddingTop: 5,\n      paddingBottom: 10,\n      borderRadius: 15\n    },\n    ref: RichText,\n    style: {\n      width: '100%',\n      backgroundColor: '#f4f4f6',\n      borderRadius: 15,\n      minHeight: 450\n    },\n    editorStyle: {\n      backgroundColor: '#f4f4f6',\n      placeholderColor: '#a2a2aa',\n      color: '#202025',\n      contentCSSText: 'font-size: 13px;'\n    },\n    initialContentHTML: submission,\n    placeholder: \"Title\",\n    onChange: function onChange(text) {},\n    allowFileAccess: true,\n    allowFileAccessFromFileURLs: true,\n    allowUniversalAccessFromFileURLs: true,\n    allowsFullscreenVideo: true,\n    allowsInlineMediaPlayback: true,\n    allowsLinkPreview: true,\n    allowsBackForwardNavigationGestures: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1128,\n      columnNumber: 49\n    }\n  }) : React.createElement(View, {\n    style: {\n      width: '100%',\n      minHeight: 500,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1162,\n      columnNumber: 53\n    }\n  }, type === 'mp4' || type === 'mp3' || type === 'mov' || type === 'mpeg' || type === 'mp2' || type === 'wav' ? React.createElement(ReactPlayer, {\n    url: url,\n    controls: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1171,\n      columnNumber: 69\n    }\n  }) : !isQuiz ? React.createElement(View, {\n    key: url,\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1173,\n      columnNumber: 80\n    }\n  }, React.createElement(Webview, {\n    key: url,\n    url: url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1177,\n      columnNumber: 73\n    }\n  })) : null))), !props.cueId || showSubmission ? null : React.createElement(View, {\n    style: {\n      width: '100%',\n      height: 70,\n      backgroundColor: 'white',\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1192,\n      columnNumber: 33\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      height: 20,\n      width: '100%',\n      paddingTop: 15\n    },\n    style: {},\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 37\n    }\n  }, unparsedSubs.length === 0 ? null : categories.map(function (category) {\n    return React.createElement(TouchableOpacity, {\n      key: Math.random(),\n      style: filterChoice === category ? styles.cusCategoryOutline : styles.cusCategory,\n      onPress: function onPress() {\n        return setFilterChoice(category);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1211,\n        columnNumber: 56\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#a2a2aa',\n        lineHeight: 20,\n        fontSize: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1215,\n        columnNumber: 53\n      }\n    }, PreferredLanguageText(categoriesLanguageMap[category])));\n  })))) : React.createElement(View, {\n    style: {\n      width: 500,\n      maxWidth: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1229,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#202025',\n      fontSize: 14,\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1230,\n      columnNumber: 25\n    }\n  }, PreferredLanguageText('inviteByEmail')), React.createElement(TextInput, {\n    value: emails,\n    style: {\n      height: 200,\n      backgroundColor: '#f4f4f6',\n      borderRadius: 10,\n      fontSize: 15,\n      padding: 15,\n      paddingTop: 13,\n      paddingBottom: 13,\n      marginTop: 5,\n      marginBottom: 20\n    },\n    placeholder: 'Enter one email per line.',\n    onChangeText: function onChangeText(val) {\n      return setEmails(val);\n    },\n    placeholderTextColor: '#a2a2aa',\n    multiline: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1233,\n      columnNumber: 25\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return submitEmails();\n    },\n    style: {\n      backgroundColor: 'white',\n      overflow: 'hidden',\n      height: 35,\n      marginTop: 15,\n      width: '100%',\n      justifyContent: 'center',\n      flexDirection: 'row',\n      marginBottom: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1251,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      lineHeight: 35,\n      color: '#202025s',\n      fontSize: 12,\n      backgroundColor: '#f4f4f6',\n      paddingHorizontal: 25,\n      fontFamily: 'inter',\n      height: 35,\n      width: 150,\n      borderRadius: 15,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1262,\n      columnNumber: 29\n    }\n  }, PreferredLanguageText(\"addUsers\"))), React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      lineHeight: 35,\n      color: '#202025s',\n      fontSize: 12,\n      paddingHorizontal: 25,\n      width: \"100%\",\n      fontFamily: 'inter',\n      borderRadius: 15,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1279,\n      columnNumber: 25\n    }\n  }, filteredSubscribers.length !== 0 ? PreferredLanguageText('existingUsers') : PreferredLanguageText('noExistingUsers')), React.createElement(View, {\n    style: {\n      display: \"flex\",\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1292,\n      columnNumber: 25\n    }\n  }, filteredSubscribers.map(function (sub) {\n    return React.createElement(View, {\n      style: {\n        backgroundColor: '#f4f4f6',\n        width: '100%',\n        padding: 10,\n        borderRadius: 8,\n        marginBottom: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1295,\n        columnNumber: 45\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1302,\n        columnNumber: 41\n      }\n    }, sub.displayName), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1305,\n        columnNumber: 41\n      }\n    }, sub.email));\n  }))));\n};\n\nexport default React.memo(SubscribersList, function (prev, next) {\n  return _.isEqual(prev.threads, next.threads);\n});\n\nvar styleObject = function styleObject() {\n  return StyleSheet.create({\n    screen: {\n      flex: 1\n    },\n    margin: {\n      height: 20,\n      backgroundColor: 'white'\n    },\n    marginSmall: {\n      height: 10,\n      backgroundColor: 'white'\n    },\n    row: {\n      flexDirection: 'row',\n      display: 'flex',\n      width: '100%',\n      backgroundColor: 'white'\n    },\n    col: {\n      width: '100%',\n      height: 70,\n      marginBottom: 15,\n      backgroundColor: 'white'\n    },\n    channelText: {\n      textAlign: 'center',\n      overflow: 'hidden'\n    },\n    input: {\n      width: '100%',\n      borderBottomColor: '#f4f4f6',\n      borderBottomWidth: 1,\n      fontSize: 15,\n      padding: 15,\n      paddingTop: 13,\n      paddingBottom: 13,\n      marginTop: 5,\n      marginBottom: 20\n    },\n    outline: {\n      borderRadius: 10,\n      borderWidth: 1,\n      borderColor: '#a2a2aa',\n      color: 'white'\n    },\n    cusCategory: {\n      fontSize: 15,\n      backgroundColor: 'white',\n      paddingHorizontal: 10,\n      height: 22\n    },\n    cusCategoryOutline: {\n      fontSize: 15,\n      backgroundColor: 'white',\n      paddingHorizontal: 10,\n      height: 22,\n      borderRadius: 10,\n      borderWidth: 1,\n      borderColor: '#a2a2aa',\n      color: 'white'\n    }\n  });\n};","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/SubscribersList.tsx"],"names":["React","useCallback","useEffect","useRef","useState","View","Text","TouchableOpacity","_","Ionicons","SubscriberCard","RichEditor","fetchAPI","editPersonalMeeting","findUserById","getMessages","getPersonalMeetingLink","getPersonalMeetingLinkStatus","inviteByEmail","isSubInactive","makeSubActive","makeSubInactive","markMessagesAsRead","submitGrade","unsubscribe","getQuiz","gradeQuiz","AsyncStorage","Alert","NewMessage","MessageCard","validateEmail","Select","PreferredLanguageText","ReactPlayer","moment","alert","Webview","QuizGrading","SubscribersList","props","filterChoice","setFilterChoice","unparsedSubs","JSON","parse","stringify","subscribers","reverse","categories","categoriesLanguageMap","All","Read","Delivered","showSubmission","setShowSubmission","showAddUsers","setShowAddUsers","isOwner","setIsOwner","submission","setSubmission","score","setScore","graded","setGraded","status","setStatus","userId","setUserId","messages","setMessages","showChat","setShowChat","users","setUsers","emails","setEmails","showNewGroup","setShowNewGroup","RichText","selected","setSelected","expandMenu","setExpandMenu","comment","setComment","isQuiz","setIsQuiz","quizSolutions","setQuizSolutions","imported","setImported","url","setUrl","type","setType","title","setTitle","loadedChatWithUser","setLoadedChatWithUser","isLoadedUserInactive","setIsLoadedUserInactive","user","setUser","meetingOn","setMeetingOn","meetingLink","setMeetingLink","loading","setLoading","problems","setProblems","submittedAt","setSubmittedAt","isV0Quiz","setIsV0Quiz","usersAddedAlert","emailInviteSentAlert","unableToLoadMessagesAlert","checkConnectionAlert","somethingWentWrongAlert","userSubscriptionActivatedAlert","userSubscriptionInactivatedAlert","userRemovedAlert","alreadyUnsubscribedAlert","cue","push","styles","styleObject","filteredSubscribers","filter","item","fullName","windowHeight","Dimensions","get","width","height","key","options","map","sub","value","_id","label","displayName","group","s","console","log","length","obj","solutions","problemScores","original","quizId","server","query","variables","then","res","data","quiz","onChange","handleGradeSubmit","Number","isNaN","mutate","mutation","cueId","reload","getItem","u","channelCreatedBy","toString","trim","channel","getMeetingLink","catch","err","updateMeetingStatus","channelId","showError","submitEmails","lowerCaseEmails","toLowerCase","parsedEmails","unparsedEmails","split","email","loadChat","groupId","parsedUser","message","getMessagesThread","refreshUnreadMessagesCount","e","id","findById","res2","subscription","loadGroupChat","groupUsers","handleDelete","text","style","onPress","keepContent","handleSubStatusChange","alertMessage","makeActive","makeInactive","onGradeQuiz","renderQuizSubmissions","initiatedAt","marginLeft","display","flexDirection","paddingBottom","Date","format","marginTop","fontWeight","solution","index","answers","selectedAnswers","ans","isSelected","selectedAnswersString","forEach","join","response","backgroundColor","minHeight","paddingHorizontal","borderTopRightRadius","borderTopLeftRadius","textAlign","maxWidth","Math","random","lineHeight","marginHorizontal","paddingTop","flex","paddingLeft","color","fontSize","paddingRight","textTransform","marginBottom","minWidth","marginRight","false","true","window","open","overflow","fontFamily","borderRadius","paddingVertical","maxHeight","padding","menu","provided","state","zIndex","margin","boxShadow","option","input","border","borderWidth","placeholder","multiValueLabel","multiValue","borderBottomWidth","borderBottomColor","groups","userNames","col","fadeAnimation","unreadMessages","subscriber","alignSelf","val","justifyContent","Object","keys","placeholderColor","contentCSSText","category","cusCategoryOutline","cusCategory","alignItems","memo","prev","next","isEqual","threads","StyleSheet","create","screen","marginSmall","row","channelText","outline","borderColor"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { StyleSheet, ScrollView, TextInput, Dimensions, Button, Switch } from 'react-native';\r\nimport { View, Text, TouchableOpacity } from './Themed';\r\nimport _ from 'lodash'\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport SubscriberCard from './SubscriberCard';\r\nimport {\r\n    RichEditor\r\n} from \"react-native-pell-rich-editor\";\r\nimport { fetchAPI } from '../graphql/FetchAPI';\r\nimport { editPersonalMeeting, findUserById, getMessages, getPersonalMeetingLink, getPersonalMeetingLinkStatus, inviteByEmail, isSubInactive, makeSubActive, makeSubInactive, markMessagesAsRead, submitGrade, unsubscribe, getQuiz, gradeQuiz } from '../graphql/QueriesAndMutations';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport Alert from './Alert';\r\nimport NewMessage from './NewMessage';\r\nimport MessageCard from './MessageCard';\r\nimport { validateEmail } from '../helpers/emailCheck';\r\nimport Select from 'react-select'\r\nimport { PreferredLanguageText } from '../helpers/LanguageContext';\r\nimport ReactPlayer from 'react-player'\r\nimport moment from \"moment\"\r\nimport alert from './Alert';\r\nimport Webview from './Webview'\r\nimport QuizGrading from './QuizGrading';\r\n\r\nconst SubscribersList: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const [filterChoice, setFilterChoice] = useState('All')\r\n    const unparsedSubs: any[] = JSON.parse(JSON.stringify(props.subscribers))\r\n    const [subscribers] = useState<any[]>(unparsedSubs.reverse())\r\n    const categories = ['All', 'Read', 'Delivered', 'Not Delivered']\r\n    const categoriesLanguageMap: { [label: string]: string } = {\r\n        All: 'all',\r\n        Read: 'read',\r\n        Delivered: 'delivered',\r\n        \"Not Delivered\": 'notDelivered',\r\n        \"Submitted\": 'submitted',\r\n        \"Graded\": \"graded\"\r\n    }\r\n    const [showSubmission, setShowSubmission] = useState(false)\r\n    const [showAddUsers, setShowAddUsers] = useState(false)\r\n    const [isOwner, setIsOwner] = useState(false)\r\n    const [submission, setSubmission] = useState<any>('')\r\n    const [score, setScore] = useState(\"0\")\r\n    const [graded, setGraded] = useState(false)\r\n    const [status, setStatus] = useState(\"\")\r\n    const [userId, setUserId] = useState(\"\")\r\n    const [messages, setMessages] = useState<any[]>([])\r\n    const [showChat, setShowChat] = useState(false)\r\n    const [users, setUsers] = useState<any>([])\r\n    const [emails, setEmails] = useState('')\r\n    const [showNewGroup, setShowNewGroup] = useState(false)\r\n    const RichText: any = useRef()\r\n    const [selected, setSelected] = useState<any[]>([])\r\n    const [expandMenu, setExpandMenu] = useState(false)\r\n    const [comment, setComment] = useState('')\r\n    const [isQuiz, setIsQuiz] = useState(false);\r\n    const [quizSolutions, setQuizSolutions] = useState<any>({});\r\n    const [imported, setImported] = useState(false)\r\n    const [url, setUrl] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const [loadedChatWithUser, setLoadedChatWithUser] = useState<any>({})\r\n    const [isLoadedUserInactive, setIsLoadedUserInactive] = useState(false)\r\n    const [user, setUser] = useState<any>({})\r\n    const [meetingOn, setMeetingOn] = useState(false)\r\n    const [meetingLink, setMeetingLink] = useState('')\r\n    const [loading, setLoading] = useState(false);\r\n    const [problems, setProblems] = useState<any[]>([]);\r\n    const [submittedAt, setSubmittedAt] = useState('');\r\n    const [isV0Quiz, setIsV0Quiz] = useState(false)\r\n\r\n    // Alerts\r\n    const usersAddedAlert = PreferredLanguageText('usersAdded')\r\n    const emailInviteSentAlert = PreferredLanguageText('emailInviteSent')\r\n    const unableToLoadMessagesAlert = PreferredLanguageText('unableToLoadMessages')\r\n    const checkConnectionAlert = PreferredLanguageText('checkConnection')\r\n    const somethingWentWrongAlert = PreferredLanguageText('somethingWentWrong');\r\n    const userSubscriptionActivatedAlert = PreferredLanguageText('userSubscriptionActivated')\r\n    const userSubscriptionInactivatedAlert = PreferredLanguageText('userSubscriptionInactivated')\r\n    const userRemovedAlert = PreferredLanguageText('userRemoved');\r\n    const alreadyUnsubscribedAlert = PreferredLanguageText('alreadyUnsubscribed')\r\n\r\n    if (props.cue && props.cue.submission) {\r\n        categories.push('Submitted')\r\n        categories.push('Graded')\r\n    }\r\n    const styles = styleObject()\r\n    let filteredSubscribers: any = []\r\n    switch (filterChoice) {\r\n        case 'All':\r\n            filteredSubscribers = subscribers\r\n            break;\r\n        case 'Read':\r\n            filteredSubscribers = subscribers.filter(item => {\r\n                return item.fullName === 'read'\r\n            })\r\n            break;\r\n        case 'Delivered':\r\n            filteredSubscribers = subscribers.filter(item => {\r\n                return item.fullName === 'delivered'\r\n            })\r\n            break;\r\n        case 'Not Delivered':\r\n            filteredSubscribers = subscribers.filter(item => {\r\n                return item.fullName === 'not-delivered'\r\n            })\r\n            break;\r\n        case 'Graded':\r\n            filteredSubscribers = subscribers.filter(item => {\r\n                return item.fullName === 'graded'\r\n            })\r\n            break;\r\n        case 'Submitted':\r\n            filteredSubscribers = subscribers.filter(item => {\r\n                return item.fullName === 'submitted'\r\n            })\r\n            break;\r\n        default:\r\n            filteredSubscribers = subscribers\r\n            break;\r\n    }\r\n    const windowHeight = Dimensions.get('window').width < 1024 ? Dimensions.get('window').height - 30 : Dimensions.get('window').height;\r\n    const key = JSON.stringify(filteredSubscribers)\r\n    let options = filteredSubscribers.map((sub: any) => {\r\n        return {\r\n            value: sub._id, label: sub.displayName\r\n        }\r\n    })\r\n    const group = selected.map(s => {\r\n        return s.value\r\n    })\r\n\r\n    console.log(props);\r\n\r\n    useEffect(() => {\r\n        if (submission[0] === '{' && submission[submission.length - 1] === '}') {\r\n            console.log(submission);\r\n            const obj = JSON.parse(submission)\r\n            if (obj.solutions) {\r\n                setIsQuiz(true)\r\n                setQuizSolutions(obj)\r\n\r\n            } else {\r\n                setImported(true)\r\n                setUrl(obj.url)\r\n                setType(obj.type)\r\n                setTitle(obj.title)\r\n            }\r\n        } else {\r\n            setImported(false)\r\n            setUrl('')\r\n            setType('')\r\n            setTitle('')\r\n        }\r\n    }, [submission])\r\n\r\n    useEffect(() => {\r\n        if (quizSolutions) {\r\n            if (quizSolutions.problemScores) {\r\n                setIsV0Quiz(false)\r\n            } else {\r\n                setIsV0Quiz(true)\r\n            }\r\n        }\r\n    }, [quizSolutions])\r\n\r\n    useEffect(() => {\r\n        if (isQuiz) {\r\n            const obj = JSON.parse(props.cue.original);\r\n\r\n            console.log(obj)\r\n            setLoading(true)\r\n\r\n            if (obj.quizId) {\r\n                const server = fetchAPI(\"\");\r\n                    server\r\n                        .query({\r\n                            query: getQuiz,\r\n                            variables: {\r\n                                quizId: obj.quizId\r\n                            }\r\n                        })\r\n                        .then(res => {\r\n                            console.log(res.data);\r\n\r\n                            if (res.data && res.data.quiz.getQuiz) {\r\n                                console.log(res.data.quiz.getQuiz.problems)\r\n                                setProblems(res.data.quiz.getQuiz.problems);\r\n                                setLoading(false);\r\n                            }\r\n                        });\r\n\r\n            }\r\n        }\r\n    }, [isQuiz])\r\n\r\n    const onChange = useCallback((value) => {\r\n        setSelected(value)\r\n    }, [subscribers])\r\n\r\n    const handleGradeSubmit = useCallback(() => {\r\n        if (Number.isNaN(Number(score))) {\r\n            return\r\n        }\r\n        const server = fetchAPI('')\r\n        server.mutate({\r\n            mutation: submitGrade,\r\n            variables: {\r\n                cueId: props.cueId,\r\n                userId,\r\n                score,\r\n                comment\r\n            }\r\n        }).then(res => {\r\n            if (res.data.cue.submitGrade) {\r\n                props.reload()\r\n                setShowSubmission(false)\r\n            }\r\n        })\r\n    }, [score, userId, props.cueId, comment])\r\n\r\n    useEffect(() => {\r\n        (\r\n            async () => {\r\n                const u = await AsyncStorage.getItem('user')\r\n                if (u) {\r\n                    const user = JSON.parse(u)\r\n                    setUser(user)\r\n                    if (user._id && props.channelCreatedBy && user._id.toString().trim() === props.channelCreatedBy.toString().trim()) {\r\n                        setIsOwner(true)\r\n                    }\r\n                }\r\n            }\r\n        )()\r\n    }, [props.channelCreatedBy])\r\n\r\n    useEffect(() => {\r\n        // get meeting status & set the meeting link accordingly\r\n        if (users && users.length > 0) {\r\n            const server = fetchAPI('')\r\n            server.query({\r\n                query: getPersonalMeetingLinkStatus,\r\n                variables: {\r\n                    users\r\n                }\r\n            }).then((res: any) => {\r\n                if (res.data && res.data.channel.getPersonalMeetingLinkStatus) {\r\n                    setMeetingOn(true)\r\n                    getMeetingLink()\r\n                }\r\n            })\r\n        }\r\n    }, [users])\r\n\r\n    const getMeetingLink = useCallback(() => {\r\n        const server = fetchAPI('')\r\n        server.query({\r\n            query: getPersonalMeetingLink,\r\n            variables: {\r\n                userId: user._id,\r\n                users: users\r\n            }\r\n        }).then((res: any) => {\r\n            if (res.data && res.data.channel.getPersonalMeetingLink && res.data.channel.getPersonalMeetingLink !== 'error') {\r\n                setMeetingLink(res.data.channel.getPersonalMeetingLink)\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n            alert('Something went wrong')\r\n        })\r\n    }, [users, user])\r\n\r\n    const updateMeetingStatus = useCallback(() => {\r\n        const server = fetchAPI('')\r\n        server.mutate({\r\n            mutation: editPersonalMeeting,\r\n            variables: {\r\n                users,\r\n                channelId: props.channelId,\r\n                meetingOn: !meetingOn\r\n            }\r\n        }).then((res: any) => {\r\n            if (res.data && res.data.channel.editPersonalMeeting) {\r\n                if (!meetingOn) {\r\n                    // meeting turned on\r\n                    getMeetingLink()\r\n                }\r\n                setMeetingOn(!meetingOn)\r\n            } else {\r\n                console.log(res)\r\n                alert('Something went wrong')\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n            alert('Something went wrong')\r\n        })\r\n    }, [users, props.channelId, meetingOn, getMeetingLink])\r\n\r\n    const showError = useCallback(() => {\r\n        alert('Meeting is inactive.')\r\n    }, [])\r\n\r\n    const submitEmails = useCallback(async () => {\r\n        const lowerCaseEmails = emails.toLowerCase()\r\n        const parsedEmails: any[] = []\r\n        const unparsedEmails = lowerCaseEmails.split('\\n')\r\n        unparsedEmails.map((email) => {\r\n            if (validateEmail(email)) {\r\n                parsedEmails.push(email)\r\n            }\r\n        })\r\n\r\n        if (parsedEmails.length === 0) return;\r\n        const server = fetchAPI('')\r\n        server.mutate({\r\n            mutation: inviteByEmail,\r\n            variables: {\r\n                emails: parsedEmails,\r\n                channelId: props.channelId\r\n            }\r\n        }).then(res => {\r\n            if (res.data.user.inviteByEmail) {\r\n                setEmails('')\r\n                Alert(usersAddedAlert, emailInviteSentAlert)\r\n                props.reload()\r\n            }\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [emails, props.channelId])\r\n\r\n    const loadChat = useCallback(async (userId, groupId) => {\r\n        const u = await AsyncStorage.getItem('user')\r\n        if (u) {\r\n            const parsedUser = JSON.parse(u)\r\n            setUsers([parsedUser._id, userId])\r\n            setMeetingOn(false)\r\n            const server = fetchAPI('')\r\n            server.query({\r\n                query: getMessages,\r\n                variables: {\r\n                    users: [parsedUser._id, userId]\r\n                }\r\n            })\r\n                .then(res => {\r\n                    setMessages(res.data.message.getMessagesThread)\r\n                    setShowChat(true)\r\n                })\r\n                .catch(err => {\r\n                    Alert(unableToLoadMessagesAlert, checkConnectionAlert)\r\n                })\r\n            // mark chat as read here\r\n            server.mutate({\r\n                mutation: markMessagesAsRead,\r\n                variables: {\r\n                    userId: parsedUser._id,\r\n                    groupId\r\n                }\r\n            }).then(res => {\r\n                props.refreshUnreadMessagesCount()\r\n            })\r\n                .catch(e => console.log(e))\r\n            // load the user\r\n            server.query({\r\n                query: findUserById,\r\n                variables: {\r\n                    id: userId\r\n                }\r\n            }).then(res => {\r\n                if (res.data && res.data.user.findById) {\r\n                    setLoadedChatWithUser(res.data.user.findById)\r\n                    server.query({\r\n                        query: isSubInactive,\r\n                        variables: {\r\n                            userId: res.data.user.findById._id,\r\n                            channelId: props.channelId\r\n                        }\r\n                    }).then((res2: any) => {\r\n                        if (res2.data && res2.data.subscription.isSubInactive) {\r\n                            setIsLoadedUserInactive(true)\r\n                        }\r\n                    }).catch((err) => console.log(err))\r\n                }\r\n            })\r\n        }\r\n    }, [props.channelId])\r\n\r\n    const loadGroupChat = useCallback(async (groupUsers, groupId) => {\r\n        const u = await AsyncStorage.getItem('user')\r\n        if (u) {\r\n            const parsedUser = JSON.parse(u)\r\n            setUsers(groupUsers)\r\n            setMeetingOn(false)\r\n            const server = fetchAPI('')\r\n            server.query({\r\n                query: getMessages,\r\n                variables: {\r\n                    users: groupUsers\r\n                }\r\n            })\r\n                .then(res => {\r\n                    setMessages(res.data.message.getMessagesThread)\r\n                    setShowChat(true)\r\n                })\r\n                .catch(err => {\r\n                    Alert(unableToLoadMessagesAlert, checkConnectionAlert)\r\n                })\r\n            // mark as read here\r\n            server.mutate({\r\n                mutation: markMessagesAsRead,\r\n                variables: {\r\n                    userId: parsedUser._id,\r\n                    groupId\r\n                }\r\n            }).then(res => console.log(res))\r\n                .catch(e => console.log(e))\r\n        }\r\n    }, [])\r\n\r\n    const handleDelete = useCallback(() => {\r\n\r\n        Alert(\"Remove user from channel?\", \"\",\r\n            [\r\n                {\r\n                    text: \"Cancel\", style: \"cancel\", onPress: () => { return; }\r\n                },\r\n                {\r\n                    text: \"Okay\", onPress: async () => {\r\n                        const server = fetchAPI('')\r\n                        server.mutate({\r\n                            mutation: unsubscribe,\r\n                            variables: {\r\n                                userId: loadedChatWithUser._id,\r\n                                channelId: props.channelId,\r\n                                keepContent: false\r\n                            }\r\n                        }).then(async res => {\r\n                            if (res.data.subscription && res.data.subscription.unsubscribe) {\r\n                                Alert(userRemovedAlert)\r\n                                props.reload()\r\n                                setShowChat(false)\r\n                                setIsLoadedUserInactive(false)\r\n                                setLoadedChatWithUser({})\r\n                            } else {\r\n                                Alert(alreadyUnsubscribedAlert)\r\n                            }\r\n                        }).catch(err => {\r\n                            Alert(somethingWentWrongAlert, checkConnectionAlert)\r\n                        })\r\n                    }\r\n                }\r\n            ]\r\n        )\r\n\r\n    }, [loadedChatWithUser, props.channelId, props.reload])\r\n\r\n    const handleSubStatusChange = useCallback(() => {\r\n\r\n        const alertMessage = isLoadedUserInactive ? \"Make user active?\" : \"Make user inactive?\"\r\n\r\n        Alert(alertMessage, \"\",\r\n            [\r\n                {\r\n                    text: \"Cancel\", style: \"cancel\", onPress: () => { return; }\r\n                },\r\n                {\r\n                    text: \"Okay\", onPress: async () => {\r\n                        const server = fetchAPI('')\r\n                        server.mutate({\r\n                            mutation: isLoadedUserInactive ? makeSubActive : makeSubInactive,\r\n                            variables: {\r\n                                userId: loadedChatWithUser._id,\r\n                                channelId: props.channelId\r\n                            }\r\n                        }).then(res => {\r\n                            if (isLoadedUserInactive) {\r\n                                // changed to active\r\n                                if (res.data && res.data.subscription.makeActive) {\r\n                                    Alert(userSubscriptionActivatedAlert)\r\n                                    props.reload()\r\n                                    setShowChat(false)\r\n                                    setIsLoadedUserInactive(false)\r\n                                    setLoadedChatWithUser({})\r\n                                }\r\n                            } else {\r\n                                // changed to inactive\r\n                                if (res.data && res.data.subscription.makeInactive) {\r\n                                    Alert(userSubscriptionInactivatedAlert)\r\n                                    props.reload()\r\n                                    setShowChat(false)\r\n                                    setIsLoadedUserInactive(false)\r\n                                    setLoadedChatWithUser({})\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            ]\r\n        )\r\n\r\n\r\n    }, [isLoadedUserInactive, loadedChatWithUser, props.channelId])\r\n\r\n    const onGradeQuiz = (problemScores: string[], score: number) => {\r\n        const server = fetchAPI(\"\");\r\n        server\r\n            .mutate({\r\n                mutation: gradeQuiz,\r\n                variables: {\r\n                    cueId: props.cueId,\r\n                    userId,\r\n                    score,\r\n                    problemScores\r\n                }\r\n            })\r\n            .then(res => {\r\n                if (res.data && res.data.cue.gradeQuiz) {\r\n\r\n                    props.reload()\r\n                    setShowSubmission(false)\r\n                }\r\n        });\r\n\r\n    }\r\n\r\n    const renderQuizSubmissions = () => {\r\n\r\n        const { initiatedAt, solutions } = quizSolutions;\r\n\r\n        return (<View style={{ width: '100%', marginLeft: '5%', display: 'flex', flexDirection: 'column' }}>\r\n            {initiatedAt ? <Text style={{ width: '100%', height: 15, paddingBottom: 25 }}>\r\n                Quiz initiated at {moment(new Date(initiatedAt)).format('MMMM Do YYYY, h:mm a')}\r\n            </Text> :\r\n                null\r\n            }\r\n            <Text style={{ width: '100%', height: 15, marginTop: '20px', paddingBottom: 25, fontWeight: 'bold' }}>\r\n                Selected Answers:\r\n            </Text>\r\n            <View style={{ marginTop: '20px', display: 'flex', flexDirection: \"column\" }}>\r\n                {solutions.map((solution: any, index: number) => {\r\n\r\n                    \r\n                    if (solution.selected) {\r\n                        const answers: any[] = solution.selected;\r\n\r\n                        const selectedAnswers = answers.filter(ans => ans.isSelected);\r\n\r\n                        let selectedAnswersString: any[] = []\r\n\r\n                        selectedAnswers.forEach((ans: any) => {\r\n                            selectedAnswersString.push(ans.options)\r\n                        })\r\n\r\n                        return (<Text style={{ width: '100%', height: 15, marginTop: '10px', paddingBottom: 25 }}>\r\n                            Problem {index + 1} : {selectedAnswersString.join(\", \")}\r\n                        </Text>)\r\n                    } else {\r\n                        return (<Text style={{ width: '100%', height: 15, marginTop: '10px', paddingBottom: 25 }}>\r\n                            Problem {index + 1} : {solution.response}\r\n                        </Text>)\r\n                    }\r\n                    \r\n\r\n                    \r\n                })}\r\n            </View>\r\n        </View>)\r\n\r\n    }\r\n\r\n    return (\r\n        <View style={{\r\n            // borderWidth: 2,\r\n            backgroundColor: 'white',\r\n            width: '100%',\r\n            minHeight: windowHeight - 200,\r\n            paddingHorizontal: 20,\r\n            borderTopRightRadius: 0,\r\n            borderTopLeftRadius: 0\r\n        }}>\r\n            {\r\n                props.cueId ? null : <Text style={{ width: '100%', textAlign: 'center', height: 15, paddingBottom: 25 }}>\r\n                    {/* <Ionicons name='chevron-down' size={20} color={'#e0e0e0'} /> */}\r\n                </Text>\r\n            }\r\n            {\r\n                showSubmission || showChat || showAddUsers || showNewGroup ?\r\n                    <View style={{ backgroundColor: 'white', paddingBottom: 15, maxWidth: 600 }}>\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                            <TouchableOpacity\r\n                                key={Math.random()}\r\n                                style={{\r\n                                    backgroundColor: 'white',\r\n                                }}\r\n                                onPress={() => {\r\n                                    if (showChat) {\r\n                                        setShowChat(false)\r\n                                        setIsLoadedUserInactive(false)\r\n                                        setLoadedChatWithUser({})\r\n                                        setUsers([])\r\n                                        props.reload()\r\n                                    } else {\r\n                                        setShowSubmission(false)\r\n                                        setStatus(\"\")\r\n                                        setScore(\"0\")\r\n                                        setUserId(\"\")\r\n                                    }\r\n                                    setShowAddUsers(false)\r\n                                    setShowNewGroup(false)\r\n                                }}>\r\n                                <Text style={{\r\n                                    width: '100%',\r\n                                    lineHeight: 23,\r\n                                }}>\r\n                                    <Ionicons name='chevron-back-outline' size={23} color={'#202025'} />\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                            {\r\n                                loadedChatWithUser && loadedChatWithUser !== {} && !showNewGroup && !showAddUsers && users.length < 3 && !showSubmission ?\r\n                                    <View style={{ marginHorizontal: 20, paddingTop: 5 }}>\r\n                                        <Text>\r\n                                            {loadedChatWithUser.displayName}, {loadedChatWithUser.fullName} {loadedChatWithUser.email ? (\"(\" + loadedChatWithUser.email + \")\") : ''}\r\n                                        </Text>\r\n                                    </View> : null\r\n                            }\r\n                        </View>\r\n                        {\r\n                            isOwner && !props.cueId && !showAddUsers && !showNewGroup && !showSubmission && users.length < 3\r\n                                ? <View style={{ flexDirection: 'row', flex: 1, paddingLeft: 43 }}>\r\n                                    {/* <TouchableOpacity\r\n                                        onPress={() => handleSubStatusChange()}\r\n                                    >\r\n                                        <Text style={{\r\n                                            color: '#a2a2aa',\r\n                                            fontSize: 11,\r\n                                            lineHeight: 30,\r\n                                            textAlign: 'right',\r\n                                            paddingRight: 20,\r\n                                            textTransform: 'uppercase'\r\n                                        }}>\r\n                                            {\r\n                                                isLoadedUserInactive ? PreferredLanguageText('makeActive') : PreferredLanguageText('makeInactive')\r\n                                            }\r\n                                        </Text>\r\n                                    </TouchableOpacity> */}\r\n                                    <TouchableOpacity\r\n                                        onPress={() => handleDelete()}\r\n                                    >\r\n                                        <Text style={{\r\n                                            color: '#a2a2aa',\r\n                                            fontSize: 11,\r\n                                            lineHeight: 30,\r\n                                            textAlign: 'right',\r\n                                            paddingRight: 10,\r\n                                            textTransform: 'uppercase'\r\n                                        }}>\r\n                                            {PreferredLanguageText('removeFromChannel')}\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                                : null\r\n                        }\r\n                        {\r\n                            showChat ? <View style={{ flexDirection: Dimensions.get('window').width < 768 ? 'column' : 'row', flex: 1, paddingLeft: 43 }}>\r\n                                {\r\n                                    isOwner ?\r\n                                        <View style={{\r\n                                            marginBottom: 25,\r\n                                            backgroundColor: 'white',\r\n                                            minWidth: '40%,'\r\n                                        }}>\r\n\r\n                                            <View>\r\n                                                <View style={{\r\n                                                    backgroundColor: 'white',\r\n                                                    height: 40,\r\n                                                    marginTop: 20,\r\n                                                    flexDirection: 'row'\r\n                                                }}>\r\n                                                    <Switch\r\n                                                        value={meetingOn}\r\n                                                        onValueChange={() => updateMeetingStatus()}\r\n                                                        style={{ height: 20, marginRight: 20 }}\r\n                                                        trackColor={{\r\n                                                            false: '#f4f4f6',\r\n                                                            true: '#3B64F8'\r\n                                                        }}\r\n                                                        activeThumbColor='white'\r\n                                                    />\r\n                                                    <View style={{ width: '100%', backgroundColor: 'white', paddingTop: 3 }}>\r\n                                                        <Text style={{ fontSize: 15, color: '#a2a2aa', }}>\r\n                                                            Meeting\r\n                                                        </Text>\r\n                                                    </View>\r\n                                                </View>\r\n                                                <Text style={{ fontSize: 12, color: '#a2a2aa', paddingTop: 10 }}>\r\n                                                    {/* Turn on to begin private meeting. {'\\n'} */}\r\n                                                    Restart switch if you cannot join.\r\n                                                </Text>\r\n                                            </View>\r\n                                        </View> : null\r\n                                }\r\n                                <View style={{ backgroundColor: 'white' }}>\r\n                                    <TouchableOpacity\r\n                                        onPress={() => {\r\n                                            if (meetingOn) {\r\n                                                window.open(meetingLink, '_blank');\r\n                                            } else {\r\n                                                showError()\r\n                                            }\r\n                                        }}\r\n                                        style={{\r\n                                            backgroundColor: 'white',\r\n                                            overflow: 'hidden',\r\n                                            height: 35,\r\n                                            marginTop: 15,\r\n                                            marginBottom: 20\r\n                                        }}>\r\n                                        <Text style={{\r\n                                            textAlign: 'center',\r\n                                            lineHeight: 35,\r\n                                            color: meetingOn ? '#fff' : '#202025',\r\n                                            fontSize: 12,\r\n                                            backgroundColor: meetingOn ? '#3B64F8' : '#f4f4f6',\r\n                                            paddingHorizontal: 25,\r\n                                            fontFamily: 'inter',\r\n                                            height: 35,\r\n                                            width: 175,\r\n                                            borderRadius: 15,\r\n                                            textTransform: 'uppercase'\r\n                                        }}>\r\n                                            Join Meeting\r\n                                        </Text>\r\n                                    </TouchableOpacity>\r\n                                    <Text style={{ fontSize: 12, color: '#a2a2aa', marginBottom: 10 }}>\r\n                                        Enabled only when meeting in session.\r\n                                    </Text>\r\n                                </View>\r\n                            </View>\r\n                                : null\r\n                        }\r\n                    </View>\r\n                    :\r\n                    <View style={{ backgroundColor: 'white', flexDirection: 'row', paddingBottom: 25, maxWidth: 500 }}>\r\n                        {\r\n                            props.cueId ?\r\n                                null :\r\n                                <Text\r\n                                    ellipsizeMode=\"tail\"\r\n                                    style={{\r\n                                        fontSize: 11,\r\n                                        paddingBottom: 20,\r\n                                        textTransform: \"uppercase\",\r\n                                        // paddingLeft: 10,\r\n                                        flex: 1,\r\n                                        lineHeight: 25\r\n                                    }}>\r\n                                    {PreferredLanguageText('inbox')}\r\n                                </Text>\r\n                        }\r\n                        {\r\n                            !props.cueId && isOwner ?\r\n                                <TouchableOpacity\r\n                                    key={Math.random()}\r\n                                    style={{\r\n                                        backgroundColor: 'white'\r\n                                    }}\r\n                                    onPress={() => setShowNewGroup(true)}>\r\n                                    <Text style={{\r\n                                        width: '100%',\r\n                                        textAlign: 'right',\r\n                                        lineHeight: 23,\r\n                                        marginRight: 20,\r\n                                        color: '#a2a2aa',\r\n                                        fontSize: 11,\r\n                                    }}>\r\n                                        NEW GROUP\r\n                                    </Text>\r\n                                </TouchableOpacity> : null\r\n                        }\r\n                        {\r\n                            isOwner && !props.cueId ?\r\n                                <TouchableOpacity\r\n                                    key={Math.random()}\r\n                                    style={{\r\n                                        backgroundColor: 'white'\r\n                                    }}\r\n                                    onPress={() => setShowAddUsers(true)}>\r\n                                    <Text style={{\r\n                                        width: '100%',\r\n                                        textAlign: 'right',\r\n                                        lineHeight: 23,\r\n                                        marginRight: 20,\r\n                                        color: '#a2a2aa',\r\n                                        fontSize: 11,\r\n                                    }}>\r\n                                        ADD USERS\r\n                                    </Text>\r\n                                </TouchableOpacity> : null\r\n                        }\r\n                    </View>\r\n            }\r\n            {\r\n                !showAddUsers ? (subscribers.length === 0 ?\r\n                    <View style={{ backgroundColor: 'white', flex: 1 }}>\r\n                        <Text style={{ width: '100%', color: '#a2a2aa', fontSize: 22, paddingTop: 100, paddingHorizontal: 5, fontFamily: 'inter', flex: 1 }}>\r\n                            {\r\n                                props.cueId ? PreferredLanguageText('noStatuses') : PreferredLanguageText('noStudents')\r\n                            }\r\n                        </Text>\r\n                    </View> :\r\n                    <View style={{\r\n                        width: '100%',\r\n                        backgroundColor: 'white',\r\n                        flex: 1\r\n                    }}\r\n                        key={key}\r\n                    >\r\n                        {\r\n                            !showSubmission ?\r\n                                (\r\n                                    showChat ?\r\n                                        <ScrollView\r\n                                            showsVerticalScrollIndicator={false}\r\n                                            keyboardDismissMode={'on-drag'}\r\n                                            style={{ flex: 1, paddingTop: 12 }}>\r\n                                            {\r\n                                                messages.length === 0 ?\r\n                                                    <Text style={{ width: '100%', color: '#a2a2aa', fontSize: 22, paddingVertical: 100, paddingHorizontal: 5, fontFamily: 'inter', flex: 1 }}>\r\n                                                        {PreferredLanguageText('noMessages')}\r\n                                                    </Text>\r\n                                                    : null\r\n                                            }\r\n                                            {\r\n                                                messages.map((message) => {\r\n                                                    return <View style={{ width: '100%', maxWidth: 500, paddingBottom: 15, backgroundColor: 'white' }} key={Math.random()}>\r\n                                                        <MessageCard\r\n                                                            user={user}\r\n                                                            message={message} />\r\n                                                    </View>\r\n                                                })\r\n                                            }\r\n                                            <View style={{ backgroundColor: 'white' }}>\r\n                                                <NewMessage\r\n                                                    cueId={props.cueId}\r\n                                                    channelId={props.channelId}\r\n                                                    parentId={null}\r\n                                                    users={users}\r\n                                                    back={() => {\r\n                                                        props.reload()\r\n                                                        setShowChat(false)\r\n                                                        setIsLoadedUserInactive(false)\r\n                                                        setLoadedChatWithUser({})\r\n                                                    }}\r\n                                                    placeholder={`${PreferredLanguageText('message')}...`}\r\n                                                />\r\n                                            </View>\r\n                                        </ScrollView>\r\n                                        :\r\n                                        (\r\n                                            showNewGroup ?\r\n                                                <ScrollView\r\n                                                    showsVerticalScrollIndicator={false}\r\n                                                    keyboardDismissMode={'on-drag'}\r\n                                                    style={{ flex: 1, paddingTop: 12 }}>\r\n                                                    <Text\r\n                                                        ellipsizeMode=\"tail\"\r\n                                                        style={{ color: '#a2a2aa', fontSize: 15, flex: 1, lineHeight: 25 }}>\r\n                                                        {PreferredLanguageText('newGroup')}\r\n                                                    </Text>\r\n                                                    <View style={{ maxHeight: 175, flexDirection: 'column', marginTop: 25, overflow: 'scroll', marginBottom: 25 }}>\r\n                                                        <View style={{ width: '90%', padding: 5, height: expandMenu ? 175 : 'auto', maxWidth: 500 }}>\r\n                                                            <Select\r\n                                                                placeholder='Share with'\r\n                                                                styles={{\r\n                                                                    menu: (provided: any, state: any) => ({\r\n                                                                        ...provided,\r\n                                                                        zIndex: 9999,\r\n                                                                        overflow: 'scroll',\r\n                                                                        height: 125,\r\n                                                                        display: 'flex',\r\n                                                                        margin: 5,\r\n                                                                        width: '97%',\r\n                                                                        boxShadow: 'none'\r\n                                                                    }),\r\n                                                                    option: (provided: any, state: any) => ({\r\n                                                                        ...provided,\r\n                                                                        fontFamily: 'overpass',\r\n                                                                        color: '#a2a2aa',\r\n                                                                        fontSize: 10,\r\n                                                                        height: 25,\r\n                                                                        width: '97%'\r\n                                                                    }),\r\n                                                                    input: (styles: any) => ({\r\n                                                                        // ...styles,\r\n                                                                        width: '100%',\r\n                                                                        border: 'none',\r\n                                                                        borderWidth: 0,\r\n                                                                        fontSize: 12\r\n                                                                    }),\r\n                                                                    placeholder: (styles: any) => ({\r\n                                                                        ...styles,\r\n                                                                        fontFamily: 'overpass',\r\n                                                                        color: '#a2a2aa',\r\n                                                                        fontSize: 12\r\n                                                                    }),\r\n                                                                    multiValueLabel: (styles: any, { data }: any) => ({\r\n                                                                        ...styles,\r\n                                                                        color: '#202025',\r\n                                                                        fontFamily: 'overpass'\r\n                                                                    }),\r\n                                                                    multiValue: (styles: any, { data }: any) => ({\r\n                                                                        ...styles,\r\n                                                                        backgroundColor: '#f4f4f6',\r\n                                                                        fontFamily: 'overpass'\r\n                                                                    })\r\n                                                                }}\r\n                                                                value={selected}\r\n                                                                isMulti={true}\r\n                                                                onMenuOpen={() => setExpandMenu(true)}\r\n                                                                onMenuClose={() => setExpandMenu(false)}\r\n                                                                name=\"Share with\"\r\n                                                                className=\"basic-multi-select\"\r\n                                                                classNamePrefix=\"select\"\r\n                                                                onChange={onChange}\r\n                                                                options={options}\r\n                                                            />\r\n                                                        </View>\r\n                                                    </View>\r\n                                                    <View style={{ backgroundColor: 'white' }}>\r\n                                                        <NewMessage\r\n                                                            cueId={props.cueId}\r\n                                                            channelId={props.channelId}\r\n                                                            parentId={null}\r\n                                                            users={group}\r\n                                                            addUserId={true}\r\n                                                            back={() => {\r\n                                                                props.reload()\r\n                                                                setShowChat(false)\r\n                                                                setIsLoadedUserInactive(false)\r\n                                                                setLoadedChatWithUser({})\r\n                                                                setShowNewGroup(false)\r\n                                                            }}\r\n                                                            placeholder={`${PreferredLanguageText('message')}...`}\r\n                                                        />\r\n                                                    </View>\r\n                                                </ScrollView>\r\n                                                : <ScrollView\r\n                                                    showsVerticalScrollIndicator={false}\r\n                                                    horizontal={false}\r\n                                                    key={filterChoice + key}\r\n                                                    contentContainerStyle={{\r\n                                                        width: '100%',\r\n                                                        height: props.cueId ? windowHeight - 150 : '100%',\r\n                                                        marginBottom: props.cueId ? 20 : 0\r\n                                                    }}\r\n                                                >\r\n                                                    {\r\n                                                        !props.cueId || props.cueId === '' ?\r\n                                                            <View style={{ backgroundColor: 'white', borderBottomWidth: 1, borderBottomColor: '#f4f4f6', marginBottom: 20 }}>\r\n                                                                {\r\n                                                                    props.groups.length > 0 ? (props.groups.map((group: any, index: any) => {\r\n                                                                        let displayName = ''\r\n                                                                        console.log(group)\r\n                                                                        group.userNames.map((u: any) => { displayName += (u.displayName + ', ') })\r\n                                                                        return <View style={styles.col} key={filterChoice + key + index}>\r\n                                                                            <SubscriberCard\r\n                                                                                chat={!props.cueId || props.cueId === '' ? true : false}\r\n                                                                                fadeAnimation={props.fadeAnimation}\r\n                                                                                subscriber={{\r\n                                                                                    displayName,\r\n                                                                                    fullName: 'Team',\r\n                                                                                    unreadMessages: group.unreadMessages\r\n                                                                                }}\r\n                                                                                onPress={() => {\r\n                                                                                    loadGroupChat(group.users, group._id)\r\n                                                                                }}\r\n                                                                                status={!props.cueId ? false : true}\r\n                                                                            />\r\n                                                                        </View>\r\n                                                                    })) : <View style={{ backgroundColor: 'white', flex: 1 }}>\r\n                                                                        <Text style={{ width: '100%', color: '#a2a2aa', fontSize: 22, paddingHorizontal: 50, paddingBottom: 100, paddingTop: 50, fontFamily: 'inter', flex: 1 }}>\r\n                                                                            {PreferredLanguageText('noGroups')}\r\n                                                                        </Text>\r\n                                                                    </View>\r\n                                                                }\r\n                                                            </View>\r\n                                                            : null\r\n                                                    }\r\n                                                    {\r\n                                                        filteredSubscribers.map((subscriber: any, index: any) => {\r\n                                                            return <View style={styles.col} key={filterChoice + key + index}>\r\n                                                                <SubscriberCard\r\n                                                                    chat={!props.cueId || props.cueId === '' ? true : false}\r\n                                                                    fadeAnimation={props.fadeAnimation}\r\n                                                                    subscriber={subscriber}\r\n                                                                    onPress={() => {\r\n                                                                        if (props.cueId && props.cueId !== null) {\r\n                                                                            if (subscriber.fullName === 'submitted' || subscriber.fullName === 'graded') {\r\n                                                                                setSubmission(subscriber.submission)\r\n                                                                                setSubmittedAt(subscriber.submittedAt)\r\n                                                                                setShowSubmission(true)\r\n                                                                                setStatus(subscriber.fullName)\r\n                                                                                setScore(subscriber.score)\r\n                                                                                setGraded(subscriber.graded)\r\n                                                                                setComment(subscriber.comment)\r\n                                                                                setUserId(subscriber.userId)\r\n                                                                            }\r\n                                                                        } else {\r\n                                                                            console.log(subscriber)\r\n                                                                            loadChat(subscriber._id, subscriber.groupId)\r\n                                                                        }\r\n                                                                    }}\r\n                                                                    status={!props.cueId ? false : true}\r\n                                                                />\r\n                                                            </View>\r\n                                                        })\r\n                                                    }\r\n                                                </ScrollView>)\r\n                                ) :\r\n                                // is Quiz then show the Quiz Grading Component and new version with problemScores\r\n                                isQuiz && !isV0Quiz ?\r\n                                    <QuizGrading \r\n                                        loading={loading}\r\n                                        problems={problems}\r\n                                        solutions={quizSolutions}\r\n                                        partiallyGraded={!graded}\r\n                                        onGradeQuiz={onGradeQuiz}\r\n                                    />\r\n                                :\r\n                                <View>\r\n                                    <ScrollView\r\n                                        showsVerticalScrollIndicator={false}\r\n                                        keyboardDismissMode={'on-drag'}\r\n                                        contentContainerStyle={{\r\n                                            height: windowHeight - 132\r\n                                        }}\r\n                                        style={{ flex: 1, paddingTop: 12 }}>\r\n                                        <View style={{\r\n                                            width: Dimensions.get('window').width < 1024 ? '100%' : '60%', alignSelf: 'center'\r\n                                        }}>\r\n                                            <Text style={{ color: '#202025', fontSize: 14, paddingBottom: 10 }}>\r\n                                                {PreferredLanguageText('score')}\r\n                                            </Text>\r\n                                            <TextInput\r\n                                                value={score}\r\n                                                style={styles.input}\r\n                                                placeholder={'0-100'}\r\n                                                onChangeText={val => setScore(val)}\r\n                                                placeholderTextColor={'#a2a2aa'}\r\n                                            />\r\n                                            <Text style={{ color: '#202025', fontSize: 14, paddingVertical: 10, }}>\r\n                                                {PreferredLanguageText('comment')}\r\n                                            </Text>\r\n                                            <TextInput\r\n                                                value={comment}\r\n                                                style={{\r\n                                                    height: 200,\r\n                                                    backgroundColor: '#f4f4f6',\r\n                                                    borderRadius: 10,\r\n                                                    fontSize: 15,\r\n                                                    padding: 15,\r\n                                                    paddingTop: 13,\r\n                                                    paddingBottom: 13,\r\n                                                    marginTop: 5,\r\n                                                    marginBottom: 20\r\n                                                }}\r\n                                                placeholder={'Optional'}\r\n                                                onChangeText={val => setComment(val)}\r\n                                                placeholderTextColor={'#a2a2aa'}\r\n                                                multiline={true}\r\n                                            />\r\n                                            <View\r\n                                                style={{\r\n                                                    flex: 1,\r\n                                                    backgroundColor: 'white',\r\n                                                    justifyContent: 'center',\r\n                                                    display: 'flex',\r\n                                                    flexDirection: 'row',\r\n                                                    marginTop: 25,\r\n                                                    marginBottom: 25\r\n                                                }}>\r\n                                                <TouchableOpacity\r\n                                                    onPress={() => handleGradeSubmit()}\r\n                                                    style={{\r\n                                                        backgroundColor: 'white',\r\n                                                        borderRadius: 15,\r\n                                                        overflow: 'hidden',\r\n                                                        height: 35,\r\n                                                    }}>\r\n                                                    <Text style={{\r\n                                                        textAlign: 'center',\r\n                                                        lineHeight: 35,\r\n                                                        color: 'white',\r\n                                                        fontSize: 12,\r\n                                                        backgroundColor: '#3B64F8',\r\n                                                        paddingHorizontal: 25,\r\n                                                        fontFamily: 'inter',\r\n                                                        height: 35,\r\n                                                    }}>\r\n                                                        {status === 'graded' ? 'REGRADE' : 'ENTER GRADE'}\r\n                                                    </Text>\r\n                                                </TouchableOpacity>\r\n                                            </View>\r\n                                        </View>\r\n                                        <Text style={{ color: '#202025', fontSize: 14, paddingBottom: 25, marginLeft: '5%' }}>\r\n                                            {PreferredLanguageText('viewSubmission')}\r\n                                        </Text>\r\n                                        {\r\n                                            imported && !isQuiz ?\r\n                                                <View style={{ width: '40%', alignSelf: 'flex-start', marginLeft: '10%' }}>\r\n                                                    <TextInput\r\n                                                        editable={false}\r\n                                                        value={title}\r\n                                                        style={styles.input}\r\n                                                        placeholder={'Title'}\r\n                                                        onChangeText={val => setTitle(val)}\r\n                                                        placeholderTextColor={'#a2a2aa'}\r\n                                                    />\r\n                                                </View> : null\r\n                                        }\r\n                                        {\r\n                                            isQuiz && Object.keys(quizSolutions).length > 0 ?\r\n                                                renderQuizSubmissions() : null\r\n                                        }\r\n                                        {\r\n                                            !imported && !isQuiz ?\r\n                                                <RichEditor\r\n                                                    disabled={true}\r\n                                                    key={Math.random()}\r\n                                                    containerStyle={{\r\n                                                        backgroundColor: '#f4f4f6',\r\n                                                        padding: 3,\r\n                                                        paddingTop: 5,\r\n                                                        paddingBottom: 10,\r\n                                                        borderRadius: 15,\r\n                                                    }}\r\n                                                    ref={RichText}\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        backgroundColor: '#f4f4f6',\r\n                                                        borderRadius: 15,\r\n                                                        minHeight: 450\r\n                                                    }}\r\n                                                    editorStyle={{\r\n                                                        backgroundColor: '#f4f4f6',\r\n                                                        placeholderColor: '#a2a2aa',\r\n                                                        color: '#202025',\r\n                                                        contentCSSText: 'font-size: 13px;'\r\n                                                    }}\r\n                                                    initialContentHTML={submission}\r\n                                                    placeholder={\"Title\"}\r\n                                                    onChange={(text) => { }}\r\n                                                    allowFileAccess={true}\r\n                                                    allowFileAccessFromFileURLs={true}\r\n                                                    allowUniversalAccessFromFileURLs={true}\r\n                                                    allowsFullscreenVideo={true}\r\n                                                    allowsInlineMediaPlayback={true}\r\n                                                    allowsLinkPreview={true}\r\n                                                    allowsBackForwardNavigationGestures={true}\r\n                                                /> : (\r\n                                                    <View style={{\r\n                                                        width: '100%',\r\n                                                        minHeight: 500,\r\n                                                        backgroundColor: 'white'\r\n                                                    }}\r\n                                                    >\r\n                                                        {\r\n                                                            (\r\n                                                                type === 'mp4' || type === 'mp3' || type === 'mov' || type === 'mpeg' || type === 'mp2' || type === 'wav' ?\r\n                                                                    <ReactPlayer url={url} controls={true} />\r\n                                                                    :\r\n                                                                    (!isQuiz ? <View\r\n                                                                        key={url}\r\n                                                                        style={{ flex: 1 }}\r\n                                                                    >\r\n                                                                        <Webview\r\n                                                                            key={url}\r\n                                                                            url={url}\r\n                                                                        />\r\n                                                                    </View> : null)\r\n                                                            )\r\n                                                        }\r\n                                                    </View>\r\n                                                )\r\n                                        }\r\n                                    </ScrollView>\r\n                                </View>\r\n                        }\r\n                        {\r\n                            !props.cueId || showSubmission ? null :\r\n                                <View style={{\r\n                                    width: '100%',\r\n                                    height: 70,\r\n                                    backgroundColor: 'white',\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center',\r\n                                    flexDirection: 'column'\r\n                                }}>\r\n                                    <ScrollView\r\n                                        contentContainerStyle={{\r\n                                            height: 20, width: '100%',\r\n                                            paddingTop: 15\r\n                                        }}\r\n                                        style={{}}\r\n                                        horizontal={true}\r\n                                        showsHorizontalScrollIndicator={false}\r\n                                    >\r\n                                        {\r\n                                            unparsedSubs.length === 0 ? null : categories.map((category: string) => {\r\n                                                return <TouchableOpacity\r\n                                                    key={Math.random()}\r\n                                                    style={filterChoice === category ? styles.cusCategoryOutline : styles.cusCategory}\r\n                                                    onPress={() => setFilterChoice(category)}>\r\n                                                    <Text\r\n                                                        style={{\r\n                                                            color: '#a2a2aa',\r\n                                                            lineHeight: 20, fontSize: 12\r\n                                                        }}>\r\n                                                        {PreferredLanguageText(categoriesLanguageMap[category])}\r\n                                                    </Text>\r\n                                                </TouchableOpacity>\r\n                                            })\r\n                                        }\r\n                                    </ScrollView>\r\n                                </View>\r\n                        }\r\n                    </View>) :\r\n                    <View style={{ width: 500, maxWidth: '100%' }}>\r\n                        <Text style={{ color: '#202025', fontSize: 14, paddingBottom: 10 }}>\r\n                            {PreferredLanguageText('inviteByEmail')}\r\n                        </Text>\r\n                        <TextInput\r\n                            value={emails}\r\n                            style={{\r\n                                height: 200,\r\n                                backgroundColor: '#f4f4f6',\r\n                                borderRadius: 10,\r\n                                fontSize: 15,\r\n                                padding: 15,\r\n                                paddingTop: 13,\r\n                                paddingBottom: 13,\r\n                                marginTop: 5,\r\n                                marginBottom: 20\r\n                            }}\r\n                            placeholder={'Enter one email per line.'}\r\n                            onChangeText={val => setEmails(val)}\r\n                            placeholderTextColor={'#a2a2aa'}\r\n                            multiline={true}\r\n                        />\r\n                        <TouchableOpacity\r\n                            onPress={() => submitEmails()}\r\n                            style={{\r\n                                backgroundColor: 'white',\r\n                                overflow: 'hidden',\r\n                                height: 35,\r\n                                marginTop: 15,\r\n                                width: '100%',\r\n                                justifyContent: 'center', flexDirection: 'row',\r\n                                marginBottom: 50\r\n                            }}>\r\n                            <Text style={{\r\n                                textAlign: 'center',\r\n                                lineHeight: 35,\r\n                                color: '#202025s',\r\n                                fontSize: 12,\r\n                                backgroundColor: '#f4f4f6',\r\n                                paddingHorizontal: 25,\r\n                                fontFamily: 'inter',\r\n                                height: 35,\r\n                                width: 150,\r\n                                borderRadius: 15,\r\n                                textTransform: 'uppercase'\r\n                            }}>\r\n                                {PreferredLanguageText(\"addUsers\")}\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n\r\n                        <Text style={{\r\n                            textAlign: 'center',\r\n                            lineHeight: 35,\r\n                            color: '#202025s',\r\n                            fontSize: 12,\r\n                            paddingHorizontal: 25,\r\n                            width: \"100%\",\r\n                            fontFamily: 'inter',\r\n                            borderRadius: 15,\r\n                            textTransform: 'uppercase'\r\n                        }}>\r\n                            {filteredSubscribers.length !== 0 ? PreferredLanguageText('existingUsers') : PreferredLanguageText('noExistingUsers')}\r\n                        </Text>\r\n                        <View style={{ display: \"flex\", flexDirection: 'column', alignItems: 'center' }}>\r\n                            {\r\n                                filteredSubscribers.map((sub: any) => {\r\n                                    return (<View style={{\r\n                                        backgroundColor: '#f4f4f6',\r\n                                        width: '100%',\r\n                                        padding: 10,\r\n                                        borderRadius: 8,\r\n                                        marginBottom: 10\r\n                                    }}>\r\n                                        <Text>\r\n                                            {sub.displayName}\r\n                                        </Text>\r\n                                        <Text>\r\n                                            {sub.email}\r\n                                        </Text>\r\n                                    </View>)\r\n                                })\r\n                            }\r\n                        </View>\r\n\r\n                    </View>\r\n            }\r\n        </View >\r\n    );\r\n}\r\n\r\nexport default React.memo(SubscribersList, (prev, next) => {\r\n    return _.isEqual(prev.threads, next.threads)\r\n})\r\n\r\n\r\nconst styleObject = () => {\r\n    return StyleSheet.create({\r\n        screen: {\r\n            flex: 1\r\n        },\r\n        margin: {\r\n            height: 20,\r\n            backgroundColor: 'white'\r\n        },\r\n        marginSmall: {\r\n            height: 10,\r\n            backgroundColor: 'white'\r\n        },\r\n        row: {\r\n            flexDirection: 'row',\r\n            display: 'flex',\r\n            width: '100%',\r\n            backgroundColor: 'white'\r\n        },\r\n        col: {\r\n            width: '100%',\r\n            height: 70,\r\n            marginBottom: 15,\r\n            // flex: 1,\r\n            backgroundColor: 'white'\r\n        },\r\n        channelText: {\r\n            textAlign: 'center',\r\n            overflow: 'hidden'\r\n        },\r\n        input: {\r\n            width: '100%',\r\n            borderBottomColor: '#f4f4f6',\r\n            borderBottomWidth: 1,\r\n            fontSize: 15,\r\n            padding: 15,\r\n            paddingTop: 13,\r\n            paddingBottom: 13,\r\n            marginTop: 5,\r\n            marginBottom: 20\r\n        },\r\n        outline: {\r\n            borderRadius: 10,\r\n            borderWidth: 1,\r\n            borderColor: '#a2a2aa',\r\n            color: 'white'\r\n        },\r\n        cusCategory: {\r\n            fontSize: 15,\r\n            backgroundColor: 'white',\r\n            paddingHorizontal: 10,\r\n            height: 22\r\n        },\r\n        cusCategoryOutline: {\r\n            fontSize: 15,\r\n            backgroundColor: 'white',\r\n            paddingHorizontal: 10,\r\n            height: 22,\r\n            borderRadius: 10,\r\n            borderWidth: 1,\r\n            borderColor: '#a2a2aa',\r\n            color: 'white'\r\n        }\r\n    })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}