{"ast":null,"code":"export var htmlStringParser = function htmlStringParser(htmlString) {\n  if (htmlString === null || !htmlString) {\n    return {\n      title: 'No content',\n      subtitle: ''\n    };\n  }\n\n  var parsedString = htmlString.replace(/<[^>]+>/g, '\\n').split('&nbsp;').join(' ');\n  var lines = parsedString.split('\\n');\n  var filteredLines = lines.filter(function (i) {\n    return i.toString().trim() !== \"\";\n  });\n  var title = '';\n\n  if (filteredLines.length > 0) {\n    if (filteredLines[0][0] === '{' && filteredLines[0][filteredLines[0].length - 1] === '}') {\n      var obj = JSON.parse(filteredLines[0]);\n      title = obj.title ? obj.title : 'file';\n    } else {\n      title = filteredLines.length > 0 ? filteredLines[0] : \"No Content\";\n    }\n  } else {\n    title = \"No Content\";\n  }\n\n  return {\n    title: title,\n    subtitle: filteredLines.length > 1 ? filteredLines[1] : ''\n  };\n};","map":{"version":3,"sources":["D:/p_projects/highlights-web/helpers/HTMLParser.ts"],"names":["htmlStringParser","htmlString","title","subtitle","parsedString","replace","split","join","lines","filteredLines","filter","i","toString","trim","length","obj","JSON","parse"],"mappings":"AAqBA,OAAO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAwB;AAEpD,MAAIA,UAAU,KAAK,IAAf,IAAuB,CAACA,UAA5B,EAAwC;AACpC,WAAO;AACHC,MAAAA,KAAK,EAAE,YADJ;AAEHC,MAAAA,QAAQ,EAAE;AAFP,KAAP;AAIH;;AAED,MAAMC,YAAY,GAAGH,UAAU,CAACI,OAAX,CAAmB,UAAnB,EAA+B,IAA/B,EAAqCC,KAArC,CAA2C,QAA3C,EAAqDC,IAArD,CAA0D,GAA1D,CAArB;AACA,MAAMC,KAAK,GAAGJ,YAAY,CAACE,KAAb,CAAmB,IAAnB,CAAd;AACA,MAAMG,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAa,UAAAC,CAAC,EAAI;AACpC,WAAOA,CAAC,CAACC,QAAF,GAAaC,IAAb,OAAwB,EAA/B;AACH,GAFqB,CAAtB;AAGA,MAAIX,KAAK,GAAG,EAAZ;;AACA,MAAIO,aAAa,CAACK,MAAd,GAAuB,CAA3B,EAA8B;AAC1B,QAAIL,aAAa,CAAC,CAAD,CAAb,CAAiB,CAAjB,MAAwB,GAAxB,IAA+BA,aAAa,CAAC,CAAD,CAAb,CAAiBA,aAAa,CAAC,CAAD,CAAb,CAAiBK,MAAjB,GAA0B,CAA3C,MAAkD,GAArF,EAA0F;AACtF,UAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWR,aAAa,CAAC,CAAD,CAAxB,CAAZ;AACAP,MAAAA,KAAK,GAAGa,GAAG,CAACb,KAAJ,GAAYa,GAAG,CAACb,KAAhB,GAAwB,MAAhC;AACH,KAHD,MAGO;AACHA,MAAAA,KAAK,GAAGO,aAAa,CAACK,MAAd,GAAuB,CAAvB,GAA2BL,aAAa,CAAC,CAAD,CAAxC,GAA8C,YAAtD;AACH;AACJ,GAPD,MAOO;AACHP,IAAAA,KAAK,GAAG,YAAR;AACH;;AACD,SAAO;AACHA,IAAAA,KAAK,EAALA,KADG;AAEHC,IAAAA,QAAQ,EAAEM,aAAa,CAACK,MAAd,GAAuB,CAAvB,GAA2BL,aAAa,CAAC,CAAD,CAAxC,GAA8C;AAFrD,GAAP;AAIH,CA7BM","sourcesContent":["// export const htmlStringParser = (htmlString: string) => {\r\n//     const parsedString = htmlString.replace(/<[^>]+>/g, '\\n').split('&nbsp;').join(' ');\r\n//     const lines = parsedString.split('\\n')\r\n//     const filteredLines = lines.filter(i => {\r\n//         return i.toString().trim() !== \"\"\r\n//     })\r\n//     let title = ''\r\n//     if (filteredLines.length > 0 && filteredLines[0][0] === '{' && filteredLines[0][filteredLines[0].length - 1] === '}') {\r\n//         const obj = JSON.parse(filteredLines[0])\r\n//         title = obj.title ? obj.title : 'file'\r\n//     } else {\r\n//         title = filteredLines.length > 0 ? filteredLines[0] : 'Alert'\r\n//     }\r\n//     return {\r\n//         title,\r\n//         subtitle: filteredLines.length > 1 ? filteredLines[1] : ''\r\n//     }\r\n// }\r\n\r\nimport { PreferredLanguageText } from \"./LanguageContext\";\r\n\r\nexport const htmlStringParser = (htmlString: string) => {\r\n\r\n    if (htmlString === null || !htmlString) {\r\n        return {\r\n            title: 'No content',\r\n            subtitle: ''\r\n        }\r\n    }\r\n\r\n    const parsedString = htmlString.replace(/<[^>]+>/g, '\\n').split('&nbsp;').join(' ');\r\n    const lines = parsedString.split('\\n')\r\n    const filteredLines = lines.filter(i => {\r\n        return i.toString().trim() !== \"\"\r\n    })\r\n    let title = ''\r\n    if (filteredLines.length > 0) {\r\n        if (filteredLines[0][0] === '{' && filteredLines[0][filteredLines[0].length - 1] === '}') {\r\n            const obj = JSON.parse(filteredLines[0])\r\n            title = obj.title ? obj.title : 'file'\r\n        } else {\r\n            title = filteredLines.length > 0 ? filteredLines[0] : \"No Content\"\r\n        }\r\n    } else {\r\n        title = \"No Content\"\r\n    }\r\n    return {\r\n        title,\r\n        subtitle: filteredLines.length > 1 ? filteredLines[1] : ''\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}