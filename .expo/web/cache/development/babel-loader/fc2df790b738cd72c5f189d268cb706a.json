{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\ProfileControls.tsx\";\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, View, TouchableOpacity } from \"./Themed\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { fetchAPI } from \"../graphql/FetchAPI\";\nimport { signup, updatePassword, updateUser } from \"../graphql/QueriesAndMutations\";\nimport { validateEmail } from \"../helpers/emailCheck\";\nimport Alert from \"../components/Alert\";\nimport { TextInput } from \"./CustomTextInput\";\nimport { PreferredLanguageText } from \"../helpers/LanguageContext\";\nimport OneSignal from \"react-onesignal\";\n\nvar ProfileControls = function ProfileControls(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      confirmPassword = _useState6[0],\n      setConfirmPassword = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      displayName = _useState8[0],\n      setDisplayName = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      fullName = _useState10[0],\n      setFullName = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      userFound = _useState12[0],\n      setUserFound = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      loggedIn = _useState14[0],\n      setLoggedIn = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showSavePassword = _useState16[0],\n      setShowSavePassword = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      newPassword = _useState18[0],\n      setNewPassword = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      confirmNewPassword = _useState20[0],\n      setConfirmNewPassword = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      currentPassword = _useState22[0],\n      setCurrentPassword = _useState22[1];\n\n  var _useState23 = useState(true),\n      _useState24 = _slicedToArray(_useState23, 2),\n      isSubmitDisabled = _useState24[0],\n      setIsSubmitDisabled = _useState24[1];\n\n  var _useState25 = useState(\"\"),\n      _useState26 = _slicedToArray(_useState25, 2),\n      emailValidError = _useState26[0],\n      setEmailValidError = _useState26[1];\n\n  var _useState27 = useState(\"\"),\n      _useState28 = _slicedToArray(_useState27, 2),\n      passwordValidError = _useState28[0],\n      setPasswordValidError = _useState28[1];\n\n  var _useState29 = useState(\"\"),\n      _useState30 = _slicedToArray(_useState29, 2),\n      confirmPasswordError = _useState30[0],\n      setConfirmPasswordError = _useState30[1];\n\n  var _useState31 = useState(\"\"),\n      _useState32 = _slicedToArray(_useState31, 2),\n      newPasswordValidError = _useState32[0],\n      setNewPasswordValidError = _useState32[1];\n\n  var _useState33 = useState(\"\"),\n      _useState34 = _slicedToArray(_useState33, 2),\n      confirmNewPasswordError = _useState34[0],\n      setConfirmNewPasswordError = _useState34[1];\n\n  var _useState35 = useState(\"\"),\n      _useState36 = _slicedToArray(_useState35, 2),\n      currentFullName = _useState36[0],\n      setCurrentFullName = _useState36[1];\n\n  var _useState37 = useState(\"\"),\n      _useState38 = _slicedToArray(_useState37, 2),\n      currentDisplayName = _useState38[0],\n      setCurrentDisplayName = _useState38[1];\n\n  var passwordUpdatedAlert = PreferredLanguageText('passwordUpdated');\n  var incorrectCurrentPasswordAlert = PreferredLanguageText('incorrectCurrentPassword');\n  var passwordDoesNotMatchAlert = PreferredLanguageText('passwordDoesNotMatch');\n  var somethingWentWrongAlert = PreferredLanguageText('somethingWentWrong');\n  var profileUpdatedAlert = PreferredLanguageText('profileUpdated');\n  var enterValidEmailError = PreferredLanguageText('enterValidEmail');\n  var passwordInvalidError = PreferredLanguageText('atleast8char');\n  var handleSubmit = useCallback(function _callee3() {\n    var u, user, server;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n          case 2:\n            u = _context3.sent;\n\n            if (u) {\n              _context3.next = 5;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 5:\n            user = JSON.parse(u);\n            server = fetchAPI(\"\");\n\n            if (!showSavePassword) {\n              _context3.next = 10;\n              break;\n            }\n\n            server.mutate({\n              mutation: updatePassword,\n              variables: {\n                userId: user._id,\n                currentPassword: currentPassword,\n                newPassword: newPassword\n              }\n            }).then(function (res) {\n              if (res.data && res.data.user.updatePassword) {\n                Alert(passwordUpdatedAlert);\n                props.reOpenProfile();\n              } else {\n                Alert(incorrectCurrentPasswordAlert);\n              }\n            }).catch(function (err) {\n              Alert(somethingWentWrongAlert);\n            });\n            return _context3.abrupt(\"return\");\n\n          case 10:\n            if (!loggedIn) {\n              server.mutate({\n                mutation: signup,\n                variables: {\n                  email: email.toString().trim().toLowerCase(),\n                  password: password.toString(),\n                  fullName: fullName.toString().trim(),\n                  displayName: displayName.toString().trim(),\n                  userId: user._id\n                }\n              }).then(function _callee(res) {\n                var _user, updatedUser;\n\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        console.log(res);\n\n                        if (!(res.data.user.signup === \"\")) {\n                          _context.next = 13;\n                          break;\n                        }\n\n                        _user = JSON.parse(u);\n                        _user.email = email;\n                        _user.fullName = fullName;\n                        _user.displayName = displayName;\n                        updatedUser = JSON.stringify(_user);\n                        _context.next = 9;\n                        return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"user\", updatedUser));\n\n                      case 9:\n                        props.saveDataInCloud();\n                        props.reOpenProfile();\n                        _context.next = 14;\n                        break;\n\n                      case 13:\n                        Alert(res.data.user.signup || somethingWentWrongAlert);\n\n                      case 14:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              });\n            } else {\n              server.mutate({\n                mutation: updateUser,\n                variables: {\n                  displayName: displayName,\n                  fullName: fullName,\n                  userId: user._id\n                }\n              }).then(function _callee2(res) {\n                var updatedUser;\n                return _regeneratorRuntime.async(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        if (!(res.data && res.data.user.update)) {\n                          _context2.next = 10;\n                          break;\n                        }\n\n                        user.fullName = fullName;\n                        user.displayName = displayName;\n                        updatedUser = JSON.stringify(user);\n                        _context2.next = 6;\n                        return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"user\", updatedUser));\n\n                      case 6:\n                        Alert(profileUpdatedAlert);\n                        props.reOpenProfile();\n                        _context2.next = 11;\n                        break;\n\n                      case 10:\n                        Alert(somethingWentWrongAlert);\n\n                      case 11:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, null, null, null, Promise);\n              }).catch(function (e) {\n                return Alert(somethingWentWrongAlert);\n              });\n            }\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [loggedIn, email, password, displayName, fullName, confirmPassword, showSavePassword, newPassword, currentPassword]);\n  var getUser = useCallback(function _callee4() {\n    var u, parsedUser;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n          case 2:\n            u = _context4.sent;\n\n            if (u) {\n              parsedUser = JSON.parse(u);\n\n              if (parsedUser.email) {\n                setLoggedIn(true);\n                setEmail(parsedUser.email);\n                setDisplayName(parsedUser.displayName);\n                setFullName(parsedUser.fullName);\n                setCurrentDisplayName(parsedUser.displayName);\n                setCurrentFullName(parsedUser.fullName);\n              }\n\n              setUserFound(true);\n            }\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  var logout = useCallback(function _callee5() {\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            OneSignal.removeExternalUserId();\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n          case 3:\n            window.location.reload();\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  useEffect(function () {\n    getUser();\n  }, []);\n  useEffect(function () {\n    if (showSavePassword && currentPassword && newPassword && confirmNewPassword && !newPasswordValidError && !confirmNewPasswordError) {\n      setIsSubmitDisabled(false);\n      return;\n    }\n\n    if (!showSavePassword && loggedIn && fullName && displayName && (fullName !== currentFullName || displayName !== currentDisplayName)) {\n      setIsSubmitDisabled(false);\n      return;\n    }\n\n    if (!loggedIn && email && fullName && displayName && password && confirmPassword && !emailValidError && !passwordValidError && !confirmPasswordError) {\n      setIsSubmitDisabled(false);\n      return;\n    }\n\n    setIsSubmitDisabled(true);\n  }, [loggedIn, email, fullName, displayName, password, confirmPassword, emailValidError, passwordValidError, confirmPasswordError, showSavePassword, currentPassword, newPassword, confirmNewPassword, newPasswordValidError, confirmNewPasswordError, currentDisplayName, currentFullName]);\n  useEffect(function () {\n    if (email && !validateEmail(email.toString().toLowerCase())) {\n      setEmailValidError(enterValidEmailError);\n      return;\n    }\n\n    setEmailValidError(\"\");\n  }, [email]);\n  useEffect(function () {\n    var validPasswrdRegex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n\n    if (password && !validPasswrdRegex.test(password)) {\n      setPasswordValidError(passwordInvalidError);\n      return;\n    }\n\n    setPasswordValidError(\"\");\n  }, [password]);\n  useEffect(function () {\n    if (password && confirmPassword && password !== confirmPassword) {\n      setConfirmPasswordError(passwordDoesNotMatchAlert);\n      return;\n    }\n\n    setConfirmPasswordError(\"\");\n  }, [password, confirmPassword]);\n  useEffect(function () {\n    var validPasswrdRegex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n\n    if (newPassword && !validPasswrdRegex.test(newPassword)) {\n      setNewPasswordValidError(passwordInvalidError);\n      return;\n    }\n\n    setNewPasswordValidError(\"\");\n  }, [newPassword]);\n  useEffect(function () {\n    if (newPassword && confirmNewPassword && newPassword !== confirmNewPassword) {\n      setConfirmNewPasswordError(passwordDoesNotMatchAlert);\n      return;\n    }\n\n    setConfirmNewPasswordError(\"\");\n  }, [newPassword, confirmNewPassword]);\n\n  if (!userFound) {\n    return React.createElement(View, {\n      style: styles.screen,\n      key: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: {\n        width: \"100%\",\n        backgroundColor: \"white\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.colorBar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: {\n        fontSize: 22,\n        color: \"#a2a2aa\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }\n    }, PreferredLanguageText('internetRequiried')))));\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    key: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      width: \"100%\",\n      backgroundColor: \"white\"\n    },\n    showsVerticalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 11,\n      paddingBottom: 20,\n      textTransform: \"uppercase\",\n      flex: 1,\n      lineHeight: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, !loggedIn ? PreferredLanguageText('backUp') : PreferredLanguageText('profile')), React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      paddingTop: 10,\n      color: \"#a2a2aa\",\n      fontFamily: \"overpass\",\n      paddingBottom: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }\n  }, !loggedIn ? PreferredLanguageText('createAccount') : \"\"), showSavePassword ? React.createElement(View, {\n    style: {\n      width: \"100%\",\n      backgroundColor: \"white\",\n      paddingTop: 20,\n      paddingBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#202025\",\n      fontSize: 14,\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }, PreferredLanguageText('currentPassword')), React.createElement(TextInput, {\n    secureTextEntry: true,\n    value: currentPassword,\n    placeholder: \"\",\n    onChangeText: function onChangeText(val) {\n      return setCurrentPassword(val);\n    },\n    placeholderTextColor: \"#a2a2aa\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: \"#202025\",\n      fontSize: 14,\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }, PreferredLanguageText('newPassword')), React.createElement(TextInput, {\n    secureTextEntry: true,\n    value: newPassword,\n    placeholder: \"\",\n    onChangeText: function onChangeText(val) {\n      return setNewPassword(val);\n    },\n    placeholderTextColor: \"#a2a2aa\",\n    errorText: newPasswordValidError,\n    footerMessage: PreferredLanguageText('atleast8char'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: \"#202025\",\n      fontSize: 14,\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }\n  }, PreferredLanguageText('confirmNewPassword')), React.createElement(TextInput, {\n    secureTextEntry: true,\n    value: confirmNewPassword,\n    placeholder: \"\",\n    onChangeText: function onChangeText(val) {\n      return setConfirmNewPassword(val);\n    },\n    placeholderTextColor: \"#a2a2aa\",\n    errorText: confirmNewPasswordError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  })) : React.createElement(View, {\n    style: {\n      width: \"100%\",\n      backgroundColor: \"white\",\n      paddingTop: 20,\n      paddingBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#202025\",\n      fontSize: 14,\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  }, PreferredLanguageText('email')), React.createElement(TextInput, {\n    editable: !loggedIn,\n    value: email,\n    placeholder: \"\",\n    onChangeText: function onChangeText(val) {\n      return setEmail(val);\n    },\n    placeholderTextColor: \"#a2a2aa\",\n    required: true,\n    errorText: emailValidError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: \"#202025\",\n      fontSize: 14,\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 13\n    }\n  }, PreferredLanguageText('fullName')), React.createElement(TextInput, {\n    value: fullName,\n    placeholder: \"\",\n    onChangeText: function onChangeText(val) {\n      return setFullName(val);\n    },\n    placeholderTextColor: \"#a2a2aa\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: \"#202025\",\n      fontSize: 14,\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 13\n    }\n  }, PreferredLanguageText('displayName')), React.createElement(TextInput, {\n    value: displayName,\n    placeholder: \"\",\n    onChangeText: function onChangeText(val) {\n      return setDisplayName(val);\n    },\n    placeholderTextColor: \"#a2a2aa\",\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }\n  }), loggedIn ? null : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#202025\",\n      fontSize: 14,\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 17\n    }\n  }, PreferredLanguageText('password')), React.createElement(TextInput, {\n    value: password,\n    placeholder: \"\",\n    onChangeText: function onChangeText(val) {\n      return setPassword(val);\n    },\n    placeholderTextColor: \"#a2a2aa\",\n    secureTextEntry: true,\n    required: true,\n    footerMessage: PreferredLanguageText('atleast8char'),\n    errorText: passwordValidError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: {\n      color: \"#202025\",\n      fontSize: 14,\n      paddingBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 17\n    }\n  }, PreferredLanguageText('confirmPassword')), React.createElement(TextInput, {\n    value: confirmPassword,\n    placeholder: \"\",\n    onChangeText: function onChangeText(val) {\n      return setConfirmPassword(val);\n    },\n    placeholderTextColor: \"#a2a2aa\",\n    secureTextEntry: true,\n    required: true,\n    errorText: confirmPasswordError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 17\n    }\n  }))), React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"white\",\n      justifyContent: \"center\",\n      display: \"flex\",\n      paddingTop: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }\n  }, loggedIn ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setShowSavePassword(!showSavePassword);\n    },\n    style: {\n      backgroundColor: \"white\",\n      overflow: \"hidden\",\n      height: 35,\n      marginTop: 15,\n      width: \"100%\",\n      justifyContent: \"center\",\n      flexDirection: \"row\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      lineHeight: 35,\n      color: \"#202025\",\n      fontSize: 12,\n      backgroundColor: \"#f4f4f6\",\n      paddingHorizontal: 25,\n      fontFamily: \"inter\",\n      height: 35,\n      width: 150,\n      borderRadius: 15,\n      textTransform: \"uppercase\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 15\n    }\n  }, showSavePassword ? PreferredLanguageText('back') : PreferredLanguageText('password'))) : React.createElement(View, {\n    style: {\n      height: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleSubmit();\n    },\n    style: {\n      backgroundColor: \"white\",\n      overflow: \"hidden\",\n      height: 35,\n      marginTop: 15,\n      width: \"100%\",\n      justifyContent: \"center\",\n      flexDirection: \"row\"\n    },\n    disabled: isSubmitDisabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      lineHeight: 35,\n      color: \"white\",\n      fontSize: 12,\n      backgroundColor: \"#3B64F8\",\n      paddingHorizontal: 25,\n      fontFamily: \"inter\",\n      height: 35,\n      borderRadius: 15,\n      width: 150,\n      textTransform: \"uppercase\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 13\n    }\n  }, loggedIn ? showSavePassword ? PreferredLanguageText('update') : PreferredLanguageText('save') : PreferredLanguageText('signUp'))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      if (loggedIn) {\n        logout();\n      } else {\n        window.location.reload();\n      }\n    },\n    style: {\n      backgroundColor: \"white\",\n      overflow: \"hidden\",\n      height: 35,\n      marginTop: 15,\n      width: \"100%\",\n      justifyContent: \"center\",\n      flexDirection: \"row\",\n      marginBottom: 100\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      lineHeight: 35,\n      color: \"#202025\",\n      fontSize: 12,\n      backgroundColor: \"#f4f4f6\",\n      paddingHorizontal: 25,\n      fontFamily: \"inter\",\n      height: 35,\n      width: 150,\n      borderRadius: 15,\n      textTransform: 'uppercase'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 13\n    }\n  }, loggedIn ? PreferredLanguageText('logout') : PreferredLanguageText('login'))))));\n};\n\nexport default ProfileControls;\nvar styles = StyleSheet.create({\n  screen: {\n    paddingHorizontal: 20,\n    width: \"100%\",\n    maxWidth: 600,\n    height: Dimensions.get(\"window\").height - 75,\n    backgroundColor: \"white\"\n  },\n  outline: {\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: \"#a2a2aa\"\n  },\n  all: {\n    fontSize: 15,\n    color: \"#a2a2aa\",\n    height: 22,\n    paddingHorizontal: 10,\n    backgroundColor: \"white\"\n  },\n  allOutline: {\n    fontSize: 15,\n    color: \"#a2a2aa\",\n    height: 22,\n    paddingHorizontal: 10,\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: \"#a2a2aa\"\n  },\n  colorBar: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    backgroundColor: \"white\",\n    marginBottom: \"15%\",\n    lineHeight: 18,\n    paddingTop: 15\n  }\n});","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/ProfileControls.tsx"],"names":["React","useState","useEffect","useCallback","Text","View","TouchableOpacity","AsyncStorage","ScrollView","fetchAPI","signup","updatePassword","updateUser","validateEmail","Alert","TextInput","PreferredLanguageText","OneSignal","ProfileControls","props","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","displayName","setDisplayName","fullName","setFullName","userFound","setUserFound","loggedIn","setLoggedIn","showSavePassword","setShowSavePassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","currentPassword","setCurrentPassword","isSubmitDisabled","setIsSubmitDisabled","emailValidError","setEmailValidError","passwordValidError","setPasswordValidError","confirmPasswordError","setConfirmPasswordError","newPasswordValidError","setNewPasswordValidError","confirmNewPasswordError","setConfirmNewPasswordError","currentFullName","setCurrentFullName","currentDisplayName","setCurrentDisplayName","passwordUpdatedAlert","incorrectCurrentPasswordAlert","passwordDoesNotMatchAlert","somethingWentWrongAlert","profileUpdatedAlert","enterValidEmailError","passwordInvalidError","handleSubmit","getItem","u","user","JSON","parse","server","mutate","mutation","variables","userId","_id","then","res","data","reOpenProfile","catch","err","toString","trim","toLowerCase","console","log","updatedUser","stringify","setItem","saveDataInCloud","update","e","getUser","parsedUser","logout","removeExternalUserId","clear","window","location","reload","validPasswrdRegex","test","styles","screen","width","backgroundColor","colorBar","fontSize","color","paddingBottom","textTransform","flex","lineHeight","paddingTop","fontFamily","val","justifyContent","display","overflow","height","marginTop","flexDirection","textAlign","paddingHorizontal","borderRadius","marginBottom","StyleSheet","create","maxWidth","Dimensions","get","outline","borderWidth","borderColor","all","allOutline"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;;;AAEA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,gBAArB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,UAAT,QAA2B,8BAA3B;AACA,SAASC,QAAT;AACA,SACEC,MADF,EAEEC,cAFF,EAGEC,UAHF;AAKA,SAASC,aAAT;AACA,OAAOC,KAAP;AACA,SAASC,SAAT;AACA,SAASC,qBAAT;AACA,OAAOC,SAAP,MAAsB,iBAAtB;;AAEA,IAAMC,eAAkE,GAAG,SAArEA,eAAqE,CACzEC,KADyE,EAEtE;AAAA,kBACuBlB,QAAQ,CAAC,EAAD,CAD/B;AAAA;AAAA,MACImB,KADJ;AAAA,MACWC,QADX;;AAAA,mBAE6BpB,QAAQ,CAAC,EAAD,CAFrC;AAAA;AAAA,MAEIqB,QAFJ;AAAA,MAEcC,WAFd;;AAAA,mBAG2CtB,QAAQ,CAAC,EAAD,CAHnD;AAAA;AAAA,MAGIuB,eAHJ;AAAA,MAGqBC,kBAHrB;;AAAA,mBAImCxB,QAAQ,CAAC,EAAD,CAJ3C;AAAA;AAAA,MAIIyB,WAJJ;AAAA,MAIiBC,cAJjB;;AAAA,mBAK6B1B,QAAQ,CAAC,EAAD,CALrC;AAAA;AAAA,MAKI2B,QALJ;AAAA,MAKcC,WALd;;AAAA,oBAM+B5B,QAAQ,CAAC,KAAD,CANvC;AAAA;AAAA,MAMI6B,SANJ;AAAA,MAMeC,YANf;;AAAA,oBAO6B9B,QAAQ,CAAC,KAAD,CAPrC;AAAA;AAAA,MAOI+B,QAPJ;AAAA,MAOcC,WAPd;;AAAA,oBAQ6ChC,QAAQ,CAAC,KAAD,CARrD;AAAA;AAAA,MAQIiC,gBARJ;AAAA,MAQsBC,mBARtB;;AAAA,oBASmClC,QAAQ,CAAC,EAAD,CAT3C;AAAA;AAAA,MASImC,WATJ;AAAA,MASiBC,cATjB;;AAAA,oBAUiDpC,QAAQ,CAAC,EAAD,CAVzD;AAAA;AAAA,MAUIqC,kBAVJ;AAAA,MAUwBC,qBAVxB;;AAAA,oBAW2CtC,QAAQ,CAAC,EAAD,CAXnD;AAAA;AAAA,MAWIuC,eAXJ;AAAA,MAWqBC,kBAXrB;;AAAA,oBAY6CxC,QAAQ,CAAC,IAAD,CAZrD;AAAA;AAAA,MAYIyC,gBAZJ;AAAA,MAYsBC,mBAZtB;;AAAA,oBAe2C1C,QAAQ,CAAC,EAAD,CAfnD;AAAA;AAAA,MAeI2C,eAfJ;AAAA,MAeqBC,kBAfrB;;AAAA,oBAgBiD5C,QAAQ,CAAC,EAAD,CAhBzD;AAAA;AAAA,MAgBI6C,kBAhBJ;AAAA,MAgBwBC,qBAhBxB;;AAAA,oBAiBqD9C,QAAQ,CAAC,EAAD,CAjB7D;AAAA;AAAA,MAiBI+C,oBAjBJ;AAAA,MAiB0BC,uBAjB1B;;AAAA,oBAoBuDhD,QAAQ,CAAC,EAAD,CApB/D;AAAA;AAAA,MAoBIiD,qBApBJ;AAAA,MAoB2BC,wBApB3B;;AAAA,oBAqB2DlD,QAAQ,CAAC,EAAD,CArBnE;AAAA;AAAA,MAqBImD,uBArBJ;AAAA,MAqB6BC,0BArB7B;;AAAA,oBAyB2CpD,QAAQ,CAAC,EAAD,CAzBnD;AAAA;AAAA,MAyBIqD,eAzBJ;AAAA,MAyBqBC,kBAzBrB;;AAAA,oBA0BiDtD,QAAQ,CAAC,EAAD,CA1BzD;AAAA;AAAA,MA0BIuD,kBA1BJ;AAAA,MA0BwBC,qBA1BxB;;AA6BH,MAAMC,oBAAoB,GAAG1C,qBAAqB,CAAC,iBAAD,CAAlD;AACA,MAAM2C,6BAA6B,GAAG3C,qBAAqB,CAAC,0BAAD,CAA3D;AACA,MAAM4C,yBAAyB,GAAG5C,qBAAqB,CAAC,sBAAD,CAAvD;AACA,MAAM6C,uBAAuB,GAAG7C,qBAAqB,CAAC,oBAAD,CAArD;AACA,MAAM8C,mBAAmB,GAAG9C,qBAAqB,CAAC,gBAAD,CAAjD;AACA,MAAM+C,oBAAoB,GAAG/C,qBAAqB,CAAC,iBAAD,CAAlD;AACA,MAAMgD,oBAAoB,GAAGhD,qBAAqB,CAAC,cAAD,CAAlD;AAEA,MAAMiD,YAAY,GAAG9D,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACfI,YAAY,CAAC2D,OAAb,CAAqB,MAArB,CADe;;AAAA;AACzBC,YAAAA,CADyB;;AAAA,gBAE1BA,CAF0B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKzBC,YAAAA,IALyB,GAKlBC,IAAI,CAACC,KAAL,CAAWH,CAAX,CALkB;AAMzBI,YAAAA,MANyB,GAMhB9D,QAAQ,CAAC,EAAD,CANQ;;AAAA,iBAQ3ByB,gBAR2B;AAAA;AAAA;AAAA;;AAU7BqC,YAAAA,MAAM,CACHC,MADH,CACU;AACNC,cAAAA,QAAQ,EAAE9D,cADJ;AAEN+D,cAAAA,SAAS,EAAE;AACTC,gBAAAA,MAAM,EAAEP,IAAI,CAACQ,GADJ;AAETpC,gBAAAA,eAAe,EAAfA,eAFS;AAGTJ,gBAAAA,WAAW,EAAXA;AAHS;AAFL,aADV,EASGyC,IATH,CASQ,UAAAC,GAAG,EAAI;AACX,kBAAIA,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASX,IAAT,CAAczD,cAA9B,EAA8C;AAC5CG,gBAAAA,KAAK,CAAC4C,oBAAD,CAAL;AACAvC,gBAAAA,KAAK,CAAC6D,aAAN;AACD,eAHD,MAGO;AACLlE,gBAAAA,KAAK,CAAC6C,6BAAD,CAAL;AACD;AACF,aAhBH,EAiBGsB,KAjBH,CAiBS,UAAAC,GAAG,EAAI;AACZpE,cAAAA,KAAK,CAAC+C,uBAAD,CAAL;AACD,aAnBH;AAV6B;;AAAA;AAiC/B,gBAAI,CAAC7B,QAAL,EAAe;AACbuC,cAAAA,MAAM,CACHC,MADH,CACU;AACNC,gBAAAA,QAAQ,EAAE/D,MADJ;AAENgE,gBAAAA,SAAS,EAAE;AACTtD,kBAAAA,KAAK,EAAEA,KAAK,CACT+D,QADI,GAEJC,IAFI,GAGJC,WAHI,EADE;AAKT/D,kBAAAA,QAAQ,EAAEA,QAAQ,CAAC6D,QAAT,EALD;AAMTvD,kBAAAA,QAAQ,EAAEA,QAAQ,CAACuD,QAAT,GAAoBC,IAApB,EAND;AAOT1D,kBAAAA,WAAW,EAAEA,WAAW,CAACyD,QAAZ,GAAuBC,IAAvB,EAPJ;AAQTT,kBAAAA,MAAM,EAAEP,IAAI,CAACQ;AARJ;AAFL,eADV,EAcGC,IAdH,CAcQ,iBAAMC,GAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACJQ,wBAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;;AADI,8BAEAA,GAAG,CAACC,IAAJ,CAASX,IAAT,CAAc1D,MAAd,KAAyB,EAFzB;AAAA;AAAA;AAAA;;AAGI0D,wBAAAA,KAHJ,GAGWC,IAAI,CAACC,KAAL,CAAWH,CAAX,CAHX;AAIFC,wBAAAA,KAAI,CAAChD,KAAL,GAAaA,KAAb;AACAgD,wBAAAA,KAAI,CAACxC,QAAL,GAAgBA,QAAhB;AACAwC,wBAAAA,KAAI,CAAC1C,WAAL,GAAmBA,WAAnB;AACM8D,wBAAAA,WAPJ,GAOkBnB,IAAI,CAACoB,SAAL,CAAerB,KAAf,CAPlB;AAAA;AAAA,yDAQI7D,YAAY,CAACmF,OAAb,CAAqB,MAArB,EAA6BF,WAA7B,CARJ;;AAAA;AASFrE,wBAAAA,KAAK,CAACwE,eAAN;AACAxE,wBAAAA,KAAK,CAAC6D,aAAN;AAVE;AAAA;;AAAA;AAaFlE,wBAAAA,KAAK,CAACgE,GAAG,CAACC,IAAJ,CAASX,IAAT,CAAc1D,MAAd,IAAwBmD,uBAAzB,CAAL;;AAbE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdR;AA8BD,aA/BD,MA+BO;AAELU,cAAAA,MAAM,CACHC,MADH,CACU;AACNC,gBAAAA,QAAQ,EAAE7D,UADJ;AAEN8D,gBAAAA,SAAS,EAAE;AACThD,kBAAAA,WAAW,EAAXA,WADS;AAETE,kBAAAA,QAAQ,EAARA,QAFS;AAGT+C,kBAAAA,MAAM,EAAEP,IAAI,CAACQ;AAHJ;AAFL,eADV,EASGC,IATH,CASQ,kBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACAA,GAAG,CAACC,IAAJ,IAAYD,GAAG,CAACC,IAAJ,CAASX,IAAT,CAAcwB,MAD1B;AAAA;AAAA;AAAA;;AAEFxB,wBAAAA,IAAI,CAACxC,QAAL,GAAgBA,QAAhB;AACAwC,wBAAAA,IAAI,CAAC1C,WAAL,GAAmBA,WAAnB;AACM8D,wBAAAA,WAJJ,GAIkBnB,IAAI,CAACoB,SAAL,CAAerB,IAAf,CAJlB;AAAA;AAAA,yDAKI7D,YAAY,CAACmF,OAAb,CAAqB,MAArB,EAA6BF,WAA7B,CALJ;;AAAA;AAMF1E,wBAAAA,KAAK,CAACgD,mBAAD,CAAL;AACA3C,wBAAAA,KAAK,CAAC6D,aAAN;AAPE;AAAA;;AAAA;AASFlE,wBAAAA,KAAK,CAAC+C,uBAAD,CAAL;;AATE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eATR,EAqBGoB,KArBH,CAqBS,UAAAY,CAAC;AAAA,uBAAI/E,KAAK,CAAC+C,uBAAD,CAAT;AAAA,eArBV;AAsBD;;AAxF8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAyF7B,CACD7B,QADC,EAEDZ,KAFC,EAGDE,QAHC,EAIDI,WAJC,EAKDE,QALC,EAMDJ,eANC,EAODU,gBAPC,EAQDE,WARC,EASDI,eATC,CAzF6B,CAAhC;AAqGA,MAAMsD,OAAO,GAAG3F,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACVI,YAAY,CAAC2D,OAAb,CAAqB,MAArB,CADU;;AAAA;AACpBC,YAAAA,CADoB;;AAE1B,gBAAIA,CAAJ,EAAO;AACC4B,cAAAA,UADD,GACc1B,IAAI,CAACC,KAAL,CAAWH,CAAX,CADd;;AAEL,kBAAI4B,UAAU,CAAC3E,KAAf,EAAsB;AACpBa,gBAAAA,WAAW,CAAC,IAAD,CAAX;AACAZ,gBAAAA,QAAQ,CAAC0E,UAAU,CAAC3E,KAAZ,CAAR;AACAO,gBAAAA,cAAc,CAACoE,UAAU,CAACrE,WAAZ,CAAd;AACAG,gBAAAA,WAAW,CAACkE,UAAU,CAACnE,QAAZ,CAAX;AAEA6B,gBAAAA,qBAAqB,CAACsC,UAAU,CAACrE,WAAZ,CAArB;AACA6B,gBAAAA,kBAAkB,CAACwC,UAAU,CAACnE,QAAZ,CAAlB;AACD;;AACDG,cAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAdyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAexB,EAfwB,CAA3B;AAiBA,MAAMiE,MAAM,GAAG7F,WAAW,CAAC;AAAA;AAAA;AAAA;AAAA;AACzBc,YAAAA,SAAS,CAACgF,oBAAV;AADyB;AAAA,6CAEnB1F,YAAY,CAAC2F,KAAb,EAFmB;;AAAA;AAGzBC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;;AAHyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAIvB,EAJuB,CAA1B;AAMAnG,EAAAA,SAAS,CAAC,YAAM;AACd4F,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAKA5F,EAAAA,SAAS,CAAC,YAAM;AAEd,QACEgC,gBAAgB,IAChBM,eADA,IAEAJ,WAFA,IAGAE,kBAHA,IAIA,CAACY,qBAJD,IAKA,CAACE,uBANH,EAOE;AACAT,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA;AACD;;AAGD,QACE,CAACT,gBAAD,IACAF,QADA,IAEAJ,QAFA,IAGAF,WAHA,KAICE,QAAQ,KAAK0B,eAAb,IAAgC5B,WAAW,KAAK8B,kBAJjD,CADF,EAME;AACAb,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA;AACD;;AAGD,QACE,CAACX,QAAD,IACAZ,KADA,IAEAQ,QAFA,IAGAF,WAHA,IAIAJ,QAJA,IAKAE,eALA,IAMA,CAACoB,eAND,IAOA,CAACE,kBAPD,IAQA,CAACE,oBATH,EAUE;AACAL,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA;AACD;;AAEDA,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GA3CQ,EA2CN,CACDX,QADC,EAEDZ,KAFC,EAGDQ,QAHC,EAIDF,WAJC,EAKDJ,QALC,EAMDE,eANC,EAODoB,eAPC,EAQDE,kBARC,EASDE,oBATC,EAUDd,gBAVC,EAWDM,eAXC,EAYDJ,WAZC,EAaDE,kBAbC,EAcDY,qBAdC,EAeDE,uBAfC,EAgBDI,kBAhBC,EAiBDF,eAjBC,CA3CM,CAAT;AA+DApD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkB,KAAK,IAAI,CAACP,aAAa,CAACO,KAAK,CAAC+D,QAAN,GAAiBE,WAAjB,EAAD,CAA3B,EAA6D;AAC3DxC,MAAAA,kBAAkB,CAACkB,oBAAD,CAAlB;AACA;AACD;;AAEDlB,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,GAPQ,EAON,CAACzB,KAAD,CAPM,CAAT;AASAlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMoG,iBAAiB,GAAG,uDAA1B;;AAEA,QAAIhF,QAAQ,IAAI,CAACgF,iBAAiB,CAACC,IAAlB,CAAuBjF,QAAvB,CAAjB,EAAmD;AACjDyB,MAAAA,qBAAqB,CAACiB,oBAAD,CAArB;AACA;AACD;;AAEDjB,IAAAA,qBAAqB,CAAC,EAAD,CAArB;AACD,GATQ,EASN,CAACzB,QAAD,CATM,CAAT;AAWApB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIoB,QAAQ,IAAIE,eAAZ,IAA+BF,QAAQ,KAAKE,eAAhD,EAAiE;AAC/DyB,MAAAA,uBAAuB,CAACW,yBAAD,CAAvB;AACA;AACD;;AAEDX,IAAAA,uBAAuB,CAAC,EAAD,CAAvB;AACD,GAPQ,EAON,CAAC3B,QAAD,EAAWE,eAAX,CAPM,CAAT;AASAtB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMoG,iBAAiB,GAAG,uDAA1B;;AAEA,QAAIlE,WAAW,IAAI,CAACkE,iBAAiB,CAACC,IAAlB,CAAuBnE,WAAvB,CAApB,EAAyD;AACvDe,MAAAA,wBAAwB,CAACa,oBAAD,CAAxB;AACA;AACD;;AAEDb,IAAAA,wBAAwB,CAAC,EAAD,CAAxB;AACD,GATQ,EASN,CAACf,WAAD,CATM,CAAT;AAWAlC,EAAAA,SAAS,CAAC,YAAM;AACd,QACEkC,WAAW,IACXE,kBADA,IAEAF,WAAW,KAAKE,kBAHlB,EAIE;AACAe,MAAAA,0BAA0B,CAACO,yBAAD,CAA1B;AACA;AACD;;AAEDP,IAAAA,0BAA0B,CAAC,EAAD,CAA1B;AACD,GAXQ,EAWN,CAACjB,WAAD,EAAcE,kBAAd,CAXM,CAAT;;AAaA,MAAI,CAACR,SAAL,EAAgB;AACd,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE0E,MAAM,CAACC,MAApB;AAA4B,MAAA,GAAG,EAAE,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,eAAe,EAAE;AAAlC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACI,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG9F,qBAAqB,CAAC,mBAAD,CADxB,CADF,CADF,CADF,CADF;AAWD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwF,MAAM,CAACC,MAApB;AAA4B,IAAA,GAAG,EAAE,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,eAAe,EAAE;AAAlC,KADT;AAEE,IAAA,4BAA4B,EAAE,KAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA,QAAQ,EAAE,EADL;AAELE,MAAAA,aAAa,EAAE,EAFV;AAGLC,MAAAA,aAAa,EAAE,WAHV;AAKLC,MAAAA,IAAI,EAAE,CALD;AAMLC,MAAAA,UAAU,EAAE;AANP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASG,CAAClF,QAAD,GAAYhB,qBAAqB,CAAC,QAAD,CAAjC,GAA8CA,qBAAqB,CAAC,SAAD,CATtE,CAJF,EAeE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACL6F,MAAAA,QAAQ,EAAE,EADL;AAELM,MAAAA,UAAU,EAAE,EAFP;AAGLL,MAAAA,KAAK,EAAE,SAHF;AAILM,MAAAA,UAAU,EAAE,UAJP;AAKLL,MAAAA,aAAa,EAAE;AALV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUG,CAAC/E,QAAD,GAAYhB,qBAAqB,CAAC,eAAD,CAAjC,GAAqD,EAVxD,CAfF,EA2BGkB,gBAAgB,GACf,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLwE,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,eAAe,EAAE,OAFZ;AAGLQ,MAAAA,UAAU,EAAE,EAHP;AAILJ,MAAAA,aAAa,EAAE;AAJV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBD,MAAAA,QAAQ,EAAE,EAA9B;AAAkCE,MAAAA,aAAa,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/F,qBAAqB,CAAC,iBAAD,CADxB,CARF,EAWE,oBAAC,SAAD;AACE,IAAA,eAAe,EAAE,IADnB;AAEE,IAAA,KAAK,EAAEwB,eAFT;AAGE,IAAA,WAAW,EAAE,EAHf;AAIE,IAAA,YAAY,EAAE,sBAAA6E,GAAG;AAAA,aAAI5E,kBAAkB,CAAC4E,GAAD,CAAtB;AAAA,KAJnB;AAKE,IAAA,oBAAoB,EAAE,SALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAkBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEP,MAAAA,KAAK,EAAE,SAAT;AAAoBD,MAAAA,QAAQ,EAAE,EAA9B;AAAkCE,MAAAA,aAAa,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/F,qBAAqB,CAAC,aAAD,CADxB,CAlBF,EAqBE,oBAAC,SAAD;AACE,IAAA,eAAe,EAAE,IADnB;AAEE,IAAA,KAAK,EAAEoB,WAFT;AAGE,IAAA,WAAW,EAAE,EAHf;AAIE,IAAA,YAAY,EAAE,sBAAAiF,GAAG;AAAA,aAAIhF,cAAc,CAACgF,GAAD,CAAlB;AAAA,KAJnB;AAKE,IAAA,oBAAoB,EAAE,SALxB;AAME,IAAA,SAAS,EAAEnE,qBANb;AAOE,IAAA,aAAa,EACXlC,qBAAqB,CAAC,cAAD,CARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,EAgCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAE8F,MAAAA,KAAK,EAAE,SAAT;AAAoBD,MAAAA,QAAQ,EAAE,EAA9B;AAAkCE,MAAAA,aAAa,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/F,qBAAqB,CAAC,oBAAD,CADxB,CAhCF,EAmCE,oBAAC,SAAD;AACE,IAAA,eAAe,EAAE,IADnB;AAEE,IAAA,KAAK,EAAEsB,kBAFT;AAGE,IAAA,WAAW,EAAE,EAHf;AAIE,IAAA,YAAY,EAAE,sBAAA+E,GAAG;AAAA,aAAI9E,qBAAqB,CAAC8E,GAAD,CAAzB;AAAA,KAJnB;AAKE,IAAA,oBAAoB,EAAE,SALxB;AAME,IAAA,SAAS,EAAEjE,uBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnCF,CADe,GA8Cf,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLsD,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,eAAe,EAAE,OAFZ;AAGLQ,MAAAA,UAAU,EAAE,EAHP;AAILJ,MAAAA,aAAa,EAAE;AAJV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE,SAAT;AAAoBD,MAAAA,QAAQ,EAAE,EAA9B;AAAkCE,MAAAA,aAAa,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/F,qBAAqB,CAAC,OAAD,CADxB,CARF,EAWE,oBAAC,SAAD;AACE,IAAA,QAAQ,EAAE,CAACgB,QADb;AAEE,IAAA,KAAK,EAAEZ,KAFT;AAGE,IAAA,WAAW,EAAE,EAHf;AAIE,IAAA,YAAY,EAAE,sBAAAiG,GAAG;AAAA,aAAIhG,QAAQ,CAACgG,GAAD,CAAZ;AAAA,KAJnB;AAKE,IAAA,oBAAoB,EAAE,SALxB;AAME,IAAA,QAAQ,EAAE,IANZ;AAOE,IAAA,SAAS,EAAEzE,eAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAoBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEkE,MAAAA,KAAK,EAAE,SAAT;AAAoBD,MAAAA,QAAQ,EAAE,EAA9B;AAAkCE,MAAAA,aAAa,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/F,qBAAqB,CAAC,UAAD,CADxB,CApBF,EAuBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEY,QADT;AAEE,IAAA,WAAW,EAAE,EAFf;AAGE,IAAA,YAAY,EAAE,sBAAAyF,GAAG;AAAA,aAAIxF,WAAW,CAACwF,GAAD,CAAf;AAAA,KAHnB;AAIE,IAAA,oBAAoB,EAAE,SAJxB;AAKE,IAAA,QAAQ,EAAE,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,EA8BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEP,MAAAA,KAAK,EAAE,SAAT;AAAoBD,MAAAA,QAAQ,EAAE,EAA9B;AAAkCE,MAAAA,aAAa,EAAE;AAAjD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG/F,qBAAqB,CAAC,aAAD,CADxB,CA9BF,EAiCE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEU,WADT;AAEE,IAAA,WAAW,EAAE,EAFf;AAGE,IAAA,YAAY,EAAE,sBAAA2F,GAAG;AAAA,aAAI1F,cAAc,CAAC0F,GAAD,CAAlB;AAAA,KAHnB;AAIE,IAAA,oBAAoB,EAAE,SAJxB;AAKE,IAAA,QAAQ,EAAE,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjCF,EAwCGrF,QAAQ,GAAG,IAAH,GACP,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAE8E,MAAAA,KAAK,EAAE,SAAT;AAAoBD,MAAAA,QAAQ,EAAE,EAA9B;AAAkCE,MAAAA,aAAa,EAAE;AAAjD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG/F,qBAAqB,CAAC,UAAD,CAHxB,CADF,EAME,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEM,QADT;AAEE,IAAA,WAAW,EAAE,EAFf;AAGE,IAAA,YAAY,EAAE,sBAAA+F,GAAG;AAAA,aAAI9F,WAAW,CAAC8F,GAAD,CAAf;AAAA,KAHnB;AAIE,IAAA,oBAAoB,EAAE,SAJxB;AAKE,IAAA,eAAe,EAAE,IALnB;AAME,IAAA,QAAQ,EAAE,IANZ;AAOE,IAAA,aAAa,EACXrG,qBAAqB,CAAC,cAAD,CARzB;AAUE,IAAA,SAAS,EAAE8B,kBAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAkBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AAAEgE,MAAAA,KAAK,EAAE,SAAT;AAAoBD,MAAAA,QAAQ,EAAE,EAA9B;AAAkCE,MAAAA,aAAa,EAAE;AAAjD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG/F,qBAAqB,CAAC,iBAAD,CAHxB,CAlBF,EAuBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEQ,eADT;AAEE,IAAA,WAAW,EAAE,EAFf;AAGE,IAAA,YAAY,EAAE,sBAAA6F,GAAG;AAAA,aAAI5F,kBAAkB,CAAC4F,GAAD,CAAtB;AAAA,KAHnB;AAIE,IAAA,oBAAoB,EAAE,SAJxB;AAKE,IAAA,eAAe,EAAE,IALnB;AAME,IAAA,QAAQ,EAAE,IANZ;AAOE,IAAA,SAAS,EAAErE,oBAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CAzCJ,CAzEJ,EAsJE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLiE,MAAAA,IAAI,EAAE,CADD;AAELN,MAAAA,eAAe,EAAE,OAFZ;AAGLW,MAAAA,cAAc,EAAE,QAHX;AAILC,MAAAA,OAAO,EAAE,MAJJ;AAKLJ,MAAAA,UAAU,EAAE;AALP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGnF,QAAQ,GACP,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMG,mBAAmB,CAAC,CAACD,gBAAF,CAAzB;AAAA,KADX;AAEE,IAAA,KAAK,EAAE;AACLyE,MAAAA,eAAe,EAAE,OADZ;AAELa,MAAAA,QAAQ,EAAE,QAFL;AAGLC,MAAAA,MAAM,EAAE,EAHH;AAILC,MAAAA,SAAS,EAAE,EAJN;AAKLhB,MAAAA,KAAK,EAAE,MALF;AAMLY,MAAAA,cAAc,EAAE,QANX;AAOLK,MAAAA,aAAa,EAAE;AAPV,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,SAAS,EAAE,QADN;AAELV,MAAAA,UAAU,EAAE,EAFP;AAGLJ,MAAAA,KAAK,EAAE,SAHF;AAILD,MAAAA,QAAQ,EAAE,EAJL;AAKLF,MAAAA,eAAe,EAAE,SALZ;AAMLkB,MAAAA,iBAAiB,EAAE,EANd;AAOLT,MAAAA,UAAU,EAAE,OAPP;AAQLK,MAAAA,MAAM,EAAE,EARH;AASLf,MAAAA,KAAK,EAAE,GATF;AAULoB,MAAAA,YAAY,EAAE,EAVT;AAWLd,MAAAA,aAAa,EAAE;AAXV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeG9E,gBAAgB,GAAGlB,qBAAqB,CAAC,MAAD,CAAxB,GAAmCA,qBAAqB,CAAC,UAAD,CAf3E,CAZF,CADO,GAgCP,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEyG,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzCJ,EA2CE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMxD,YAAY,EAAlB;AAAA,KADX;AAEE,IAAA,KAAK,EAAE;AACL0C,MAAAA,eAAe,EAAE,OADZ;AAELa,MAAAA,QAAQ,EAAE,QAFL;AAGLC,MAAAA,MAAM,EAAE,EAHH;AAILC,MAAAA,SAAS,EAAE,EAJN;AAKLhB,MAAAA,KAAK,EAAE,MALF;AAMLY,MAAAA,cAAc,EAAE,QANX;AAOLK,MAAAA,aAAa,EAAE;AAPV,KAFT;AAWE,IAAA,QAAQ,EAAEjF,gBAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLkF,MAAAA,SAAS,EAAE,QADN;AAELV,MAAAA,UAAU,EAAE,EAFP;AAGLJ,MAAAA,KAAK,EAAE,OAHF;AAILD,MAAAA,QAAQ,EAAE,EAJL;AAKLF,MAAAA,eAAe,EAAE,SALZ;AAMLkB,MAAAA,iBAAiB,EAAE,EANd;AAOLT,MAAAA,UAAU,EAAE,OAPP;AAQLK,MAAAA,MAAM,EAAE,EARH;AASLK,MAAAA,YAAY,EAAE,EATT;AAULpB,MAAAA,KAAK,EAAE,GAVF;AAWLM,MAAAA,aAAa,EAAE;AAXV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeGhF,QAAQ,GAAIE,gBAAgB,GAAGlB,qBAAqB,CAAC,QAAD,CAAxB,GAAqCA,qBAAqB,CAAC,MAAD,CAA9E,GAA0FA,qBAAqB,CAAC,QAAD,CAf1H,CAbF,CA3CF,EA0EE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIgB,QAAJ,EAAc;AACZgE,QAAAA,MAAM;AACP,OAFD,MAEO;AACLG,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD;AACF,KAPH;AAQE,IAAA,KAAK,EAAE;AACLM,MAAAA,eAAe,EAAE,OADZ;AAELa,MAAAA,QAAQ,EAAE,QAFL;AAGLC,MAAAA,MAAM,EAAE,EAHH;AAILC,MAAAA,SAAS,EAAE,EAJN;AAKLhB,MAAAA,KAAK,EAAE,MALF;AAMLY,MAAAA,cAAc,EAAE,QANX;AAOLK,MAAAA,aAAa,EAAE,KAPV;AAQLI,MAAAA,YAAY,EAAE;AART,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmBE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,SAAS,EAAE,QADN;AAELV,MAAAA,UAAU,EAAE,EAFP;AAGLJ,MAAAA,KAAK,EAAE,SAHF;AAILD,MAAAA,QAAQ,EAAE,EAJL;AAKLF,MAAAA,eAAe,EAAE,SALZ;AAMLkB,MAAAA,iBAAiB,EAAE,EANd;AAOLT,MAAAA,UAAU,EAAE,OAPP;AAQLK,MAAAA,MAAM,EAAE,EARH;AASLf,MAAAA,KAAK,EAAE,GATF;AAULoB,MAAAA,YAAY,EAAE,EAVT;AAWLd,MAAAA,aAAa,EAAE;AAXV,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeGhF,QAAQ,GAAGhB,qBAAqB,CAAC,QAAD,CAAxB,GAAqCA,qBAAqB,CAAC,OAAD,CAfrE,CAnBF,CA1EF,CAtJF,CADF,CADF;AA2QD,CArjBD;;AAujBA,eAAeE,eAAf;AAEA,IAAMsF,MAAM,GAAGwB,UAAU,CAACC,MAAX,CAAkB;AAC/BxB,EAAAA,MAAM,EAAE;AACNoB,IAAAA,iBAAiB,EAAE,EADb;AAENnB,IAAAA,KAAK,EAAE,MAFD;AAGNwB,IAAAA,QAAQ,EAAE,GAHJ;AAINT,IAAAA,MAAM,EAAEU,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBX,MAAzB,GAAkC,EAJpC;AAKNd,IAAAA,eAAe,EAAE;AALX,GADuB;AAQ/B0B,EAAAA,OAAO,EAAE;AACPP,IAAAA,YAAY,EAAE,EADP;AAEPQ,IAAAA,WAAW,EAAE,CAFN;AAGPC,IAAAA,WAAW,EAAE;AAHN,GARsB;AAa/BC,EAAAA,GAAG,EAAE;AACH3B,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,KAAK,EAAE,SAFJ;AAGHW,IAAAA,MAAM,EAAE,EAHL;AAIHI,IAAAA,iBAAiB,EAAE,EAJhB;AAKHlB,IAAAA,eAAe,EAAE;AALd,GAb0B;AAoB/B8B,EAAAA,UAAU,EAAE;AACV5B,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,KAAK,EAAE,SAFG;AAGVW,IAAAA,MAAM,EAAE,EAHE;AAIVI,IAAAA,iBAAiB,EAAE,EAJT;AAKVlB,IAAAA,eAAe,EAAE,OALP;AAMVmB,IAAAA,YAAY,EAAE,EANJ;AAOVQ,IAAAA,WAAW,EAAE,CAPH;AAQVC,IAAAA,WAAW,EAAE;AARH,GApBmB;AA8B/B3B,EAAAA,QAAQ,EAAE;AACRF,IAAAA,KAAK,EAAE,MADC;AAERiB,IAAAA,aAAa,EAAE,KAFP;AAGRhB,IAAAA,eAAe,EAAE,OAHT;AAIRoB,IAAAA,YAAY,EAAE,KAJN;AAKRb,IAAAA,UAAU,EAAE,EALJ;AAMRC,IAAAA,UAAU,EAAE;AANJ;AA9BqB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Dimensions, StyleSheet } from \"react-native\";\r\nimport { Text, View, TouchableOpacity } from \"./Themed\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { fetchAPI } from \"../graphql/FetchAPI\";\r\nimport {\r\n  signup,\r\n  updatePassword,\r\n  updateUser\r\n} from \"../graphql/QueriesAndMutations\";\r\nimport { validateEmail } from \"../helpers/emailCheck\";\r\nimport Alert from \"../components/Alert\";\r\nimport { TextInput } from \"./CustomTextInput\";\r\nimport { PreferredLanguageText } from \"../helpers/LanguageContext\";\r\nimport OneSignal from \"react-onesignal\";\r\n\r\nconst ProfileControls: React.FunctionComponent<{ [label: string]: any }> = (\r\n  props: any\r\n) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [userFound, setUserFound] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [showSavePassword, setShowSavePassword] = useState(false);\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(true);\r\n\r\n  // Signup Validation\r\n  const [emailValidError, setEmailValidError] = useState(\"\");\r\n  const [passwordValidError, setPasswordValidError] = useState(\"\");\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\r\n\r\n  // Change Password Validation\r\n  const [newPasswordValidError, setNewPasswordValidError] = useState(\"\");\r\n  const [confirmNewPasswordError, setConfirmNewPasswordError] = useState(\"\");\r\n\r\n  // Current Profile Change Validation\r\n  // Store existing fullname and displayname to see if anything has changed when updating profile\r\n  const [currentFullName, setCurrentFullName] = useState(\"\");\r\n  const [currentDisplayName, setCurrentDisplayName] = useState(\"\");\r\n\r\n  // Alerts\r\n  const passwordUpdatedAlert = PreferredLanguageText('passwordUpdated');\r\n  const incorrectCurrentPasswordAlert = PreferredLanguageText('incorrectCurrentPassword');\r\n  const passwordDoesNotMatchAlert = PreferredLanguageText('passwordDoesNotMatch');\r\n  const somethingWentWrongAlert = PreferredLanguageText('somethingWentWrong');\r\n  const profileUpdatedAlert = PreferredLanguageText('profileUpdated');\r\n  const enterValidEmailError = PreferredLanguageText('enterValidEmail')\r\n  const passwordInvalidError = PreferredLanguageText('atleast8char')\r\n\r\n  const handleSubmit = useCallback(async () => {\r\n    const u = await AsyncStorage.getItem(\"user\");\r\n    if (!u) {\r\n      return;\r\n    }\r\n    const user = JSON.parse(u);\r\n    const server = fetchAPI(\"\");\r\n\r\n    if (showSavePassword) {\r\n      // reset password\r\n      server\r\n        .mutate({\r\n          mutation: updatePassword,\r\n          variables: {\r\n            userId: user._id,\r\n            currentPassword,\r\n            newPassword\r\n          }\r\n        })\r\n        .then(res => {\r\n          if (res.data && res.data.user.updatePassword) {\r\n            Alert(passwordUpdatedAlert);\r\n            props.reOpenProfile();\r\n          } else {\r\n            Alert(incorrectCurrentPasswordAlert);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          Alert(somethingWentWrongAlert);\r\n        });\r\n      return;\r\n    }\r\n\r\n    if (!loggedIn) {\r\n      server\r\n        .mutate({\r\n          mutation: signup,\r\n          variables: {\r\n            email: email\r\n              .toString()\r\n              .trim()\r\n              .toLowerCase(),\r\n            password: password.toString(),\r\n            fullName: fullName.toString().trim(),\r\n            displayName: displayName.toString().trim(),\r\n            userId: user._id\r\n          }\r\n        })\r\n        .then(async res => {\r\n          console.log(res);\r\n          if (res.data.user.signup === \"\") {\r\n            const user = JSON.parse(u);\r\n            user.email = email;\r\n            user.fullName = fullName;\r\n            user.displayName = displayName;\r\n            const updatedUser = JSON.stringify(user);\r\n            await AsyncStorage.setItem(\"user\", updatedUser);\r\n            props.saveDataInCloud();\r\n            props.reOpenProfile();\r\n          } else {\r\n            // Error\r\n            Alert(res.data.user.signup || somethingWentWrongAlert);\r\n          }\r\n        });\r\n    } else {\r\n      // update profile if already logged in\r\n      server\r\n        .mutate({\r\n          mutation: updateUser,\r\n          variables: {\r\n            displayName,\r\n            fullName,\r\n            userId: user._id\r\n          }\r\n        })\r\n        .then(async res => {\r\n          if (res.data && res.data.user.update) {\r\n            user.fullName = fullName;\r\n            user.displayName = displayName;\r\n            const updatedUser = JSON.stringify(user);\r\n            await AsyncStorage.setItem(\"user\", updatedUser);\r\n            Alert(profileUpdatedAlert);\r\n            props.reOpenProfile();\r\n          } else {\r\n            Alert(somethingWentWrongAlert);\r\n          }\r\n        })\r\n        .catch(e => Alert(somethingWentWrongAlert));\r\n    }\r\n  }, [\r\n    loggedIn,\r\n    email,\r\n    password,\r\n    displayName,\r\n    fullName,\r\n    confirmPassword,\r\n    showSavePassword,\r\n    newPassword,\r\n    currentPassword\r\n  ]);\r\n\r\n  const getUser = useCallback(async () => {\r\n    const u = await AsyncStorage.getItem(\"user\");\r\n    if (u) {\r\n      const parsedUser = JSON.parse(u);\r\n      if (parsedUser.email) {\r\n        setLoggedIn(true);\r\n        setEmail(parsedUser.email);\r\n        setDisplayName(parsedUser.displayName);\r\n        setFullName(parsedUser.fullName);\r\n\r\n        setCurrentDisplayName(parsedUser.displayName);\r\n        setCurrentFullName(parsedUser.fullName);\r\n      }\r\n      setUserFound(true);\r\n    }\r\n  }, []);\r\n\r\n  const logout = useCallback(async () => {\r\n    OneSignal.removeExternalUserId()\r\n    await AsyncStorage.clear();\r\n    window.location.reload();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUser();\r\n  }, []);\r\n\r\n  //   Validate if submit is enabled after every state change\r\n  useEffect(() => {\r\n    // Reset Password state\r\n    if (\r\n      showSavePassword &&\r\n      currentPassword &&\r\n      newPassword &&\r\n      confirmNewPassword &&\r\n      !newPasswordValidError &&\r\n      !confirmNewPasswordError\r\n    ) {\r\n      setIsSubmitDisabled(false);\r\n      return;\r\n    }\r\n\r\n    // Logged in\r\n    if (\r\n      !showSavePassword &&\r\n      loggedIn &&\r\n      fullName &&\r\n      displayName &&\r\n      (fullName !== currentFullName || displayName !== currentDisplayName)\r\n    ) {\r\n      setIsSubmitDisabled(false);\r\n      return;\r\n    }\r\n\r\n    // Not logged in\r\n    if (\r\n      !loggedIn &&\r\n      email &&\r\n      fullName &&\r\n      displayName &&\r\n      password &&\r\n      confirmPassword &&\r\n      !emailValidError &&\r\n      !passwordValidError &&\r\n      !confirmPasswordError\r\n    ) {\r\n      setIsSubmitDisabled(false);\r\n      return;\r\n    }\r\n\r\n    setIsSubmitDisabled(true);\r\n  }, [\r\n    loggedIn,\r\n    email,\r\n    fullName,\r\n    displayName,\r\n    password,\r\n    confirmPassword,\r\n    emailValidError,\r\n    passwordValidError,\r\n    confirmPasswordError,\r\n    showSavePassword,\r\n    currentPassword,\r\n    newPassword,\r\n    confirmNewPassword,\r\n    newPasswordValidError,\r\n    confirmNewPasswordError,\r\n    currentDisplayName,\r\n    currentFullName\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (email && !validateEmail(email.toString().toLowerCase())) {\r\n      setEmailValidError(enterValidEmailError);\r\n      return;\r\n    }\r\n\r\n    setEmailValidError(\"\");\r\n  }, [email]);\r\n\r\n  useEffect(() => {\r\n    const validPasswrdRegex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n\r\n    if (password && !validPasswrdRegex.test(password)) {\r\n      setPasswordValidError(passwordInvalidError);\r\n      return;\r\n    }\r\n\r\n    setPasswordValidError(\"\");\r\n  }, [password]);\r\n\r\n  useEffect(() => {\r\n    if (password && confirmPassword && password !== confirmPassword) {\r\n      setConfirmPasswordError(passwordDoesNotMatchAlert);\r\n      return;\r\n    }\r\n\r\n    setConfirmPasswordError(\"\");\r\n  }, [password, confirmPassword]);\r\n\r\n  useEffect(() => {\r\n    const validPasswrdRegex = /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n\r\n    if (newPassword && !validPasswrdRegex.test(newPassword)) {\r\n      setNewPasswordValidError(passwordInvalidError);\r\n      return;\r\n    }\r\n\r\n    setNewPasswordValidError(\"\");\r\n  }, [newPassword]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      newPassword &&\r\n      confirmNewPassword &&\r\n      newPassword !== confirmNewPassword\r\n    ) {\r\n      setConfirmNewPasswordError(passwordDoesNotMatchAlert);\r\n      return;\r\n    }\r\n\r\n    setConfirmNewPasswordError(\"\");\r\n  }, [newPassword, confirmNewPassword]);\r\n\r\n  if (!userFound) {\r\n    return (\r\n      <View style={styles.screen} key={1}>\r\n        <View style={{ width: \"100%\", backgroundColor: \"white\" }}>\r\n          <View style={styles.colorBar}>\r\n            <Text style={{ fontSize: 22, color: \"#a2a2aa\" }}>\r\n              {PreferredLanguageText('internetRequiried')}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.screen} key={1}>\r\n      <ScrollView\r\n        style={{ width: \"100%\", backgroundColor: \"white\" }}\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        <Text\r\n          style={{\r\n            fontSize: 11,\r\n            paddingBottom: 20,\r\n            textTransform: \"uppercase\",\r\n            // paddingLeft: 10,\r\n            flex: 1,\r\n            lineHeight: 25\r\n          }}>\r\n          {!loggedIn ? PreferredLanguageText('backUp') : PreferredLanguageText('profile')}\r\n        </Text>\r\n        <Text\r\n          style={{\r\n            fontSize: 12,\r\n            paddingTop: 10,\r\n            color: \"#a2a2aa\",\r\n            fontFamily: \"overpass\",\r\n            paddingBottom: 25,\r\n            // textAlign: \"center\"\r\n          }}\r\n        >\r\n          {!loggedIn ? PreferredLanguageText('createAccount') : \"\"}\r\n        </Text>\r\n        {showSavePassword ? (\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              backgroundColor: \"white\",\r\n              paddingTop: 20,\r\n              paddingBottom: 20\r\n            }}\r\n          >\r\n            <Text style={{ color: \"#202025\", fontSize: 14, paddingBottom: 10 }}>\r\n              {PreferredLanguageText('currentPassword')}\r\n            </Text>\r\n            <TextInput\r\n              secureTextEntry={true}\r\n              value={currentPassword}\r\n              placeholder={\"\"}\r\n              onChangeText={val => setCurrentPassword(val)}\r\n              placeholderTextColor={\"#a2a2aa\"}\r\n            />\r\n            <Text style={{ color: \"#202025\", fontSize: 14, paddingBottom: 10 }}>\r\n              {PreferredLanguageText('newPassword')}\r\n            </Text>\r\n            <TextInput\r\n              secureTextEntry={true}\r\n              value={newPassword}\r\n              placeholder={\"\"}\r\n              onChangeText={val => setNewPassword(val)}\r\n              placeholderTextColor={\"#a2a2aa\"}\r\n              errorText={newPasswordValidError}\r\n              footerMessage={\r\n                PreferredLanguageText('atleast8char')\r\n              }\r\n            />\r\n            <Text style={{ color: \"#202025\", fontSize: 14, paddingBottom: 10 }}>\r\n              {PreferredLanguageText('confirmNewPassword')}\r\n            </Text>\r\n            <TextInput\r\n              secureTextEntry={true}\r\n              value={confirmNewPassword}\r\n              placeholder={\"\"}\r\n              onChangeText={val => setConfirmNewPassword(val)}\r\n              placeholderTextColor={\"#a2a2aa\"}\r\n              errorText={confirmNewPasswordError}\r\n            />\r\n          </View>\r\n        ) : (\r\n          <View\r\n            style={{\r\n              width: \"100%\",\r\n              backgroundColor: \"white\",\r\n              paddingTop: 20,\r\n              paddingBottom: 20\r\n            }}\r\n          >\r\n            <Text style={{ color: \"#202025\", fontSize: 14, paddingBottom: 10 }}>\r\n              {PreferredLanguageText('email')}\r\n            </Text>\r\n            <TextInput\r\n              editable={!loggedIn}\r\n              value={email}\r\n              placeholder={\"\"}\r\n              onChangeText={val => setEmail(val)}\r\n              placeholderTextColor={\"#a2a2aa\"}\r\n              required={true}\r\n              errorText={emailValidError}\r\n            />\r\n            <Text style={{ color: \"#202025\", fontSize: 14, paddingBottom: 10 }}>\r\n              {PreferredLanguageText('fullName')}\r\n            </Text>\r\n            <TextInput\r\n              value={fullName}\r\n              placeholder={\"\"}\r\n              onChangeText={val => setFullName(val)}\r\n              placeholderTextColor={\"#a2a2aa\"}\r\n              required={true}\r\n            />\r\n            <Text style={{ color: \"#202025\", fontSize: 14, paddingBottom: 10 }}>\r\n              {PreferredLanguageText('displayName')}\r\n            </Text>\r\n            <TextInput\r\n              value={displayName}\r\n              placeholder={\"\"}\r\n              onChangeText={val => setDisplayName(val)}\r\n              placeholderTextColor={\"#a2a2aa\"}\r\n              required={true}\r\n            />\r\n            {loggedIn ? null : (\r\n              <View>\r\n                <Text\r\n                  style={{ color: \"#202025\", fontSize: 14, paddingBottom: 10 }}\r\n                >\r\n                  {PreferredLanguageText('password')}\r\n                </Text>\r\n                <TextInput\r\n                  value={password}\r\n                  placeholder={\"\"}\r\n                  onChangeText={val => setPassword(val)}\r\n                  placeholderTextColor={\"#a2a2aa\"}\r\n                  secureTextEntry={true}\r\n                  required={true}\r\n                  footerMessage={\r\n                    PreferredLanguageText('atleast8char')\r\n                  }\r\n                  errorText={passwordValidError}\r\n                />\r\n                <Text\r\n                  style={{ color: \"#202025\", fontSize: 14, paddingBottom: 10 }}\r\n                >\r\n                  {PreferredLanguageText('confirmPassword')}\r\n                </Text>\r\n                <TextInput\r\n                  value={confirmPassword}\r\n                  placeholder={\"\"}\r\n                  onChangeText={val => setConfirmPassword(val)}\r\n                  placeholderTextColor={\"#a2a2aa\"}\r\n                  secureTextEntry={true}\r\n                  required={true}\r\n                  errorText={confirmPasswordError}\r\n                />\r\n              </View>\r\n            )}\r\n          </View>\r\n        )}\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            backgroundColor: \"white\",\r\n            justifyContent: \"center\",\r\n            display: \"flex\",\r\n            paddingTop: 30\r\n          }}\r\n        >\r\n          {loggedIn ? (\r\n            <TouchableOpacity\r\n              onPress={() => setShowSavePassword(!showSavePassword)}\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                overflow: \"hidden\",\r\n                height: 35,\r\n                marginTop: 15,\r\n                width: \"100%\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"row\"\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  lineHeight: 35,\r\n                  color: \"#202025\",\r\n                  fontSize: 12,\r\n                  backgroundColor: \"#f4f4f6\",\r\n                  paddingHorizontal: 25,\r\n                  fontFamily: \"inter\",\r\n                  height: 35,\r\n                  width: 150,\r\n                  borderRadius: 15,\r\n                  textTransform: \"uppercase\"\r\n                }}\r\n              >\r\n                {showSavePassword ? PreferredLanguageText('back') : PreferredLanguageText('password')}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ) : (\r\n            <View style={{ height: 50 }} />\r\n          )}\r\n          <TouchableOpacity\r\n            onPress={() => handleSubmit()}\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              overflow: \"hidden\",\r\n              height: 35,\r\n              marginTop: 15,\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"row\"\r\n            }}\r\n            disabled={isSubmitDisabled}\r\n          >\r\n            <Text\r\n              style={{\r\n                textAlign: \"center\",\r\n                lineHeight: 35,\r\n                color: \"white\",\r\n                fontSize: 12,\r\n                backgroundColor: \"#3B64F8\",\r\n                paddingHorizontal: 25,\r\n                fontFamily: \"inter\",\r\n                height: 35,\r\n                borderRadius: 15,\r\n                width: 150,\r\n                textTransform: \"uppercase\"\r\n              }}\r\n            >\r\n              {loggedIn ? (showSavePassword ? PreferredLanguageText('update') : PreferredLanguageText('save')) : PreferredLanguageText('signUp')}\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              if (loggedIn) {\r\n                logout();\r\n              } else {\r\n                window.location.reload();\r\n              }\r\n            }}\r\n            style={{\r\n              backgroundColor: \"white\",\r\n              overflow: \"hidden\",\r\n              height: 35,\r\n              marginTop: 15,\r\n              width: \"100%\",\r\n              justifyContent: \"center\",\r\n              flexDirection: \"row\",\r\n              marginBottom: 100\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                textAlign: \"center\",\r\n                lineHeight: 35,\r\n                color: \"#202025\",\r\n                fontSize: 12,\r\n                backgroundColor: \"#f4f4f6\",\r\n                paddingHorizontal: 25,\r\n                fontFamily: \"inter\",\r\n                height: 35,\r\n                width: 150,\r\n                borderRadius: 15,\r\n                textTransform: 'uppercase'\r\n              }}\r\n            >\r\n              {loggedIn ? PreferredLanguageText('logout') : PreferredLanguageText('login')}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ProfileControls;\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    paddingHorizontal: 20,\r\n    width: \"100%\",\r\n    maxWidth: 600,\r\n    height: Dimensions.get(\"window\").height - 75,\r\n    backgroundColor: \"white\"\r\n  },\r\n  outline: {\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    borderColor: \"#a2a2aa\"\r\n  },\r\n  all: {\r\n    fontSize: 15,\r\n    color: \"#a2a2aa\",\r\n    height: 22,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: \"white\"\r\n  },\r\n  allOutline: {\r\n    fontSize: 15,\r\n    color: \"#a2a2aa\",\r\n    height: 22,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    borderColor: \"#a2a2aa\"\r\n  },\r\n  colorBar: {\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"white\",\r\n    marginBottom: \"15%\",\r\n    lineHeight: 18,\r\n    paddingTop: 15\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}