{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\NewMessage.tsx\";\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"../components/Alert\";\nimport { Text, View, TouchableOpacity } from \"./Themed\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { fetchAPI } from \"../graphql/FetchAPI\";\nimport { getThreadCategories, createMessage, sendDirectMessage } from \"../graphql/QueriesAndMutations\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { RichEditor } from 'react-native-pell-rich-editor';\nimport FileUpload from \"./UploadFiles\";\nimport { PreferredLanguageText } from \"../helpers/LanguageContext\";\n\nvar NewMessage = function NewMessage(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isPrivate = _useState4[0],\n      setIsPrivate = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      anonymous = _useState6[0],\n      setAnonymous = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      customCategory = _useState8[0],\n      setCustomCategory = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      categories = _useState10[0],\n      setCategories = _useState10[1];\n\n  var RichText = useRef();\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      addCustomCategory = _useState12[0],\n      setAddCustomCategory = _useState12[1];\n\n  var _useState13 = useState(props.channelId),\n      _useState14 = _slicedToArray(_useState13, 1),\n      channelId = _useState14[0];\n\n  var _useState15 = useState(props.cueId),\n      _useState16 = _slicedToArray(_useState15, 1),\n      cueId = _useState16[0];\n\n  var _useState17 = useState(props.parentId),\n      _useState18 = _slicedToArray(_useState17, 1),\n      parentId = _useState18[0];\n\n  var now = new Date();\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      imported = _useState20[0],\n      setImported = _useState20[1];\n\n  var _useState21 = useState(''),\n      _useState22 = _slicedToArray(_useState21, 2),\n      url = _useState22[0],\n      setUrl = _useState22[1];\n\n  var _useState23 = useState(''),\n      _useState24 = _slicedToArray(_useState23, 2),\n      type = _useState24[0],\n      setType = _useState24[1];\n\n  var _useState25 = useState(''),\n      _useState26 = _slicedToArray(_useState25, 2),\n      title = _useState26[0],\n      setTitle = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      showImportOptions = _useState28[0],\n      setShowImportOptions = _useState28[1];\n\n  var unableToPostAlert = PreferredLanguageText('unableToPost');\n  var somethingWentWrongAlert = PreferredLanguageText('somethingWentWrong');\n  var checkConnectionAlert = PreferredLanguageText('checkConnection');\n  useEffect(function () {\n    if (message[0] === '{' && message[message.length - 1] === '}') {\n      var obj = JSON.parse(message);\n      setImported(true);\n      setUrl(obj.url);\n      setType(obj.type);\n    } else {\n      setImported(false);\n      setUrl('');\n      setType('');\n      setTitle('');\n    }\n  }, [message]);\n  var loadCategories = useCallback(function _callee() {\n    var server;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(channelId === undefined || channelId === null || channelId === '')) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            server = fetchAPI('');\n            server.query({\n              query: getThreadCategories,\n              variables: {\n                channelId: channelId\n              }\n            }).then(function (res) {\n              if (res.data.thread && res.data.thread.getChannelThreadCategories) {\n                setCategories(res.data.thread.getChannelThreadCategories);\n              }\n            }).catch(function (err) {});\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [channelId]);\n  var createDirectMessage = useCallback(function _callee2() {\n    var u, user, users, saveCue, obj, server;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            u = _context2.sent;\n\n            if (!(!message || message === '' || !u)) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            user = JSON.parse(u);\n            users = props.addUserId ? [user._id].concat(_toConsumableArray(props.users)) : props.users;\n            saveCue = '';\n\n            if (imported) {\n              obj = {\n                type: type,\n                url: url,\n                title: title\n              };\n              saveCue = JSON.stringify(obj);\n            } else {\n              saveCue = message;\n            }\n\n            server = fetchAPI('');\n            server.mutate({\n              mutation: sendDirectMessage,\n              variables: {\n                users: users,\n                message: saveCue,\n                channelId: props.channelId,\n                userId: user._id\n              }\n            }).then(function (res) {\n              if (res.data.message.create) {\n                props.back();\n              } else {\n                Alert(unableToPostAlert, checkConnectionAlert);\n              }\n            }).catch(function (err) {\n              Alert(somethingWentWrongAlert, checkConnectionAlert);\n            });\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [props.users, message, props.channelId, imported, type, title, url]);\n  var createThreadMessage = useCallback(function _callee3() {\n    var uString, user, saveCue, obj, server;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log('sending message', message);\n            console.log('type of', typeof message);\n\n            if (!(!message || message === '' || message === ' ' || message == '<div>&nbsp;</div>')) {\n              _context3.next = 4;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 4:\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 6:\n            uString = _context3.sent;\n            user = JSON.parse(uString);\n            saveCue = '';\n\n            if (imported) {\n              obj = {\n                type: type,\n                url: url,\n                title: title\n              };\n              saveCue = JSON.stringify(obj);\n            } else {\n              saveCue = message;\n            }\n\n            server = fetchAPI('');\n            server.mutate({\n              mutation: createMessage,\n              variables: {\n                message: saveCue,\n                userId: user._id,\n                channelId: channelId,\n                isPrivate: isPrivate,\n                anonymous: anonymous,\n                cueId: cueId === null ? 'NULL' : cueId,\n                parentId: parentId === null ? 'INIT' : parentId,\n                category: customCategory\n              }\n            }).then(function (res) {\n              if (res.data.thread.writeMessage) {\n                props.back();\n              } else {\n                Alert(unableToPostAlert, checkConnectionAlert);\n              }\n            }).catch(function (err) {\n              Alert(somethingWentWrongAlert, checkConnectionAlert);\n            });\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [message, customCategory, isPrivate, anonymous, cueId, channelId, parentId, props.back, imported, type, title, url]);\n  useEffect(function () {\n    if (!props.users) {\n      loadCategories();\n    }\n  }, [props.users]);\n  return React.createElement(View, {\n    style: {\n      width: '100%',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, parentId || props.users ? null : React.createElement(View, {\n    style: {\n      width: '100%',\n      backgroundColor: 'white',\n      display: 'flex',\n      flexDirection: 'row',\n      paddingBottom: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, React.createElement(TouchableOpacity, {\n    key: Math.random(),\n    style: {\n      backgroundColor: 'white'\n    },\n    onPress: function onPress() {\n      return props.back();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      lineHeight: 23\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, React.createElement(Ionicons, {\n    name: \"chevron-back-outline\",\n    size: 23,\n    color: '#202025',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  })))), React.createElement(View, {\n    style: styles.date,\n    onTouchStart: function onTouchStart() {\n      return Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#a2a2aa',\n      fontSize: 11,\n      lineHeight: 30,\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, now.toString().split(' ')[1] + ' ' + now.toString().split(' ')[2] + ', ' + now.toString().split(' ')[3]), showImportOptions && !imported ? null : React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      if (imported) {\n        setMessage('');\n        setTitle('');\n        setUrl('');\n        setType('');\n      }\n\n      setShowImportOptions(!showImportOptions);\n    },\n    style: {\n      alignSelf: 'flex-end',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#a2a2aa',\n      fontSize: 11,\n      lineHeight: 30,\n      textAlign: 'right',\n      paddingRight: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }, imported ? 'CLEAR' : 'IMPORT'))), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      paddingVertical: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, showImportOptions && !imported ? React.createElement(FileUpload, {\n    action: 'send',\n    back: function back() {\n      return setShowImportOptions(false);\n    },\n    onUpload: function onUpload(u, t) {\n      console.log(t);\n      var obj = {\n        url: u,\n        type: t,\n        title: title\n      };\n      setMessage(JSON.stringify(obj));\n      setShowImportOptions(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 25\n    }\n  }) : null), imported ? React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '40%',\n      alignSelf: 'flex-start',\n      marginLeft: '10%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, React.createElement(TextInput, {\n    value: title,\n    style: styles.input,\n    placeholder: 'Title',\n    onChangeText: function onChangeText(val) {\n      return setTitle(val);\n    },\n    placeholderTextColor: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      color: '#a2a2aa',\n      fontSize: 22,\n      paddingVertical: 50,\n      marginLeft: '10%',\n      paddingHorizontal: 5,\n      fontFamily: 'inter',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, React.createElement(Ionicons, {\n    name: \"document-outline\",\n    size: 50,\n    color: \"#a2a2aa\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 33\n    }\n  })))) : React.createElement(View, {\n    style: {\n      width: '100%',\n      minHeight: 100,\n      maxWidth: 500,\n      backgroundColor: 'white',\n      paddingBottom: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 23\n    }\n  }, React.createElement(RichEditor, {\n    disabled: false,\n    containerStyle: {\n      backgroundColor: '#f4f4f6',\n      borderRadius: 15,\n      padding: 3,\n      paddingTop: 5,\n      paddingBottom: 10,\n      minHeight: 100\n    },\n    ref: RichText,\n    style: {\n      width: '100%',\n      backgroundColor: '#f4f4f6',\n      borderRadius: 15,\n      minHeight: 100\n    },\n    editorStyle: {\n      backgroundColor: '#f4f4f6',\n      placeholderColor: '#a2a2aa',\n      color: '#202025',\n      contentCSSText: 'font-size: 13px;'\n    },\n    initialContentHTML: props.message,\n    onScroll: function onScroll() {\n      return Keyboard.dismiss();\n    },\n    placeholder: props.placeholder,\n    onChange: function onChange(text) {\n      var modifedText = text.split('&amp;').join('&');\n      setMessage(modifedText);\n    },\n    onBlur: function onBlur() {\n      return Keyboard.dismiss();\n    },\n    allowFileAccess: true,\n    allowFileAccessFromFileURLs: true,\n    allowUniversalAccessFromFileURLs: true,\n    allowsFullscreenVideo: true,\n    allowsInlineMediaPlayback: true,\n    allowsLinkPreview: true,\n    allowsBackForwardNavigationGestures: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  })), props.users ? null : React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  }, !cueId && !parentId ? React.createElement(View, {\n    style: {\n      width: '33.33%',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      paddingTop: 40,\n      paddingBottom: 10,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 41\n    }\n  }, PreferredLanguageText('category'))), React.createElement(View, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'row',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 37\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '85%',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 41\n    }\n  }, addCustomCategory ? React.createElement(View, {\n    style: styles.colorBar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 53\n    }\n  }, React.createElement(TextInput, {\n    value: customCategory,\n    style: styles.allOutline,\n    placeholder: 'Enter Category',\n    onChangeText: function onChangeText(val) {\n      setCustomCategory(val);\n    },\n    placeholderTextColor: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 57\n    }\n  })) : React.createElement(ScrollView, {\n    style: styles.colorBar,\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 53\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: customCategory === '' ? styles.allOutline : styles.all,\n    onPress: function onPress() {\n      setCustomCategory('');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 57\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: '#a2a2aa',\n      lineHeight: 20,\n      fontSize: 12\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 61\n    }\n  }, PreferredLanguageText('none'))), categories.map(function (category) {\n    return React.createElement(TouchableOpacity, {\n      key: Math.random(),\n      style: category === customCategory ? styles.allOutline : styles.all,\n      onPress: function onPress() {\n        setCustomCategory(category);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 72\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: '#a2a2aa',\n        lineHeight: 20,\n        fontSize: 12\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 69\n      }\n    }, category));\n  }))), React.createElement(View, {\n    style: {\n      width: '15%',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 41\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      if (addCustomCategory) {\n        setCustomCategory('');\n        setAddCustomCategory(false);\n      } else {\n        setCustomCategory('');\n        setAddCustomCategory(true);\n      }\n    },\n    style: {\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'right',\n      lineHeight: 20,\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 49\n    }\n  }, React.createElement(Ionicons, {\n    name: addCustomCategory ? 'close' : 'add',\n    size: 20,\n    color: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 53\n    }\n  })))))) : null, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 25\n    }\n  }, parentId ? null : parentId ? null : React.createElement(View, {\n    style: {\n      width: '33.33%',\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 45\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      paddingTop: 40,\n      paddingBottom: 10,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 49\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 12,\n      color: '#a2a2aa'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 53\n    }\n  }, PreferredLanguageText('private'))), React.createElement(Switch, {\n    value: isPrivate,\n    onValueChange: function onValueChange() {\n      return setIsPrivate(!isPrivate);\n    },\n    trackColor: {\n      false: '#f4f4f6',\n      true: '#a2a2aa'\n    },\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 49\n    }\n  })))), React.createElement(View, {\n    style: styles.footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      maxWidth: 500,\n      backgroundColor: 'white',\n      justifyContent: 'center',\n      display: 'flex',\n      flexDirection: 'row',\n      height: 50,\n      paddingTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      if (props.users) {\n        createDirectMessage();\n      } else {\n        createThreadMessage();\n      }\n    },\n    style: {\n      borderRadius: 15,\n      backgroundColor: 'white'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: 'center',\n      lineHeight: 35,\n      color: 'white',\n      fontSize: 12,\n      backgroundColor: '#3B64F8',\n      borderRadius: 15,\n      paddingHorizontal: 25,\n      overflow: 'hidden',\n      fontFamily: 'inter',\n      height: 35,\n      textTransform: 'uppercase',\n      placeHolder: 'hellll'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 25\n    }\n  }, props.users ? PreferredLanguageText('send') : parentId ? PreferredLanguageText('reply') : PreferredLanguageText('post'))))));\n};\n\nexport default NewMessage;\nvar styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    backgroundColor: 'white'\n  },\n  footer: {\n    width: '100%',\n    backgroundColor: 'white',\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: 80,\n    lineHeight: 18,\n    marginBottom: 25\n  },\n  date: {\n    width: '100%',\n    display: 'flex',\n    maxWidth: 500,\n    flexDirection: 'row',\n    paddingBottom: 4,\n    backgroundColor: 'white'\n  },\n  colorBar: {\n    width: '100%',\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    lineHeight: 20\n  },\n  col1: {\n    width: '50%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    paddingRight: 7.5\n  },\n  col2: {\n    width: '50%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    paddingLeft: 7.5\n  },\n  text: {\n    fontSize: 12,\n    color: '#a2a2aa',\n    textAlign: 'left'\n  },\n  input: {\n    width: '100%',\n    borderBottomColor: '#f4f4f6',\n    borderBottomWidth: 1,\n    fontSize: 12,\n    padding: 15,\n    paddingTop: 12,\n    paddingBottom: 12,\n    marginTop: 5,\n    marginBottom: 20\n  },\n  all: {\n    fontSize: 12,\n    color: '#a2a2aa',\n    height: 20,\n    paddingHorizontal: 10,\n    backgroundColor: 'white'\n  },\n  allOutline: {\n    fontSize: 12,\n    color: '#a2a2aa',\n    height: 22,\n    paddingHorizontal: 10,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#a2a2aa'\n  },\n  outline: {\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#a2a2aa'\n  }\n});","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/NewMessage.tsx"],"names":["React","useCallback","useEffect","useRef","useState","Alert","Text","View","TouchableOpacity","Ionicons","fetchAPI","getThreadCategories","createMessage","sendDirectMessage","AsyncStorage","RichEditor","FileUpload","PreferredLanguageText","NewMessage","props","message","setMessage","isPrivate","setIsPrivate","anonymous","setAnonymous","customCategory","setCustomCategory","categories","setCategories","RichText","addCustomCategory","setAddCustomCategory","channelId","cueId","parentId","now","Date","imported","setImported","url","setUrl","type","setType","title","setTitle","showImportOptions","setShowImportOptions","unableToPostAlert","somethingWentWrongAlert","checkConnectionAlert","length","obj","JSON","parse","loadCategories","undefined","server","query","variables","then","res","data","thread","getChannelThreadCategories","catch","err","createDirectMessage","getItem","u","user","users","addUserId","_id","saveCue","stringify","mutate","mutation","userId","create","back","createThreadMessage","console","log","uString","category","writeMessage","width","backgroundColor","display","flexDirection","paddingBottom","Math","random","lineHeight","styles","date","Keyboard","dismiss","color","fontSize","flex","toString","split","alignSelf","textAlign","paddingRight","paddingVertical","t","marginLeft","input","val","paddingHorizontal","fontFamily","minHeight","maxWidth","borderRadius","padding","paddingTop","placeholderColor","contentCSSText","placeholder","text","modifedText","join","colorBar","allOutline","all","map","false","true","height","footer","justifyContent","overflow","textTransform","placeHolder","StyleSheet","container","marginTop","marginBottom","col1","col2","paddingLeft","borderBottomColor","borderBottomWidth","borderWidth","borderColor","outline"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { Keyboard, StyleSheet, Switch, TextInput, ScrollView } from 'react-native';\r\nimport Alert from '../components/Alert'\r\nimport { Text, View, TouchableOpacity } from './Themed';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { fetchAPI } from '../graphql/FetchAPI';\r\nimport { getThreadCategories, createMessage, sendDirectMessage } from '../graphql/QueriesAndMutations';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { RichEditor } from 'react-native-pell-rich-editor';\r\n// import FileViewer from 'react-file-viewer';\r\nimport FileUpload from './UploadFiles';\r\nimport { PreferredLanguageText } from '../helpers/LanguageContext';\r\n\r\nconst NewMessage: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [isPrivate, setIsPrivate] = useState(false)\r\n    const [anonymous, setAnonymous] = useState(false)\r\n    const [customCategory, setCustomCategory] = useState('')\r\n    const [categories, setCategories] = useState([])\r\n    let RichText: any = useRef()\r\n    const [addCustomCategory, setAddCustomCategory] = useState(false)\r\n    const [channelId] = useState<any>(props.channelId)\r\n    const [cueId] = useState<any>(props.cueId)          // Null if Channel Thread. Not null if Cue Thread.\r\n    const [parentId] = useState<any>(props.parentId)    //  Null if new Thread. Not null if reply.\r\n    const now = new Date()\r\n\r\n    const [imported, setImported] = useState(false)\r\n    const [url, setUrl] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [title, setTitle] = useState('')\r\n\r\n    const [showImportOptions, setShowImportOptions] = useState(false)\r\n\r\n    const unableToPostAlert = PreferredLanguageText('unableToPost');\r\n    const somethingWentWrongAlert = PreferredLanguageText('somethingWentWrong');\r\n    const checkConnectionAlert = PreferredLanguageText('checkConnection');\r\n\r\n\r\n    useEffect(() => {\r\n        if (message[0] === '{' && message[message.length - 1] === '}') {\r\n            const obj = JSON.parse(message)\r\n            setImported(true)\r\n            setUrl(obj.url)\r\n            setType(obj.type)\r\n        } else {\r\n            setImported(false)\r\n            setUrl('')\r\n            setType('')\r\n            setTitle('')\r\n        }\r\n    }, [message])\r\n\r\n    const loadCategories = useCallback(async () => {\r\n        if (channelId === undefined || channelId === null || channelId === '') {\r\n            return;\r\n        }\r\n        const server = fetchAPI('')\r\n        server.query({\r\n            query: getThreadCategories,\r\n            variables: {\r\n                channelId\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (res.data.thread && res.data.thread.getChannelThreadCategories) {\r\n                    setCategories(res.data.thread.getChannelThreadCategories)\r\n                }\r\n            })\r\n            .catch(err => {\r\n            })\r\n    }, [channelId])\r\n\r\n    const createDirectMessage = useCallback(async () => {\r\n        const u = await AsyncStorage.getItem('user')\r\n        if (!message || message === '' || !u) {\r\n            return\r\n        }\r\n        const user = JSON.parse(u)\r\n        const users: any[] = props.addUserId ? (\r\n            [user._id, ...props.users]\r\n        ) : props.users\r\n        let saveCue = ''\r\n        if (imported) {\r\n            const obj = {\r\n                type,\r\n                url,\r\n                title\r\n            }\r\n            saveCue = JSON.stringify(obj)\r\n        } else {\r\n            saveCue = message\r\n        }\r\n        const server = fetchAPI('')\r\n        server.mutate({\r\n            mutation: sendDirectMessage,\r\n            variables: {\r\n                users,\r\n                message: saveCue,\r\n                channelId: props.channelId,\r\n                userId: user._id\r\n            }\r\n        }).then(res => {\r\n            if (res.data.message.create) {\r\n                props.back()\r\n            } else {\r\n                Alert(unableToPostAlert, checkConnectionAlert)\r\n            }\r\n        }).catch(err => {\r\n            Alert(somethingWentWrongAlert, checkConnectionAlert)\r\n        })\r\n    }, [props.users, message, props.channelId, imported, type, title, url])\r\n\r\n    const createThreadMessage = useCallback(async () => {\r\n        console.log('sending message', message)\r\n        console.log('type of', typeof message)\r\n        if (!message || message === '' || message === ' ' || message=='<div>&nbsp;</div>') {\r\n            return\r\n        }\r\n        const uString: any = await AsyncStorage.getItem('user')\r\n        const user = JSON.parse(uString)\r\n        let saveCue = ''\r\n        if (imported) {\r\n            const obj = {\r\n                type,\r\n                url,\r\n                title\r\n            }\r\n            saveCue = JSON.stringify(obj)\r\n        } else {\r\n            saveCue = message\r\n        }\r\n        const server = fetchAPI('')\r\n        server.mutate({\r\n            mutation: createMessage,\r\n            variables: {\r\n                message: saveCue,\r\n                userId: user._id,\r\n                channelId,\r\n                isPrivate,\r\n                anonymous,\r\n                cueId: cueId === null ? 'NULL' : cueId,\r\n                parentId: parentId === null ? 'INIT' : parentId,\r\n                category: customCategory\r\n            }\r\n        }).then(res => {\r\n            if (res.data.thread.writeMessage) {\r\n                props.back()\r\n            } else {\r\n                Alert(unableToPostAlert, checkConnectionAlert)\r\n            }\r\n        }).catch(err => {\r\n            Alert(somethingWentWrongAlert, checkConnectionAlert)\r\n        })\r\n\r\n    }, [message, customCategory, isPrivate, anonymous, cueId, channelId, parentId, props.back, imported, type, title, url])\r\n\r\n    useEffect(() => {\r\n        if (!props.users) {\r\n            loadCategories()\r\n        }\r\n    }, [props.users]);\r\n\r\n    return (\r\n        <View style={{\r\n            width: '100%',\r\n            backgroundColor: 'white',\r\n        }}>\r\n            {\r\n                parentId || props.users ? null :\r\n                    <View style={{ width: '100%', backgroundColor: 'white', display: 'flex', flexDirection: 'row', paddingBottom: 15 }}>\r\n                        <TouchableOpacity\r\n                            key={Math.random()}\r\n                            style={{\r\n                                backgroundColor: 'white'\r\n                            }}\r\n                            onPress={() => props.back()}>\r\n                            <Text style={{\r\n                                width: '100%',\r\n                                lineHeight: 23\r\n                            }}>\r\n                                <Ionicons name='chevron-back-outline' size={23} color={'#202025'} />\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n            }\r\n            <View style={styles.date} onTouchStart={() => Keyboard.dismiss()}>\r\n                <Text style={{\r\n                    color: '#a2a2aa',\r\n                    fontSize: 11,\r\n                    lineHeight: 30,\r\n                    flex: 1\r\n                }}>\r\n                    {\r\n                        now.toString().split(' ')[1] +\r\n                        ' ' +\r\n                        now.toString().split(' ')[2] +\r\n                        ', ' +\r\n                        now.toString().split(' ')[3]\r\n                    }\r\n                </Text>\r\n                {\r\n                    showImportOptions && !imported ? null :\r\n                        <TouchableOpacity\r\n                            onPress={() => {\r\n                                if (imported) {\r\n                                    setMessage('')\r\n                                    setTitle('')\r\n                                    setUrl('')\r\n                                    setType('')\r\n                                }\r\n                                setShowImportOptions(!showImportOptions)\r\n                            }}\r\n                            style={{ alignSelf: 'flex-end', flex: 1 }}\r\n                        >\r\n                            <Text style={{\r\n                                color: '#a2a2aa',\r\n                                fontSize: 11,\r\n                                lineHeight: 30,\r\n                                textAlign: 'right',\r\n                                paddingRight: 10,\r\n                            }}>\r\n                                {\r\n                                    imported ? 'CLEAR' : 'IMPORT'\r\n                                }\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                }\r\n            </View>\r\n            <View style={{ flexDirection: 'row', paddingVertical: 10 }}>\r\n                {\r\n                    showImportOptions && !imported ?\r\n                        <FileUpload\r\n                            action={'send'}\r\n                            back={() => setShowImportOptions(false)}\r\n                            onUpload={(u: any, t: any) => {\r\n                                console.log(t)\r\n                                const obj = { url: u, type: t, title }\r\n                                setMessage(JSON.stringify(obj))\r\n                                setShowImportOptions(false)\r\n                            }}\r\n                        /> : null\r\n                }\r\n            </View>\r\n            {\r\n                imported ?\r\n                    <View style={{ backgroundColor: 'white', flex: 1 }}>\r\n                        <View style={{ width: '40%', alignSelf: 'flex-start', marginLeft: '10%' }}>\r\n                            <TextInput\r\n                                value={title}\r\n                                style={styles.input}\r\n                                placeholder={'Title'}\r\n                                onChangeText={val => setTitle(val)}\r\n                                placeholderTextColor={'#a2a2aa'}\r\n                            />\r\n                        </View>\r\n                        <View>\r\n                            <Text style={{ width: '100%', color: '#a2a2aa', fontSize: 22, paddingVertical: 50, marginLeft: '10%', paddingHorizontal: 5, fontFamily: 'inter', flex: 1 }}>\r\n                                <Ionicons name='document-outline' size={50} color='#a2a2aa' />\r\n                            </Text>\r\n                        </View>\r\n                    </View>\r\n                    : <View style={{\r\n                        width: '100%',\r\n                        minHeight: 100,\r\n                        maxWidth: 500,\r\n                        backgroundColor: 'white',\r\n                        paddingBottom: 5\r\n                    }}>\r\n                        <RichEditor\r\n                            disabled={false}\r\n                            containerStyle={{\r\n                                backgroundColor: '#f4f4f6',\r\n                                borderRadius: 15,\r\n                                padding: 3,\r\n                                paddingTop: 5,\r\n                                paddingBottom: 10,\r\n                                minHeight: 100\r\n                            }}\r\n                            ref={RichText}\r\n                            style={{\r\n                                width: '100%',\r\n                                backgroundColor: '#f4f4f6',\r\n                                borderRadius: 15,\r\n                                minHeight: 100\r\n                            }}\r\n                            editorStyle={{\r\n                                backgroundColor: '#f4f4f6',\r\n                                placeholderColor: '#a2a2aa',\r\n                                color: '#202025',\r\n                                contentCSSText: 'font-size: 13px;'\r\n                            }}\r\n                            initialContentHTML={props.message}\r\n                            onScroll={() => Keyboard.dismiss()}\r\n                            placeholder={props.placeholder}\r\n                            onChange={(text) => {\r\n                                const modifedText = text.split('&amp;').join('&')\r\n                                setMessage(modifedText)\r\n                            }}\r\n                            onBlur={() => Keyboard.dismiss()}\r\n                            allowFileAccess={true}\r\n                            allowFileAccessFromFileURLs={true}\r\n                            allowUniversalAccessFromFileURLs={true}\r\n                            allowsFullscreenVideo={true}\r\n                            allowsInlineMediaPlayback={true}\r\n                            allowsLinkPreview={true}\r\n                            allowsBackForwardNavigationGestures={true}\r\n                        />\r\n                    </View>\r\n            }\r\n            {\r\n                props.users ? null :\r\n                    <View>\r\n                        {\r\n                            !cueId && !parentId ?\r\n                                <View style={{ width: '33.33%', backgroundColor: 'white' }}>\r\n                                    <View style={{ width: '100%', paddingTop: 40, paddingBottom: 10, backgroundColor: 'white' }}>\r\n                                        <Text style={{ fontSize: 12, color: '#a2a2aa' }}>\r\n                                            {PreferredLanguageText('category')}\r\n                                        </Text>\r\n                                    </View>\r\n                                    <View style={{ width: '100%', display: 'flex', flexDirection: 'row', backgroundColor: 'white' }}>\r\n                                        <View style={{ width: '85%', backgroundColor: 'white' }}>\r\n                                            {\r\n                                                addCustomCategory ?\r\n                                                    <View style={styles.colorBar}>\r\n                                                        <TextInput\r\n                                                            value={customCategory}\r\n                                                            style={styles.allOutline}\r\n                                                            placeholder={'Enter Category'}\r\n                                                            onChangeText={val => {\r\n                                                                setCustomCategory(val)\r\n                                                            }}\r\n                                                            placeholderTextColor={'#a2a2aa'}\r\n                                                        />\r\n                                                    </View> :\r\n                                                    <ScrollView style={styles.colorBar} horizontal={true} showsHorizontalScrollIndicator={false}>\r\n                                                        <TouchableOpacity\r\n                                                            style={customCategory === '' ? styles.allOutline : styles.all}\r\n                                                            onPress={() => {\r\n                                                                setCustomCategory('')\r\n                                                            }}>\r\n                                                            <Text style={{ color: '#a2a2aa', lineHeight: 20, fontSize: 12 }}>\r\n                                                                {PreferredLanguageText('none')}\r\n                                                            </Text>\r\n                                                        </TouchableOpacity>\r\n                                                        {\r\n                                                            categories.map((category) => {\r\n                                                                return <TouchableOpacity\r\n                                                                    key={Math.random()}\r\n                                                                    style={category === customCategory ? styles.allOutline : styles.all}\r\n                                                                    onPress={() => {\r\n                                                                        setCustomCategory(category)\r\n                                                                    }}>\r\n                                                                    <Text style={{ color: '#a2a2aa', lineHeight: 20, fontSize: 12 }}>\r\n                                                                        {category}\r\n                                                                    </Text>\r\n                                                                </TouchableOpacity>\r\n                                                            })\r\n                                                        }\r\n                                                    </ScrollView>}\r\n                                        </View>\r\n                                        <View style={{ width: '15%', backgroundColor: 'white' }}>\r\n                                            <TouchableOpacity\r\n                                                onPress={() => {\r\n                                                    if (addCustomCategory) {\r\n                                                        setCustomCategory('')\r\n                                                        setAddCustomCategory(false)\r\n                                                    } else {\r\n                                                        setCustomCategory('')\r\n                                                        setAddCustomCategory(true)\r\n                                                    }\r\n                                                }}\r\n                                                style={{ backgroundColor: 'white' }}>\r\n                                                <Text style={{ textAlign: 'right', lineHeight: 20, width: '100%' }}>\r\n                                                    <Ionicons name={addCustomCategory ? 'close' : 'add'} size={20} color={'#a2a2aa'} />\r\n                                                </Text>\r\n                                            </TouchableOpacity>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                                : null\r\n                        }\r\n                        <View style={{ flexDirection: 'row' }}>\r\n                            {/* <View style={{ width: '33.33%', backgroundColor: 'white' }}>\r\n                                <View style={{ width: '100%', paddingTop: 40, paddingBottom: 10, backgroundColor: 'white' }}>\r\n                                    <Text style={{ fontSize: 12, color: '#a2a2aa' }}>\r\n                                        {PreferredLanguageText('anonymous')}\r\n                                    </Text>\r\n                                </View>\r\n                                <Switch\r\n                                    value={anonymous}\r\n                                    onValueChange={() => setAnonymous(!anonymous)}\r\n                                    trackColor={{\r\n                                        false: '#f4f4f6',\r\n                                        true: '#a2a2aa'\r\n                                    }}\r\n                                    activeThumbColor='white'\r\n                                    style={{ height: 20 }}\r\n                                />\r\n                            </View> */}\r\n                            {\r\n                                parentId ? null :\r\n                                    (\r\n                                        parentId ? null :\r\n                                            <View style={{ width: '33.33%', backgroundColor: 'white' }}>\r\n                                                <View style={{ width: '100%', paddingTop: 40, paddingBottom: 10, backgroundColor: 'white' }}>\r\n                                                    <Text style={{ fontSize: 12, color: '#a2a2aa' }}>\r\n                                                        {PreferredLanguageText('private')}\r\n                                                    </Text>\r\n                                                </View>\r\n                                                <Switch\r\n                                                    value={isPrivate}\r\n                                                    onValueChange={() => setIsPrivate(!isPrivate)}\r\n                                                    trackColor={{\r\n                                                        false: '#f4f4f6',\r\n                                                        true: '#a2a2aa'\r\n                                                    }}\r\n                                                    // activeThumbColor='white'\r\n                                                    style={{ height: 20 }}\r\n                                                />\r\n                                            </View>\r\n                                    )\r\n                            }\r\n                        </View>\r\n                    </View>\r\n            }\r\n            <View style={styles.footer}>\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        maxWidth: 500,\r\n                        backgroundColor: 'white',\r\n                        justifyContent: 'center',\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        height: 50,\r\n                        paddingTop: 10,\r\n                    }}>\r\n                    <TouchableOpacity\r\n                        onPress={() => {\r\n                            if (props.users) {\r\n                                createDirectMessage()\r\n                            } else {\r\n                                createThreadMessage()\r\n                            }\r\n                        }}\r\n                        style={{\r\n                            borderRadius: 15,\r\n                            backgroundColor: 'white'\r\n                        }}>\r\n                        <Text style={{\r\n                            textAlign: 'center',\r\n                            lineHeight: 35,\r\n                            color: 'white',\r\n                            fontSize: 12,\r\n                            backgroundColor: '#3B64F8',\r\n                            borderRadius: 15,\r\n                            paddingHorizontal: 25,\r\n                            overflow: 'hidden',\r\n                            fontFamily: 'inter',\r\n                            height: 35,\r\n                            textTransform: 'uppercase',\r\n                            placeHolder: 'hellll',\r\n                        }}>\r\n                            {props.users ? PreferredLanguageText('send') : (parentId ? PreferredLanguageText('reply') : PreferredLanguageText('post'))}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        </View >\r\n    );\r\n}\r\n\r\nexport default NewMessage\r\n\r\nconst styles: any = StyleSheet.create({\r\n    container: {\r\n        width: '100%',\r\n        backgroundColor: 'white'\r\n    },\r\n    footer: {\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        marginTop: 80,\r\n        lineHeight: 18,\r\n        marginBottom: 25\r\n    },\r\n    date: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        maxWidth: 500,\r\n        flexDirection: 'row',\r\n        paddingBottom: 4,\r\n        backgroundColor: 'white'\r\n    },\r\n    colorBar: {\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        backgroundColor: 'white',\r\n        lineHeight: 20\r\n    },\r\n    col1: {\r\n        width: '50%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'white',\r\n        paddingRight: 7.5\r\n    },\r\n    col2: {\r\n        width: '50%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'white',\r\n        paddingLeft: 7.5\r\n    },\r\n    text: {\r\n        fontSize: 12,\r\n        color: '#a2a2aa',\r\n        textAlign: 'left'\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        borderBottomColor: '#f4f4f6',\r\n        borderBottomWidth: 1,\r\n        fontSize: 12,\r\n        padding: 15,\r\n        paddingTop: 12,\r\n        paddingBottom: 12,\r\n        marginTop: 5,\r\n        marginBottom: 20\r\n    },\r\n    all: {\r\n        fontSize: 12,\r\n        color: '#a2a2aa',\r\n        height: 20,\r\n        paddingHorizontal: 10,\r\n        backgroundColor: 'white'\r\n    },\r\n    allOutline: {\r\n        fontSize: 12,\r\n        color: '#a2a2aa',\r\n        height: 22,\r\n        paddingHorizontal: 10,\r\n        backgroundColor: 'white',\r\n        borderRadius: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#a2a2aa'\r\n    },\r\n    outline: {\r\n        borderRadius: 10,\r\n        borderWidth: 1,\r\n        borderColor: '#a2a2aa'\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"module"}