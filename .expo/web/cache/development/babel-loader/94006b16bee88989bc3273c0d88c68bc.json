{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\ThreadReplyCard.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, TouchableOpacity, View } from \"./Themed\";\nimport _ from 'lodash';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar ThreadReplyCard = function ThreadReplyCard(props) {\n  var styleObject = styles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imported = _useState2[0],\n      setImported = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      url = _useState4[0],\n      setUrl = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      type = _useState8[0],\n      setType = _useState8[1];\n\n  var _useState9 = useState('#a2a2aa'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      color = _useState10[0],\n      setColor = _useState10[1];\n\n  useEffect(function () {\n    if (props.thread.message[0] === '{' && props.thread.message[props.thread.message.length - 1] === '}') {\n      var obj = JSON.parse(props.thread.message);\n      setImported(true);\n      setUrl(obj.url);\n      setTitle(obj.title);\n      setType(obj.type);\n    } else {\n      setImported(false);\n      setUrl('');\n      setTitle('');\n      setType('');\n    }\n  }, [props.thread.message]);\n  var loadColor = useCallback(function _callee() {\n    var u, unparsedUser;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            u = _context.sent;\n\n            if (u) {\n              unparsedUser = JSON.parse(u);\n\n              if (props.channelCreatedBy.toString().trim() === props.thread.userId.toString().trim()) {\n                setColor('#3B64F8');\n              } else if (unparsedUser._id.toString().trim() === props.thread.userId.toString().trim()) {\n                setColor('#a2a2aa');\n              }\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [props.thread, props.channelCreatedBy]);\n  useEffect(function () {\n    loadColor();\n  }, []);\n  return React.createElement(View, {\n    key: 'textPage',\n    style: styleObject.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styleObject.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styleObject.dateContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styleObject.date,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, new Date(props.thread.time).toString().split(' ')[1] + ' ' + new Date(props.thread.time).toString().split(' ')[2]), React.createElement(Text, {\n    style: {\n      fontSize: 11,\n      fontWeight: 'bold',\n      color: color,\n      marginRight: 5,\n      flex: 1,\n      textAlign: 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, props.thread.anonymous ? 'Anonymous' : props.thread.displayName)), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      backgroundColor: '#f4f4f6'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#f4f4f6'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, imported ? React.createElement(\"a\", {\n    download: true,\n    href: url,\n    style: {\n      textDecoration: 'none'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: '#f4f4f6',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      color: '#a2a2aa',\n      fontSize: 15,\n      paddingHorizontal: 5,\n      fontFamily: 'inter',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }\n  }, React.createElement(Ionicons, {\n    name: \"document-outline\",\n    size: 17,\n    color: \"#a2a2aa\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 45\n    }\n  }), \" \", title, \".\", type))) : React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: props.thread.message\n    },\n    style: {\n      fontFamily: 'overpass',\n      color: '#202025',\n      fontSize: 14\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 35\n    }\n  })), props.isOwner ? React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: '#f4f4f6'\n    },\n    onPress: function onPress() {\n      return props.deleteThread();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      color: '#a2a2aa',\n      fontSize: 15,\n      paddingHorizontal: 5,\n      fontFamily: 'inter',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 33\n    }\n  }, React.createElement(Ionicons, {\n    name: \"trash-outline\",\n    size: 17,\n    color: props.index === 0 ? '#d91d56' : '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 37\n    }\n  }))) : null)));\n};\n\nexport default React.memo(ThreadReplyCard, function (prev, next) {\n  return _.isEqual(_objectSpread({}, prev.thread), _objectSpread({}, next.thread));\n});\n\nvar styles = function styles() {\n  return StyleSheet.create({\n    card: {\n      width: '100%',\n      maxWidth: 500,\n      borderRadius: 15,\n      padding: 13,\n      paddingBottom: 20,\n      backgroundColor: '#f4f4f6'\n    },\n    text: {\n      display: 'flex',\n      flexDirection: 'column',\n      flex: 1,\n      fontWeight: 'bold',\n      backgroundColor: '#f4f4f6'\n    },\n    dateContainer: {\n      fontSize: 10,\n      color: '#a2a2aa',\n      backgroundColor: '#f4f4f6',\n      display: 'flex',\n      flexDirection: 'row',\n      paddingBottom: 10\n    },\n    date: {\n      fontSize: 10,\n      color: '#a2a2aa',\n      marginLeft: 5\n    }\n  });\n};","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/ThreadReplyCard.tsx"],"names":["React","useCallback","useEffect","useState","Text","TouchableOpacity","View","_","Ionicons","AsyncStorage","ThreadReplyCard","props","styleObject","styles","imported","setImported","url","setUrl","title","setTitle","type","setType","color","setColor","thread","message","length","obj","JSON","parse","loadColor","getItem","u","unparsedUser","channelCreatedBy","toString","trim","userId","_id","card","text","dateContainer","date","Date","time","split","fontSize","fontWeight","marginRight","flex","textAlign","anonymous","displayName","flexDirection","backgroundColor","textDecoration","width","paddingHorizontal","fontFamily","__html","isOwner","deleteThread","index","memo","prev","next","isEqual","StyleSheet","create","maxWidth","borderRadius","padding","paddingBottom","display","marginLeft"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { Text, TouchableOpacity, View } from './Themed';\r\nimport _ from 'lodash'\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst ThreadReplyCard: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const styleObject = styles()\r\n    const [imported, setImported] = useState(false)\r\n    const [url, setUrl] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [color, setColor] = useState('#a2a2aa');\r\n\r\n    useEffect(() => {\r\n        if (props.thread.message[0] === '{' && props.thread.message[props.thread.message.length - 1] === '}') {\r\n            const obj = JSON.parse(props.thread.message)\r\n            setImported(true)\r\n            setUrl(obj.url)\r\n            setTitle(obj.title)\r\n            setType(obj.type)\r\n        } else {\r\n            setImported(false)\r\n            setUrl('')\r\n            setTitle('')\r\n            setType('')\r\n        }\r\n    }, [props.thread.message])\r\n\r\n    const loadColor = useCallback(async () => {\r\n        const u = await AsyncStorage.getItem('user')\r\n        if (u) {\r\n            const unparsedUser = JSON.parse(u)\r\n            if (props.channelCreatedBy.toString().trim() === props.thread.userId.toString().trim()) {\r\n                setColor('#3B64F8')\r\n            } else if (unparsedUser._id.toString().trim() === props.thread.userId.toString().trim()) {\r\n                setColor('#a2a2aa')\r\n            }\r\n        }\r\n    }, [props.thread, props.channelCreatedBy])\r\n\r\n    useEffect(() => {\r\n        loadColor()\r\n    }, [])\r\n\r\n    return (\r\n        <View\r\n            key={'textPage'}\r\n            style={styleObject.card}>\r\n            <View style={styleObject.text}>\r\n                <View style={styleObject.dateContainer}>\r\n                    <Text style={styleObject.date}>\r\n                        {\r\n                            (new Date(props.thread.time)).toString().split(' ')[1] +\r\n                            ' ' +\r\n                            (new Date(props.thread.time)).toString().split(' ')[2]\r\n                        }\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontSize: 11,\r\n                        fontWeight: 'bold',\r\n                        color,\r\n                        marginRight: 5,\r\n                        flex: 1,\r\n                        textAlign: 'right'\r\n                    }}>\r\n                        {props.thread.anonymous ? 'Anonymous' : props.thread.displayName}\r\n                    </Text>\r\n                </View>\r\n                <View style={{ flexDirection: 'row', backgroundColor: '#f4f4f6' }}>\r\n                    <View style={{ flex: 1, backgroundColor: '#f4f4f6' }}>\r\n                        {\r\n                            imported ?\r\n                                <a download={true} href={url} style={{ textDecoration: 'none' }}>\r\n                                    <View style={{ backgroundColor: '#f4f4f6', flex: 1 }}>\r\n                                        <Text style={{ width: '100%', color: '#a2a2aa', fontSize: 15, paddingHorizontal: 5, fontFamily: 'inter', flex: 1 }}>\r\n                                            <Ionicons name='document-outline' size={17} color='#a2a2aa' /> {title}.{type}\r\n                                        </Text>\r\n                                    </View>\r\n                                </a>\r\n                                : <div dangerouslySetInnerHTML={{ __html: props.thread.message }} style={{ fontFamily: 'overpass', color: '#202025', fontSize: 14 }} />\r\n                        }\r\n                    </View>\r\n                    {\r\n                        props.isOwner ?\r\n                            <TouchableOpacity style={{ backgroundColor: '#f4f4f6' }}\r\n                                onPress={() => props.deleteThread()}\r\n                            >\r\n                                <Text style={{ width: '100%', color: '#a2a2aa', fontSize: 15, paddingHorizontal: 5, fontFamily: 'inter', flex: 1 }}>\r\n                                    <Ionicons name='trash-outline' size={17} color={props.index === 0 ? '#d91d56' : '#a2a2aa'} />\r\n                                </Text>\r\n                            </TouchableOpacity> : null\r\n                    }\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default React.memo(ThreadReplyCard, (prev, next) => {\r\n    return _.isEqual({ ...prev.thread }, { ...next.thread })\r\n})\r\n\r\nconst styles: any = () => StyleSheet.create({\r\n    card: {\r\n        width: '100%',\r\n        maxWidth: 500,\r\n        borderRadius: 15,\r\n        padding: 13,\r\n        paddingBottom: 20,\r\n        backgroundColor: '#f4f4f6'\r\n    },\r\n    text: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 1,\r\n        fontWeight: 'bold',\r\n        backgroundColor: '#f4f4f6',\r\n    },\r\n    dateContainer: {\r\n        fontSize: 10,\r\n        color: '#a2a2aa',\r\n        backgroundColor: '#f4f4f6',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        paddingBottom: 10\r\n    },\r\n    date: {\r\n        fontSize: 10,\r\n        color: '#a2a2aa',\r\n        marginLeft: 5\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}