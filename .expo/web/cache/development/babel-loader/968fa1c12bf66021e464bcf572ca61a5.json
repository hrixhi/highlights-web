{"ast":null,"code":"var _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\navigation\\\\Navigator.tsx\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport Home from \"../screens/Home\";\nimport LinkingConfiguration from \"./Linking\";\nexport default function Navigation(_ref) {\n  var _this = this;\n\n  var colorScheme = _ref.colorScheme;\n  return React.createElement(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Root\",\n    options: {\n      title: 'My Notebook'\n    },\n    component: function component() {\n      return React.createElement(View, {\n        style: {\n          height: '100%',\n          width: '100%',\n          justifyContent: 'center',\n          flexDirection: 'row',\n          backgroundColor: 'white'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 28\n        }\n      }, React.createElement(Home, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NotFound\",\n    component: NotFoundScreen,\n    options: {\n      title: 'Oops!'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n}\nvar Stack = createStackNavigator();","map":{"version":3,"sources":["D:/p_projects/highlights-web/navigation/Navigator.tsx"],"names":["NavigationContainer","DefaultTheme","DarkTheme","createStackNavigator","React","NotFoundScreen","Home","LinkingConfiguration","Navigation","colorScheme","headerShown","title","height","width","justifyContent","flexDirection","backgroundColor","Stack"],"mappings":";AAAA,SAASA,mBAAT,EAA8BC,YAA9B,EAA4CC,SAA5C,QAA6D,0BAA7D;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAGA,OAAOC,cAAP;AAEA,OAAOC,IAAP;AACA,OAAOC,oBAAP;AAIA,eAAe,SAASC,UAAT,OAAuE;AAAA;;AAAA,MAAjDC,WAAiD,QAAjDA,WAAiD;AACpF,SACE,oBAAC,mBAAD;AACE,IAAA,OAAO,EAAEF,oBADX;AAEE,IAAA,KAAK,EAAEE,WAAW,KAAK,MAAhB,GAAyBP,SAAzB,GAAqCD,YAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,aAAa,EAAE;AAAES,MAAAA,WAAW,EAAE;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFX;AAGE,IAAA,SAAS,EAAE;AAAA,aAAM,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAC5BC,UAAAA,MAAM,EAAE,MADoB;AAE5BC,UAAAA,KAAK,EAAE,MAFqB;AAG5BC,UAAAA,cAAc,EAAE,QAHY;AAI5BC,UAAAA,aAAa,EAAE,KAJa;AAK5BC,UAAAA,eAAe,EAAE;AALW,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOf,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPe,CAAN;AAAA,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAiBE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEX,cAAzC;AAAyD,IAAA,OAAO,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CAHF,CADF;AA0BD;AAGD,IAAMM,KAAK,GAAGd,oBAAoB,EAAlC","sourcesContent":["import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport { ColorSchemeName, View } from 'react-native';\r\n\r\nimport NotFoundScreen from '../screens/NotFoundScreen';\r\nimport { RootStackParamList } from '../types';\r\nimport Home from '../screens/Home';\r\nimport LinkingConfiguration from './Linking';\r\n\r\n\r\n// Main stack navigator \r\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\r\n  return (\r\n    <NavigationContainer\r\n      linking={LinkingConfiguration}\r\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\r\n\r\n        {/* Main app is in here */}\r\n        <Stack.Screen\r\n          name=\"Root\"\r\n          options={{ title: 'My Notebook' }}\r\n          component={() => <View style={{\r\n            height: '100%',\r\n            width: '100%',\r\n            justifyContent: 'center',\r\n            flexDirection: 'row',\r\n            backgroundColor: 'white'\r\n          }}>\r\n            <Home />\r\n          </View>} />\r\n\r\n        {/* In case navigation ends up at a wrong location */}\r\n        <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\r\n\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\n// A root stack navigator is often used for displaying modals on top of all other content\r\nconst Stack = createStackNavigator<RootStackParamList>();\r\n"]},"metadata":{},"sourceType":"module"}