{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\ThreadCard.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, View, TouchableOpacity } from \"./Themed\";\nimport _ from 'lodash';\nimport { htmlStringParser } from \"../helpers/HTMLParser\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Ionicons } from '@expo/vector-icons';\n\nvar ThreadCard = function ThreadCard(props) {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState('#a2a2aa'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      color = _useState4[0],\n      setColor = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      subtitle = _useState6[0],\n      setSubtitle = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imported = _useState8[0],\n      setImported = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      url = _useState10[0],\n      setUrl = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      title = _useState12[0],\n      setTitle = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      type = _useState14[0],\n      setType = _useState14[1];\n\n  useEffect(function () {\n    if (props.thread.message[0] === '{' && props.thread.message[props.thread.message.length - 1] === '}') {\n      var obj = JSON.parse(props.thread.message);\n      setImported(true);\n      setUrl(obj.url);\n      setTitle(obj.title);\n      setType(obj.type);\n    } else {\n      var _htmlStringParser = htmlStringParser(props.thread.message),\n          t = _htmlStringParser.title,\n          s = _htmlStringParser.subtitle;\n\n      setTitle(t);\n      setSubtitle(s);\n      setImported(false);\n      setUrl('');\n      setType('');\n    }\n  }, [props.thread.message]);\n  var loadColor = useCallback(function _callee() {\n    var u, unparsedUser;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            u = _context.sent;\n\n            if (u) {\n              unparsedUser = JSON.parse(u);\n\n              if (props.channelCreatedBy.toString().trim() === props.thread.userId.toString().trim()) {\n                setColor('#3B64F8');\n              } else if (unparsedUser._id.toString().trim() === props.thread.userId.toString().trim()) {\n                setColor('#a2a2aa');\n              }\n            }\n\n            setLoading(false);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [props.thread, props.channelCreatedBy]);\n  useEffect(function () {\n    loadColor();\n  }, []);\n\n  if (loading) {\n    return null;\n  }\n\n  var styleObject = styles(color);\n  return React.createElement(View, {\n    style: styleObject.swiper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return props.onPress();\n    },\n    key: 'textPage',\n    style: styleObject.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styleObject.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styleObject.dateContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styleObject.date,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, new Date(props.thread.time).toString().split(' ')[1] + ' ' + new Date(props.thread.time).toString().split(' ')[2]), props.thread.isPrivate ? React.createElement(Text, {\n    style: styleObject.date,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, React.createElement(Ionicons, {\n    name: \"eye-off-outline\",\n    color: '#a2a2aa',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }\n  })) : null, React.createElement(Text, {\n    style: {\n      fontSize: 11,\n      fontWeight: 'bold',\n      color: color,\n      marginRight: 5,\n      flex: 1,\n      textAlign: 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, props.thread.anonymous ? 'Anonymous' : props.thread.displayName)), imported ? React.createElement(View, {\n    style: {\n      backgroundColor: '#f4f4f6',\n      flex: 1,\n      flexDirection: 'row',\n      paddingTop: 6\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      color: '#a2a2aa',\n      fontSize: 15,\n      paddingHorizontal: 5,\n      fontFamily: 'inter',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, React.createElement(Ionicons, {\n    name: \"document-outline\",\n    size: 17,\n    color: \"#a2a2aa\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }), \" \", title, \".\", type), React.createElement(Text, {\n    ellipsizeMode: 'tail',\n    numberOfLines: 1,\n    style: styleObject.titleArrow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, React.createElement(Ionicons, {\n    name: \"chevron-forward-outline\",\n    color: \"#a2a2aa\",\n    size: 20,\n    style: {\n      marginTop: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }))) : React.createElement(View, {\n    style: {\n      backgroundColor: '#f4f4f6',\n      width: '100%',\n      flexDirection: 'row',\n      display: 'flex'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 31\n    }\n  }, React.createElement(Text, {\n    ellipsizeMode: 'tail',\n    numberOfLines: 1,\n    style: styleObject.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, title), props.thread.unreadThreads !== 0 ? React.createElement(Text, {\n    style: {\n      width: 20,\n      height: 20,\n      borderRadius: 10,\n      backgroundColor: '#d91d56',\n      textAlign: 'center',\n      zIndex: 150,\n      marginLeft: 10,\n      marginTop: 7,\n      color: 'white',\n      lineHeight: 20,\n      fontSize: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 41\n    }\n  }, props.thread.unreadThreads) : null, React.createElement(Text, {\n    ellipsizeMode: 'tail',\n    numberOfLines: 1,\n    style: styleObject.titleArrow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, React.createElement(Ionicons, {\n    name: \"chevron-forward-outline\",\n    color: \"#a2a2aa\",\n    size: 20,\n    style: {\n      marginTop: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }))))));\n};\n\nexport default React.memo(ThreadCard, function (prev, next) {\n  return _.isEqual(_objectSpread({}, prev.thread), _objectSpread({}, next.thread));\n});\n\nvar styles = function styles() {\n  return StyleSheet.create({\n    swiper: {\n      height: '100%',\n      width: '100%',\n      maxWidth: 500,\n      borderRadius: 15,\n      overflow: 'hidden',\n      backgroundColor: 'white'\n    },\n    badge: {\n      width: 20,\n      height: 20,\n      borderRadius: 10,\n      backgroundColor: '#d91d56',\n      textAlign: 'center',\n      zIndex: 150,\n      marginLeft: 10\n    },\n    card: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 15,\n      padding: 13,\n      backgroundColor: '#f4f4f6'\n    },\n    text: {\n      display: 'flex',\n      flexDirection: 'column',\n      flex: 1,\n      backgroundColor: '#f4f4f6'\n    },\n    dateContainer: {\n      fontSize: 10,\n      height: '22%',\n      backgroundColor: '#f4f4f6',\n      display: 'flex',\n      flexDirection: 'row'\n    },\n    date: {\n      fontSize: 10,\n      color: '#a2a2aa',\n      marginLeft: 5\n    },\n    title: {\n      fontFamily: 'inter',\n      fontSize: 13,\n      paddingTop: 5,\n      color: '#202025',\n      flex: 1\n    },\n    titleArrow: {\n      fontFamily: 'inter',\n      fontSize: 13,\n      lineHeight: 20,\n      paddingTop: 5,\n      color: '#202025',\n      marginLeft: 10\n    },\n    description: {\n      fontSize: 13,\n      color: '#a2a2aa'\n    },\n    color: {\n      width: 10,\n      height: 10,\n      borderRadius: 10,\n      marginTop: 1\n    }\n  });\n};","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/ThreadCard.tsx"],"names":["React","useCallback","useEffect","useState","Text","View","TouchableOpacity","_","htmlStringParser","AsyncStorage","Ionicons","ThreadCard","props","loading","setLoading","color","setColor","subtitle","setSubtitle","imported","setImported","url","setUrl","title","setTitle","type","setType","thread","message","length","obj","JSON","parse","t","s","loadColor","getItem","u","unparsedUser","channelCreatedBy","toString","trim","userId","_id","styleObject","styles","swiper","onPress","card","text","dateContainer","date","Date","time","split","isPrivate","fontSize","fontWeight","marginRight","flex","textAlign","anonymous","displayName","backgroundColor","flexDirection","paddingTop","width","paddingHorizontal","fontFamily","titleArrow","marginTop","display","unreadThreads","height","borderRadius","zIndex","marginLeft","lineHeight","memo","prev","next","isEqual","StyleSheet","create","maxWidth","overflow","badge","padding","description"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { Text, View, TouchableOpacity } from './Themed';\r\nimport _ from 'lodash'\r\nimport { htmlStringParser } from '../helpers/HTMLParser';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst ThreadCard: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const [loading, setLoading] = useState(true)\r\n    const [color, setColor] = useState('#a2a2aa');\r\n    const [subtitle, setSubtitle] = useState('')\r\n\r\n    const [imported, setImported] = useState(false)\r\n    const [url, setUrl] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const [type, setType] = useState('')\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.thread.message[0] === '{' && props.thread.message[props.thread.message.length - 1] === '}') {\r\n            const obj = JSON.parse(props.thread.message)\r\n            setImported(true)\r\n            setUrl(obj.url)\r\n            setTitle(obj.title)\r\n            setType(obj.type)\r\n        } else {\r\n            const { title: t, subtitle: s } = htmlStringParser(props.thread.message)\r\n            setTitle(t)\r\n            setSubtitle(s)\r\n            setImported(false)\r\n            setUrl('')\r\n            setType('')\r\n        }\r\n    }, [props.thread.message])\r\n\r\n    const loadColor = useCallback(async () => {\r\n        const u = await AsyncStorage.getItem('user')\r\n        if (u) {\r\n            const unparsedUser = JSON.parse(u)\r\n            if (props.channelCreatedBy.toString().trim() === props.thread.userId.toString().trim()) {\r\n                setColor('#3B64F8')\r\n            } else if (unparsedUser._id.toString().trim() === props.thread.userId.toString().trim()) {\r\n                setColor('#a2a2aa')\r\n            }\r\n        }\r\n        setLoading(false)\r\n    }, [props.thread, props.channelCreatedBy])\r\n\r\n    useEffect(() => {\r\n        loadColor()\r\n    }, [])\r\n\r\n    if (loading) {\r\n        return null\r\n    }\r\n\r\n    const styleObject = styles(color)\r\n\r\n    return (\r\n        <View\r\n            style={styleObject.swiper}\r\n        >\r\n            <TouchableOpacity\r\n                onPress={() => props.onPress()}\r\n                key={'textPage'}\r\n                style={styleObject.card}>\r\n                <View style={styleObject.text}>\r\n                    <View style={styleObject.dateContainer}>\r\n                        <Text style={styleObject.date}>\r\n                            {\r\n                                (new Date(props.thread.time)).toString().split(' ')[1] +\r\n                                ' ' +\r\n                                (new Date(props.thread.time)).toString().split(' ')[2]\r\n                            }\r\n                        </Text>\r\n                        {\r\n                            props.thread.isPrivate ?\r\n                                <Text style={styleObject.date}>\r\n                                    <Ionicons name='eye-off-outline' color={'#a2a2aa'} />\r\n                                </Text> : null\r\n                        }\r\n                        <Text style={{\r\n                            fontSize: 11,\r\n                            fontWeight: 'bold',\r\n                            color,\r\n                            marginRight: 5,\r\n                            flex: 1,\r\n                            textAlign: 'right'\r\n                        }}>\r\n                            {props.thread.anonymous ? 'Anonymous' : props.thread.displayName}\r\n                        </Text>\r\n                    </View>\r\n                    {\r\n                        imported ?\r\n                            <View style={{ backgroundColor: '#f4f4f6', flex: 1, flexDirection: 'row', paddingTop: 6 }}>\r\n                                <Text style={{ width: '100%', color: '#a2a2aa', fontSize: 15, paddingHorizontal: 5, fontFamily: 'inter', flex: 1 }}>\r\n                                    <Ionicons name='document-outline' size={17} color='#a2a2aa' /> {title}.{type}\r\n                                </Text>\r\n                                <Text ellipsizeMode={'tail'}\r\n                                    numberOfLines={1}\r\n                                    style={styleObject.titleArrow}>\r\n                                    <Ionicons name=\"chevron-forward-outline\" color=\"#a2a2aa\" size={20} style={{ marginTop: 4 }} />\r\n                                </Text>\r\n                            </View>\r\n                            : <View style={{ backgroundColor: '#f4f4f6', width: '100%', flexDirection: 'row', display: 'flex' }}>\r\n                                <Text ellipsizeMode={'tail'}\r\n                                    numberOfLines={1}\r\n                                    style={styleObject.title}>\r\n                                    {title}\r\n                                </Text>\r\n                                {\r\n                                    props.thread.unreadThreads !== 0 ?\r\n                                        <Text style={{\r\n                                            width: 20,\r\n                                            height: 20,\r\n                                            borderRadius: 10,\r\n                                            backgroundColor: '#d91d56',\r\n                                            textAlign: 'center',\r\n                                            zIndex: 150,\r\n                                            marginLeft: 10,\r\n                                            marginTop: 7,\r\n                                            color: 'white', lineHeight: 20, fontSize: 10\r\n                                        }}>\r\n                                            {props.thread.unreadThreads}\r\n                                        </Text> : null\r\n                                }\r\n                                <Text ellipsizeMode={'tail'}\r\n                                    numberOfLines={1}\r\n                                    style={styleObject.titleArrow}>\r\n                                    <Ionicons name=\"chevron-forward-outline\" color=\"#a2a2aa\" size={20} style={{ marginTop: 4 }} />\r\n                                </Text>\r\n                            </View>\r\n                    }\r\n                    {/* <Text ellipsizeMode={'tail'}\r\n                        numberOfLines={1}\r\n                        style={styleObject.description}>\r\n                        {subtitle}\r\n                    </Text> */}\r\n                </View>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default React.memo(ThreadCard, (prev, next) => {\r\n    return _.isEqual({ ...prev.thread }, { ...next.thread })\r\n})\r\n\r\nconst styles: any = () => StyleSheet.create({\r\n    swiper: {\r\n        height: '100%',\r\n        width: '100%',\r\n        maxWidth: 500,\r\n        borderRadius: 15,\r\n        overflow: 'hidden',\r\n        backgroundColor: 'white'\r\n    },\r\n    badge: {\r\n        width: 20,\r\n        height: 20,\r\n        borderRadius: 10,\r\n        backgroundColor: '#d91d56',\r\n        textAlign: 'center',\r\n        zIndex: 150,\r\n        marginLeft: 10\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        width: '100%',\r\n        borderRadius: 15,\r\n        padding: 13,\r\n        backgroundColor: '#f4f4f6',\r\n    },\r\n    text: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 1,\r\n        backgroundColor: '#f4f4f6'\r\n    },\r\n    dateContainer: {\r\n        fontSize: 10,\r\n        height: '22%',\r\n        backgroundColor: '#f4f4f6',\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    date: {\r\n        fontSize: 10,\r\n        color: '#a2a2aa',\r\n        marginLeft: 5\r\n    },\r\n    title: {\r\n        fontFamily: 'inter',\r\n        fontSize: 13,\r\n        paddingTop: 5,\r\n        color: '#202025',\r\n        flex: 1\r\n    },\r\n    titleArrow: {\r\n        fontFamily: 'inter',\r\n        fontSize: 13,\r\n        lineHeight: 20,\r\n        paddingTop: 5,\r\n        color: '#202025',\r\n        marginLeft: 10\r\n    },\r\n    description: {\r\n        fontSize: 13,\r\n        color: '#a2a2aa',\r\n        // height: '30%',\r\n    },\r\n    color: {\r\n        width: 10,\r\n        height: 10,\r\n        borderRadius: 10,\r\n        marginTop: 1\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}