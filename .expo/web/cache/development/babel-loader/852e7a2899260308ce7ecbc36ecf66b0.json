{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\p_projects\\\\highlights-web\\\\components\\\\MessageCard.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, View } from \"./Themed\";\nimport _ from 'lodash';\nimport { Ionicons } from '@expo/vector-icons';\n\nvar MessageCard = function MessageCard(props) {\n  var styleObject = styles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      imported = _useState2[0],\n      setImported = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      url = _useState4[0],\n      setUrl = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      title = _useState6[0],\n      setTitle = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      type = _useState8[0],\n      setType = _useState8[1];\n\n  useEffect(function () {\n    if (props.message.message[0] === '{' && props.message.message[props.message.message.length - 1] === '}') {\n      var obj = JSON.parse(props.message.message);\n      setImported(true);\n      setUrl(obj.url);\n      setTitle(obj.title);\n      setType(obj.type);\n    } else {\n      setImported(false);\n      setUrl('');\n      setTitle('');\n      setType('');\n    }\n  }, [props.message.message]);\n  return React.createElement(View, {\n    key: 'textPage',\n    style: styleObject.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styleObject.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styleObject.dateContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styleObject.date,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, new Date(props.message.sentAt).toString().split(' ')[1] + ' ' + new Date(props.message.sentAt).toString().split(' ')[2]), React.createElement(Text, {\n    style: {\n      fontSize: 11,\n      fontWeight: 'bold',\n      color: props.user.displayName === props.message.displayName ? '#333333' : '#a2a2aa',\n      marginRight: 5,\n      flex: 1,\n      textAlign: 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, props.message.displayName)), imported ? React.createElement(\"a\", {\n    download: true,\n    href: url,\n    style: {\n      textDecoration: 'none'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: '#f4f4f6',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, React.createElement(Text, {\n    style: {\n      width: '100%',\n      color: '#a2a2aa',\n      fontSize: 15,\n      paddingHorizontal: 5,\n      fontFamily: 'inter',\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, React.createElement(Ionicons, {\n    name: \"document-outline\",\n    size: 17,\n    color: \"#a2a2aa\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }), \" \", title, \".\", type))) : React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: props.message.message\n    },\n    style: {\n      fontFamily: 'overpass',\n      color: '#202025',\n      fontSize: 14\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 27\n    }\n  })));\n};\n\nexport default React.memo(MessageCard, function (prev, next) {\n  return _.isEqual(_objectSpread({}, prev.thread), _objectSpread({}, next.thread));\n});\n\nvar styles = function styles() {\n  return StyleSheet.create({\n    card: {\n      width: '100%',\n      maxWidth: 500,\n      borderRadius: 15,\n      padding: 13,\n      paddingBottom: 20,\n      backgroundColor: '#f4f4f6'\n    },\n    text: {\n      display: 'flex',\n      flexDirection: 'column',\n      flex: 1,\n      fontWeight: 'bold',\n      backgroundColor: '#f4f4f6'\n    },\n    dateContainer: {\n      fontSize: 10,\n      color: '#a2a2aa',\n      backgroundColor: '#f4f4f6',\n      display: 'flex',\n      flexDirection: 'row',\n      paddingBottom: 10\n    },\n    date: {\n      fontSize: 10,\n      color: '#a2a2aa',\n      marginLeft: 5\n    }\n  });\n};","map":{"version":3,"sources":["D:/p_projects/highlights-web/components/MessageCard.tsx"],"names":["React","useEffect","useState","Text","View","_","Ionicons","MessageCard","props","styleObject","styles","imported","setImported","url","setUrl","title","setTitle","type","setType","message","length","obj","JSON","parse","card","text","dateContainer","date","Date","sentAt","toString","split","fontSize","fontWeight","color","user","displayName","marginRight","flex","textAlign","textDecoration","backgroundColor","width","paddingHorizontal","fontFamily","__html","memo","prev","next","isEqual","thread","StyleSheet","create","maxWidth","borderRadius","padding","paddingBottom","display","flexDirection","marginLeft"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { Text, View } from './Themed';\r\nimport _ from 'lodash'\r\nimport { Ionicons } from '@expo/vector-icons';\r\n// import HTMLView from 'react-native-htmlview';\r\n\r\nconst MessageCard: React.FunctionComponent<{ [label: string]: any }> = (props: any) => {\r\n\r\n    const styleObject = styles()\r\n\r\n    const [imported, setImported] = useState(false)\r\n    const [url, setUrl] = useState('')\r\n    const [title, setTitle] = useState('')\r\n    const [type, setType] = useState('')\r\n\r\n    useEffect(() => {\r\n        if (props.message.message[0] === '{' && props.message.message[props.message.message.length - 1] === '}') {\r\n            const obj = JSON.parse(props.message.message)\r\n            setImported(true)\r\n            setUrl(obj.url)\r\n            setTitle(obj.title)\r\n            setType(obj.type)\r\n        } else {\r\n            setImported(false)\r\n            setUrl('')\r\n            setTitle('')\r\n            setType('')\r\n        }\r\n    }, [props.message.message])\r\n\r\n    return (\r\n        <View\r\n            key={'textPage'}\r\n            style={styleObject.card}>\r\n            <View style={styleObject.text}>\r\n                <View style={styleObject.dateContainer}>\r\n                    <Text style={styleObject.date}>\r\n                        {\r\n                            (new Date(props.message.sentAt)).toString().split(' ')[1] +\r\n                            ' ' +\r\n                            (new Date(props.message.sentAt)).toString().split(' ')[2]\r\n                        }\r\n                    </Text>\r\n                    <Text style={{\r\n                        fontSize: 11,\r\n                        fontWeight: 'bold',\r\n                        color: props.user.displayName === props.message.displayName ? '#333333' : '#a2a2aa',\r\n                        marginRight: 5,\r\n                        flex: 1,\r\n                        textAlign: 'right'\r\n                    }}>\r\n                        {props.message.displayName}\r\n                    </Text>\r\n                </View>\r\n                {\r\n                    imported ?\r\n                        <a download={true} href={url} style={{ textDecoration: 'none' }}>\r\n                            <View style={{ backgroundColor: '#f4f4f6', flex: 1 }}>\r\n                                <Text style={{ width: '100%', color: '#a2a2aa', fontSize: 15, paddingHorizontal: 5, fontFamily: 'inter', flex: 1 }}>\r\n                                    <Ionicons name='document-outline' size={17} color='#a2a2aa' /> {title}.{type}\r\n                                </Text>\r\n                            </View>\r\n                        </a>\r\n                        : <div dangerouslySetInnerHTML={{ __html: props.message.message }} style={{ fontFamily: 'overpass', color: '#202025', fontSize: 14 }} />\r\n\r\n                }\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default React.memo(MessageCard, (prev, next) => {\r\n    return _.isEqual({ ...prev.thread }, { ...next.thread })\r\n})\r\n\r\nconst styles: any = () => StyleSheet.create({\r\n    card: {\r\n        width: '100%',\r\n        maxWidth: 500,\r\n        borderRadius: 15,\r\n        padding: 13,\r\n        paddingBottom: 20,\r\n        backgroundColor: '#f4f4f6'\r\n    },\r\n    text: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flex: 1,\r\n        fontWeight: 'bold',\r\n        backgroundColor: '#f4f4f6',\r\n    },\r\n    dateContainer: {\r\n        fontSize: 10,\r\n        color: '#a2a2aa',\r\n        backgroundColor: '#f4f4f6',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        paddingBottom: 10\r\n    },\r\n    date: {\r\n        fontSize: 10,\r\n        color: '#a2a2aa',\r\n        marginLeft: 5\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}